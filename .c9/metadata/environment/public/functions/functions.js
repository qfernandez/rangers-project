{"filter":false,"title":"functions.js","tooltip":"/public/functions/functions.js","undoManager":{"mark":21,"position":21,"stack":[[{"start":{"row":0,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["$(document).ready(function(){","   $('[data-toggle=\"offcanvas\"]').click(function(){","       $(\"#navigation\").toggleClass(\"hidden-xs\");","   });","});","",""],"id":1}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["c"],"id":2},{"start":{"row":6,"column":1},"end":{"row":6,"column":2},"action":"insert","lines":["a"]},{"start":{"row":6,"column":2},"end":{"row":6,"column":3},"action":"insert","lines":["l"]},{"start":{"row":6,"column":3},"end":{"row":6,"column":4},"action":"insert","lines":["e"]},{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":["n"]},{"start":{"row":6,"column":5},"end":{"row":6,"column":6},"action":"insert","lines":["d"]},{"start":{"row":6,"column":6},"end":{"row":6,"column":7},"action":"insert","lines":["a"]},{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"insert","lines":["r"]}],[{"start":{"row":6,"column":8},"end":{"row":6,"column":9},"action":"insert","lines":[" "],"id":3},{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["f"]},{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"insert","lines":["u"]},{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"insert","lines":["n"]},{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"insert","lines":["c"]},{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"insert","lines":["t"]},{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["i"]},{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"insert","lines":["o"]},{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"insert","lines":["n"]}],[{"start":{"row":6,"column":17},"end":{"row":6,"column":18},"action":"insert","lines":["s"],"id":4}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":3},"action":"insert","lines":["// "],"id":5}],[{"start":{"row":6,"column":3},"end":{"row":6,"column":21},"action":"remove","lines":["calendar functions"],"id":6},{"start":{"row":6,"column":3},"end":{"row":7,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":7,"column":0},"end":{"row":6115,"column":0},"action":"insert","lines":["/*!"," * FullCalendar v1.6.4"," * Docs & License: http://arshaw.com/fullcalendar/"," * (c) 2013 Adam Shaw"," */","","/*"," * Use fullcalendar.css for basic styling."," * For event drag & drop, requires jQuery UI draggable."," * For event resizing, requires jQuery UI resizable."," */"," ","(function($, undefined) {","","",";;","","var defaults = {","","\t// display","\tdefaultView: 'month',","\taspectRatio: 1.35,","\theader: {","\t\tleft: 'title',","\t\tcenter: '',","\t\tright: 'today prev,next'","\t},","\tweekends: true,","\tweekNumbers: false,","\tweekNumberCalculation: 'iso',","\tweekNumberTitle: 'W',","\t","\t// editing","\t//editable: false,","\t//disableDragging: false,","\t//disableResizing: false,","\t","\tallDayDefault: true,","\tignoreTimezone: true,","\t","\t// event ajax","\tlazyFetching: true,","\tstartParam: 'start',","\tendParam: 'end',","\t","\t// time formats","\ttitleFormat: {","\t\tmonth: 'MMMM yyyy',","\t\tweek: \"MMM d[ yyyy]{ '—'[ MMM] d yyyy}\",","\t\tday: 'dddd, MMM d, yyyy'","\t},","\tcolumnFormat: {","\t\tmonth: 'ddd',","\t\tweek: 'ddd M/d',","\t\tday: 'dddd M/d'","\t},","\ttimeFormat: { // for event elements","\t\t'': 'h(:mm)t' // default","\t},","\t","\t// locale","\tisRTL: false,","\tfirstDay: 0,","\tmonthNames: ['January','February','March','April','May','June','July','August','September','October','November','December'],","\tmonthNamesShort: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],","\tdayNames: ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],","\tdayNamesShort: ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],","\tbuttonText: {","\t\tprev: \"<span class='fc-text-arrow'>‹</span>\",","\t\tnext: \"<span class='fc-text-arrow'>›</span>\",","\t\tprevYear: \"<span class='fc-text-arrow'>«</span>\",","\t\tnextYear: \"<span class='fc-text-arrow'>»</span>\",","\t\ttoday: 'today',","\t\tmonth: 'month',","\t\tweek: 'week',","\t\tday: 'day'","\t},","\t","\t// jquery-ui theming","\ttheme: false,","\tbuttonIcons: {","\t\tprev: 'circle-triangle-w',","\t\tnext: 'circle-triangle-e'","\t},","\t","\t//selectable: false,","\tunselectAuto: true,","\t","\tdropAccept: '*',","\t","\thandleWindowResize: true","\t","};","","// right-to-left defaults","var rtlDefaults = {","\theader: {","\t\tleft: 'next,prev today',","\t\tcenter: '',","\t\tright: 'title'","\t},","\tbuttonText: {","\t\tprev: \"<span class='fc-text-arrow'>›</span>\",","\t\tnext: \"<span class='fc-text-arrow'>‹</span>\",","\t\tprevYear: \"<span class='fc-text-arrow'>»</span>\",","\t\tnextYear: \"<span class='fc-text-arrow'>«</span>\"","\t},","\tbuttonIcons: {","\t\tprev: 'circle-triangle-e',","\t\tnext: 'circle-triangle-w'","\t}","};","","","",";;","","var fc = $.fullCalendar = { version: \"1.6.4\" };","var fcViews = fc.views = {};","","","$.fn.fullCalendar = function(options) {","","","\t// method calling","\tif (typeof options == 'string') {","\t\tvar args = Array.prototype.slice.call(arguments, 1);","\t\tvar res;","\t\tthis.each(function() {","\t\t\tvar calendar = $.data(this, 'fullCalendar');","\t\t\tif (calendar && $.isFunction(calendar[options])) {","\t\t\t\tvar r = calendar[options].apply(calendar, args);","\t\t\t\tif (res === undefined) {","\t\t\t\t\tres = r;","\t\t\t\t}","\t\t\t\tif (options == 'destroy') {","\t\t\t\t\t$.removeData(this, 'fullCalendar');","\t\t\t\t}","\t\t\t}","\t\t});","\t\tif (res !== undefined) {","\t\t\treturn res;","\t\t}","\t\treturn this;","\t}","","\toptions = options || {};","\t","\t// would like to have this logic in EventManager, but needs to happen before options are recursively extended","\tvar eventSources = options.eventSources || [];","\tdelete options.eventSources;","\tif (options.events) {","\t\teventSources.push(options.events);","\t\tdelete options.events;","\t}","\t","","\toptions = $.extend(true, {},","\t\tdefaults,","\t\t(options.isRTL || options.isRTL===undefined && defaults.isRTL) ? rtlDefaults : {},","\t\toptions","\t);","\t","\t","\tthis.each(function(i, _element) {","\t\tvar element = $(_element);","\t\tvar calendar = new Calendar(element, options, eventSources);","\t\telement.data('fullCalendar', calendar); // TODO: look into memory leak implications","\t\tcalendar.render();","\t});","\t","\t","\treturn this;","\t","};","","","// function for adding/overriding defaults","function setDefaults(d) {","\t$.extend(true, defaults, d);","}","","","",";;",""," ","function Calendar(element, options, eventSources) {","\tvar t = this;","\t","\t","\t// exports","\tt.options = options;","\tt.render = render;","\tt.destroy = destroy;","\tt.refetchEvents = refetchEvents;","\tt.reportEvents = reportEvents;","\tt.reportEventChange = reportEventChange;","\tt.rerenderEvents = rerenderEvents;","\tt.changeView = changeView;","\tt.select = select;","\tt.unselect = unselect;","\tt.prev = prev;","\tt.next = next;","\tt.prevYear = prevYear;","\tt.nextYear = nextYear;","\tt.today = today;","\tt.gotoDate = gotoDate;","\tt.incrementDate = incrementDate;","\tt.formatDate = function(format, date) { return formatDate(format, date, options) };","\tt.formatDates = function(format, date1, date2) { return formatDates(format, date1, date2, options) };","\tt.getDate = getDate;","\tt.getView = getView;","\tt.option = option;","\tt.trigger = trigger;","\t","\t","\t// imports","\tEventManager.call(t, options, eventSources);","\tvar isFetchNeeded = t.isFetchNeeded;","\tvar fetchEvents = t.fetchEvents;","\t","\t","\t// locals","\tvar _element = element[0];","\tvar header;","\tvar headerElement;","\tvar content;","\tvar tm; // for making theme classes","\tvar currentView;","\tvar elementOuterWidth;","\tvar suggestedViewHeight;","\tvar resizeUID = 0;","\tvar ignoreWindowResize = 0;","\tvar date = new Date();","\tvar events = [];","\tvar _dragElement;","\t","\t","\t","\t/* Main Rendering","\t-----------------------------------------------------------------------------*/","\t","\t","\tsetYMD(date, options.year, options.month, options.date);","\t","\t","\tfunction render(inc) {","\t\tif (!content) {","\t\t\tinitialRender();","\t\t}","\t\telse if (elementVisible()) {","\t\t\t// mainly for the public API","\t\t\tcalcSize();","\t\t\t_renderView(inc);","\t\t}","\t}","\t","\t","\tfunction initialRender() {","\t\ttm = options.theme ? 'ui' : 'fc';","\t\telement.addClass('fc');","\t\tif (options.isRTL) {","\t\t\telement.addClass('fc-rtl');","\t\t}","\t\telse {","\t\t\telement.addClass('fc-ltr');","\t\t}","\t\tif (options.theme) {","\t\t\telement.addClass('ui-widget');","\t\t}","","\t\tcontent = $(\"<div class='fc-content' style='position:relative'/>\")","\t\t\t.prependTo(element);","","\t\theader = new Header(t, options);","\t\theaderElement = header.render();","\t\tif (headerElement) {","\t\t\telement.prepend(headerElement);","\t\t}","","\t\tchangeView(options.defaultView);","","\t\tif (options.handleWindowResize) {","\t\t\t$(window).resize(windowResize);","\t\t}","","\t\t// needed for IE in a 0x0 iframe, b/c when it is resized, never triggers a windowResize","\t\tif (!bodyVisible()) {","\t\t\tlateRender();","\t\t}","\t}","\t","\t","\t// called when we know the calendar couldn't be rendered when it was initialized,","\t// but we think it's ready now","\tfunction lateRender() {","\t\tsetTimeout(function() { // IE7 needs this so dimensions are calculated correctly","\t\t\tif (!currentView.start && bodyVisible()) { // !currentView.start makes sure this never happens more than once","\t\t\t\trenderView();","\t\t\t}","\t\t},0);","\t}","\t","\t","\tfunction destroy() {","","\t\tif (currentView) {","\t\t\ttrigger('viewDestroy', currentView, currentView, currentView.element);","\t\t\tcurrentView.triggerEventDestroy();","\t\t}","","\t\t$(window).unbind('resize', windowResize);","","\t\theader.destroy();","\t\tcontent.remove();","\t\telement.removeClass('fc fc-rtl ui-widget');","\t}","\t","\t","\tfunction elementVisible() {","\t\treturn element.is(':visible');","\t}","\t","\t","\tfunction bodyVisible() {","\t\treturn $('body').is(':visible');","\t}","\t","\t","\t","\t/* View Rendering","\t-----------------------------------------------------------------------------*/","\t","","\tfunction changeView(newViewName) {","\t\tif (!currentView || newViewName != currentView.name) {","\t\t\t_changeView(newViewName);","\t\t}","\t}","","","\tfunction _changeView(newViewName) {","\t\tignoreWindowResize++;","","\t\tif (currentView) {","\t\t\ttrigger('viewDestroy', currentView, currentView, currentView.element);","\t\t\tunselect();","\t\t\tcurrentView.triggerEventDestroy(); // trigger 'eventDestroy' for each event","\t\t\tfreezeContentHeight();","\t\t\tcurrentView.element.remove();","\t\t\theader.deactivateButton(currentView.name);","\t\t}","","\t\theader.activateButton(newViewName);","","\t\tcurrentView = new fcViews[newViewName](","\t\t\t$(\"<div class='fc-view fc-view-\" + newViewName + \"' style='position:relative'/>\")","\t\t\t\t.appendTo(content),","\t\t\tt // the calendar object","\t\t);","","\t\trenderView();","\t\tunfreezeContentHeight();","","\t\tignoreWindowResize--;","\t}","","","\tfunction renderView(inc) {","\t\tif (","\t\t\t!currentView.start || // never rendered before","\t\t\tinc || date < currentView.start || date >= currentView.end // or new date range","\t\t) {","\t\t\tif (elementVisible()) {","\t\t\t\t_renderView(inc);","\t\t\t}","\t\t}","\t}","","","\tfunction _renderView(inc) { // assumes elementVisible","\t\tignoreWindowResize++;","","\t\tif (currentView.start) { // already been rendered?","\t\t\ttrigger('viewDestroy', currentView, currentView, currentView.element);","\t\t\tunselect();","\t\t\tclearEvents();","\t\t}","","\t\tfreezeContentHeight();","\t\tcurrentView.render(date, inc || 0); // the view's render method ONLY renders the skeleton, nothing else","\t\tsetSize();","\t\tunfreezeContentHeight();","\t\t(currentView.afterRender || noop)();","","\t\tupdateTitle();","\t\tupdateTodayButton();","","\t\ttrigger('viewRender', currentView, currentView, currentView.element);","\t\tcurrentView.trigger('viewDisplay', _element); // deprecated","","\t\tignoreWindowResize--;","","\t\tgetAndRenderEvents();","\t}","\t","\t","","\t/* Resizing","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction updateSize() {","\t\tif (elementVisible()) {","\t\t\tunselect();","\t\t\tclearEvents();","\t\t\tcalcSize();","\t\t\tsetSize();","\t\t\trenderEvents();","\t\t}","\t}","\t","\t","\tfunction calcSize() { // assumes elementVisible","\t\tif (options.contentHeight) {","\t\t\tsuggestedViewHeight = options.contentHeight;","\t\t}","\t\telse if (options.height) {","\t\t\tsuggestedViewHeight = options.height - (headerElement ? headerElement.height() : 0) - vsides(content);","\t\t}","\t\telse {","\t\t\tsuggestedViewHeight = Math.round(content.width() / Math.max(options.aspectRatio, .5));","\t\t}","\t}","\t","\t","\tfunction setSize() { // assumes elementVisible","","\t\tif (suggestedViewHeight === undefined) {","\t\t\tcalcSize(); // for first time","\t\t\t\t// NOTE: we don't want to recalculate on every renderView because","\t\t\t\t// it could result in oscillating heights due to scrollbars.","\t\t}","","\t\tignoreWindowResize++;","\t\tcurrentView.setHeight(suggestedViewHeight);","\t\tcurrentView.setWidth(content.width());","\t\tignoreWindowResize--;","","\t\telementOuterWidth = element.outerWidth();","\t}","\t","\t","\tfunction windowResize() {","\t\tif (!ignoreWindowResize) {","\t\t\tif (currentView.start) { // view has already been rendered","\t\t\t\tvar uid = ++resizeUID;","\t\t\t\tsetTimeout(function() { // add a delay","\t\t\t\t\tif (uid == resizeUID && !ignoreWindowResize && elementVisible()) {","\t\t\t\t\t\tif (elementOuterWidth != (elementOuterWidth = element.outerWidth())) {","\t\t\t\t\t\t\tignoreWindowResize++; // in case the windowResize callback changes the height","\t\t\t\t\t\t\tupdateSize();","\t\t\t\t\t\t\tcurrentView.trigger('windowResize', _element);","\t\t\t\t\t\t\tignoreWindowResize--;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}, 200);","\t\t\t}else{","\t\t\t\t// calendar must have been initialized in a 0x0 iframe that has just been resized","\t\t\t\tlateRender();","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Event Fetching/Rendering","\t-----------------------------------------------------------------------------*/","\t// TODO: going forward, most of this stuff should be directly handled by the view","","","\tfunction refetchEvents() { // can be called as an API method","\t\tclearEvents();","\t\tfetchAndRenderEvents();","\t}","","","\tfunction rerenderEvents(modifiedEventID) { // can be called as an API method","\t\tclearEvents();","\t\trenderEvents(modifiedEventID);","\t}","","","\tfunction renderEvents(modifiedEventID) { // TODO: remove modifiedEventID hack","\t\tif (elementVisible()) {","\t\t\tcurrentView.setEventData(events); // for View.js, TODO: unify with renderEvents","\t\t\tcurrentView.renderEvents(events, modifiedEventID); // actually render the DOM elements","\t\t\tcurrentView.trigger('eventAfterAllRender');","\t\t}","\t}","","","\tfunction clearEvents() {","\t\tcurrentView.triggerEventDestroy(); // trigger 'eventDestroy' for each event","\t\tcurrentView.clearEvents(); // actually remove the DOM elements","\t\tcurrentView.clearEventData(); // for View.js, TODO: unify with clearEvents","\t}","\t","","\tfunction getAndRenderEvents() {","\t\tif (!options.lazyFetching || isFetchNeeded(currentView.visStart, currentView.visEnd)) {","\t\t\tfetchAndRenderEvents();","\t\t}","\t\telse {","\t\t\trenderEvents();","\t\t}","\t}","","","\tfunction fetchAndRenderEvents() {","\t\tfetchEvents(currentView.visStart, currentView.visEnd);","\t\t\t// ... will call reportEvents","\t\t\t// ... which will call renderEvents","\t}","","\t","\t// called when event data arrives","\tfunction reportEvents(_events) {","\t\tevents = _events;","\t\trenderEvents();","\t}","","","\t// called when a single event's data has been changed","\tfunction reportEventChange(eventID) {","\t\trerenderEvents(eventID);","\t}","","","","\t/* Header Updating","\t-----------------------------------------------------------------------------*/","","","\tfunction updateTitle() {","\t\theader.updateTitle(currentView.title);","\t}","","","\tfunction updateTodayButton() {","\t\tvar today = new Date();","\t\tif (today >= currentView.start && today < currentView.end) {","\t\t\theader.disableButton('today');","\t\t}","\t\telse {","\t\t\theader.enableButton('today');","\t\t}","\t}","\t","","","\t/* Selection","\t-----------------------------------------------------------------------------*/","\t","","\tfunction select(start, end, allDay) {","\t\tcurrentView.select(start, end, allDay===undefined ? true : allDay);","\t}","\t","","\tfunction unselect() { // safe to be called before renderView","\t\tif (currentView) {","\t\t\tcurrentView.unselect();","\t\t}","\t}","\t","\t","\t","\t/* Date","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction prev() {","\t\trenderView(-1);","\t}","\t","\t","\tfunction next() {","\t\trenderView(1);","\t}","\t","\t","\tfunction prevYear() {","\t\taddYears(date, -1);","\t\trenderView();","\t}","\t","\t","\tfunction nextYear() {","\t\taddYears(date, 1);","\t\trenderView();","\t}","\t","\t","\tfunction today() {","\t\tdate = new Date();","\t\trenderView();","\t}","\t","\t","\tfunction gotoDate(year, month, dateOfMonth) {","\t\tif (year instanceof Date) {","\t\t\tdate = cloneDate(year); // provided 1 argument, a Date","\t\t}else{","\t\t\tsetYMD(date, year, month, dateOfMonth);","\t\t}","\t\trenderView();","\t}","\t","\t","\tfunction incrementDate(years, months, days) {","\t\tif (years !== undefined) {","\t\t\taddYears(date, years);","\t\t}","\t\tif (months !== undefined) {","\t\t\taddMonths(date, months);","\t\t}","\t\tif (days !== undefined) {","\t\t\taddDays(date, days);","\t\t}","\t\trenderView();","\t}","\t","\t","\tfunction getDate() {","\t\treturn cloneDate(date);","\t}","","","","\t/* Height \"Freezing\"","\t-----------------------------------------------------------------------------*/","","","\tfunction freezeContentHeight() {","\t\tcontent.css({","\t\t\twidth: '100%',","\t\t\theight: content.height(),","\t\t\toverflow: 'hidden'","\t\t});","\t}","","","\tfunction unfreezeContentHeight() {","\t\tcontent.css({","\t\t\twidth: '',","\t\t\theight: '',","\t\t\toverflow: ''","\t\t});","\t}","\t","\t","\t","\t/* Misc","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction getView() {","\t\treturn currentView;","\t}","\t","\t","\tfunction option(name, value) {","\t\tif (value === undefined) {","\t\t\treturn options[name];","\t\t}","\t\tif (name == 'height' || name == 'contentHeight' || name == 'aspectRatio') {","\t\t\toptions[name] = value;","\t\t\tupdateSize();","\t\t}","\t}","\t","\t","\tfunction trigger(name, thisObj) {","\t\tif (options[name]) {","\t\t\treturn options[name].apply(","\t\t\t\tthisObj || _element,","\t\t\t\tArray.prototype.slice.call(arguments, 2)","\t\t\t);","\t\t}","\t}","\t","\t","\t","\t/* External Dragging","\t------------------------------------------------------------------------*/","\t","\tif (options.droppable) {","\t\t$(document)","\t\t\t.bind('dragstart', function(ev, ui) {","\t\t\t\tvar _e = ev.target;","\t\t\t\tvar e = $(_e);","\t\t\t\tif (!e.parents('.fc').length) { // not already inside a calendar","\t\t\t\t\tvar accept = options.dropAccept;","\t\t\t\t\tif ($.isFunction(accept) ? accept.call(_e, e) : e.is(accept)) {","\t\t\t\t\t\t_dragElement = _e;","\t\t\t\t\t\tcurrentView.dragStart(_dragElement, ev, ui);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t})","\t\t\t.bind('dragstop', function(ev, ui) {","\t\t\t\tif (_dragElement) {","\t\t\t\t\tcurrentView.dragStop(_dragElement, ev, ui);","\t\t\t\t\t_dragElement = null;","\t\t\t\t}","\t\t\t});","\t}","\t","","}","",";;","","function Header(calendar, options) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\tt.destroy = destroy;","\tt.updateTitle = updateTitle;","\tt.activateButton = activateButton;","\tt.deactivateButton = deactivateButton;","\tt.disableButton = disableButton;","\tt.enableButton = enableButton;","\t","\t","\t// locals","\tvar element = $([]);","\tvar tm;","\t","","","\tfunction render() {","\t\ttm = options.theme ? 'ui' : 'fc';","\t\tvar sections = options.header;","\t\tif (sections) {","\t\t\telement = $(\"<table class='fc-header' style='width:100%'/>\")","\t\t\t\t.append(","\t\t\t\t\t$(\"<tr/>\")","\t\t\t\t\t\t.append(renderSection('left'))","\t\t\t\t\t\t.append(renderSection('center'))","\t\t\t\t\t\t.append(renderSection('right'))","\t\t\t\t);","\t\t\treturn element;","\t\t}","\t}","\t","\t","\tfunction destroy() {","\t\telement.remove();","\t}","\t","\t","\tfunction renderSection(position) {","\t\tvar e = $(\"<td class='fc-header-\" + position + \"'/>\");","\t\tvar buttonStr = options.header[position];","\t\tif (buttonStr) {","\t\t\t$.each(buttonStr.split(' '), function(i) {","\t\t\t\tif (i > 0) {","\t\t\t\t\te.append(\"<span class='fc-header-space'/>\");","\t\t\t\t}","\t\t\t\tvar prevButton;","\t\t\t\t$.each(this.split(','), function(j, buttonName) {","\t\t\t\t\tif (buttonName == 'title') {","\t\t\t\t\t\te.append(\"<span class='fc-header-title'><h2> </h2></span>\");","\t\t\t\t\t\tif (prevButton) {","\t\t\t\t\t\t\tprevButton.addClass(tm + '-corner-right');","\t\t\t\t\t\t}","\t\t\t\t\t\tprevButton = null;","\t\t\t\t\t}else{","\t\t\t\t\t\tvar buttonClick;","\t\t\t\t\t\tif (calendar[buttonName]) {","\t\t\t\t\t\t\tbuttonClick = calendar[buttonName]; // calendar method","\t\t\t\t\t\t}","\t\t\t\t\t\telse if (fcViews[buttonName]) {","\t\t\t\t\t\t\tbuttonClick = function() {","\t\t\t\t\t\t\t\tbutton.removeClass(tm + '-state-hover'); // forget why","\t\t\t\t\t\t\t\tcalendar.changeView(buttonName);","\t\t\t\t\t\t\t};","\t\t\t\t\t\t}","\t\t\t\t\t\tif (buttonClick) {","\t\t\t\t\t\t\tvar icon = options.theme ? smartProperty(options.buttonIcons, buttonName) : null; // why are we using smartProperty here?","\t\t\t\t\t\t\tvar text = smartProperty(options.buttonText, buttonName); // why are we using smartProperty here?","\t\t\t\t\t\t\tvar button = $(","\t\t\t\t\t\t\t\t\"<span class='fc-button fc-button-\" + buttonName + \" \" + tm + \"-state-default'>\" +","\t\t\t\t\t\t\t\t\t(icon ?","\t\t\t\t\t\t\t\t\t\t\"<span class='fc-icon-wrap'>\" +","\t\t\t\t\t\t\t\t\t\t\t\"<span class='ui-icon ui-icon-\" + icon + \"'/>\" +","\t\t\t\t\t\t\t\t\t\t\"</span>\" :","\t\t\t\t\t\t\t\t\t\ttext","\t\t\t\t\t\t\t\t\t\t) +","\t\t\t\t\t\t\t\t\"</span>\"","\t\t\t\t\t\t\t\t)","\t\t\t\t\t\t\t\t.click(function() {","\t\t\t\t\t\t\t\t\tif (!button.hasClass(tm + '-state-disabled')) {","\t\t\t\t\t\t\t\t\t\tbuttonClick();","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t})","\t\t\t\t\t\t\t\t.mousedown(function() {","\t\t\t\t\t\t\t\t\tbutton","\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-active')","\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-disabled')","\t\t\t\t\t\t\t\t\t\t.addClass(tm + '-state-down');","\t\t\t\t\t\t\t\t})","\t\t\t\t\t\t\t\t.mouseup(function() {","\t\t\t\t\t\t\t\t\tbutton.removeClass(tm + '-state-down');","\t\t\t\t\t\t\t\t})","\t\t\t\t\t\t\t\t.hover(","\t\t\t\t\t\t\t\t\tfunction() {","\t\t\t\t\t\t\t\t\t\tbutton","\t\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-active')","\t\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-disabled')","\t\t\t\t\t\t\t\t\t\t\t.addClass(tm + '-state-hover');","\t\t\t\t\t\t\t\t\t},","\t\t\t\t\t\t\t\t\tfunction() {","\t\t\t\t\t\t\t\t\t\tbutton","\t\t\t\t\t\t\t\t\t\t\t.removeClass(tm + '-state-hover')","\t\t\t\t\t\t\t\t\t\t\t.removeClass(tm + '-state-down');","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t)","\t\t\t\t\t\t\t\t.appendTo(e);","\t\t\t\t\t\t\tdisableTextSelection(button);","\t\t\t\t\t\t\tif (!prevButton) {","\t\t\t\t\t\t\t\tbutton.addClass(tm + '-corner-left');","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\tprevButton = button;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t});","\t\t\t\tif (prevButton) {","\t\t\t\t\tprevButton.addClass(tm + '-corner-right');","\t\t\t\t}","\t\t\t});","\t\t}","\t\treturn e;","\t}","\t","\t","\tfunction updateTitle(html) {","\t\telement.find('h2')","\t\t\t.html(html);","\t}","\t","\t","\tfunction activateButton(buttonName) {","\t\telement.find('span.fc-button-' + buttonName)","\t\t\t.addClass(tm + '-state-active');","\t}","\t","\t","\tfunction deactivateButton(buttonName) {","\t\telement.find('span.fc-button-' + buttonName)","\t\t\t.removeClass(tm + '-state-active');","\t}","\t","\t","\tfunction disableButton(buttonName) {","\t\telement.find('span.fc-button-' + buttonName)","\t\t\t.addClass(tm + '-state-disabled');","\t}","\t","\t","\tfunction enableButton(buttonName) {","\t\telement.find('span.fc-button-' + buttonName)","\t\t\t.removeClass(tm + '-state-disabled');","\t}","","","}","",";;","","fc.sourceNormalizers = [];","fc.sourceFetchers = [];","","var ajaxDefaults = {","\tdataType: 'json',","\tcache: false","};","","var eventGUID = 1;","","","function EventManager(options, _sources) {","\tvar t = this;","\t","\t","\t// exports","\tt.isFetchNeeded = isFetchNeeded;","\tt.fetchEvents = fetchEvents;","\tt.addEventSource = addEventSource;","\tt.removeEventSource = removeEventSource;","\tt.updateEvent = updateEvent;","\tt.renderEvent = renderEvent;","\tt.removeEvents = removeEvents;","\tt.clientEvents = clientEvents;","\tt.normalizeEvent = normalizeEvent;","\t","\t","\t// imports","\tvar trigger = t.trigger;","\tvar getView = t.getView;","\tvar reportEvents = t.reportEvents;","\t","\t","\t// locals","\tvar stickySource = { events: [] };","\tvar sources = [ stickySource ];","\tvar rangeStart, rangeEnd;","\tvar currentFetchID = 0;","\tvar pendingSourceCnt = 0;","\tvar loadingLevel = 0;","\tvar cache = [];","\t","\t","\tfor (var i=0; i<_sources.length; i++) {","\t\t_addEventSource(_sources[i]);","\t}","\t","\t","\t","\t/* Fetching","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction isFetchNeeded(start, end) {","\t\treturn !rangeStart || start < rangeStart || end > rangeEnd;","\t}","\t","\t","\tfunction fetchEvents(start, end) {","\t\trangeStart = start;","\t\trangeEnd = end;","\t\tcache = [];","\t\tvar fetchID = ++currentFetchID;","\t\tvar len = sources.length;","\t\tpendingSourceCnt = len;","\t\tfor (var i=0; i<len; i++) {","\t\t\tfetchEventSource(sources[i], fetchID);","\t\t}","\t}","\t","\t","\tfunction fetchEventSource(source, fetchID) {","\t\t_fetchEventSource(source, function(events) {","\t\t\tif (fetchID == currentFetchID) {","\t\t\t\tif (events) {","","\t\t\t\t\tif (options.eventDataTransform) {","\t\t\t\t\t\tevents = $.map(events, options.eventDataTransform);","\t\t\t\t\t}","\t\t\t\t\tif (source.eventDataTransform) {","\t\t\t\t\t\tevents = $.map(events, source.eventDataTransform);","\t\t\t\t\t}","\t\t\t\t\t// TODO: this technique is not ideal for static array event sources.","\t\t\t\t\t//  For arrays, we'll want to process all events right in the beginning, then never again.","\t\t\t\t","\t\t\t\t\tfor (var i=0; i<events.length; i++) {","\t\t\t\t\t\tevents[i].source = source;","\t\t\t\t\t\tnormalizeEvent(events[i]);","\t\t\t\t\t}","\t\t\t\t\tcache = cache.concat(events);","\t\t\t\t}","\t\t\t\tpendingSourceCnt--;","\t\t\t\tif (!pendingSourceCnt) {","\t\t\t\t\treportEvents(cache);","\t\t\t\t}","\t\t\t}","\t\t});","\t}","\t","\t","\tfunction _fetchEventSource(source, callback) {","\t\tvar i;","\t\tvar fetchers = fc.sourceFetchers;","\t\tvar res;","\t\tfor (i=0; i<fetchers.length; i++) {","\t\t\tres = fetchers[i](source, rangeStart, rangeEnd, callback);","\t\t\tif (res === true) {","\t\t\t\t// the fetcher is in charge. made its own async request","\t\t\t\treturn;","\t\t\t}","\t\t\telse if (typeof res == 'object') {","\t\t\t\t// the fetcher returned a new source. process it","\t\t\t\t_fetchEventSource(res, callback);","\t\t\t\treturn;","\t\t\t}","\t\t}","\t\tvar events = source.events;","\t\tif (events) {","\t\t\tif ($.isFunction(events)) {","\t\t\t\tpushLoading();","\t\t\t\tevents(cloneDate(rangeStart), cloneDate(rangeEnd), function(events) {","\t\t\t\t\tcallback(events);","\t\t\t\t\tpopLoading();","\t\t\t\t});","\t\t\t}","\t\t\telse if ($.isArray(events)) {","\t\t\t\tcallback(events);","\t\t\t}","\t\t\telse {","\t\t\t\tcallback();","\t\t\t}","\t\t}else{","\t\t\tvar url = source.url;","\t\t\tif (url) {","\t\t\t\tvar success = source.success;","\t\t\t\tvar error = source.error;","\t\t\t\tvar complete = source.complete;","","\t\t\t\t// retrieve any outbound GET/POST $.ajax data from the options","\t\t\t\tvar customData;","\t\t\t\tif ($.isFunction(source.data)) {","\t\t\t\t\t// supplied as a function that returns a key/value object","\t\t\t\t\tcustomData = source.data();","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\t// supplied as a straight key/value object","\t\t\t\t\tcustomData = source.data;","\t\t\t\t}","","\t\t\t\t// use a copy of the custom data so we can modify the parameters","\t\t\t\t// and not affect the passed-in object.","\t\t\t\tvar data = $.extend({}, customData || {});","","\t\t\t\tvar startParam = firstDefined(source.startParam, options.startParam);","\t\t\t\tvar endParam = firstDefined(source.endParam, options.endParam);","\t\t\t\tif (startParam) {","\t\t\t\t\tdata[startParam] = Math.round(+rangeStart / 1000);","\t\t\t\t}","\t\t\t\tif (endParam) {","\t\t\t\t\tdata[endParam] = Math.round(+rangeEnd / 1000);","\t\t\t\t}","","\t\t\t\tpushLoading();","\t\t\t\t$.ajax($.extend({}, ajaxDefaults, source, {","\t\t\t\t\tdata: data,","\t\t\t\t\tsuccess: function(events) {","\t\t\t\t\t\tevents = events || [];","\t\t\t\t\t\tvar res = applyAll(success, this, arguments);","\t\t\t\t\t\tif ($.isArray(res)) {","\t\t\t\t\t\t\tevents = res;","\t\t\t\t\t\t}","\t\t\t\t\t\tcallback(events);","\t\t\t\t\t},","\t\t\t\t\terror: function() {","\t\t\t\t\t\tapplyAll(error, this, arguments);","\t\t\t\t\t\tcallback();","\t\t\t\t\t},","\t\t\t\t\tcomplete: function() {","\t\t\t\t\t\tapplyAll(complete, this, arguments);","\t\t\t\t\t\tpopLoading();","\t\t\t\t\t}","\t\t\t\t}));","\t\t\t}else{","\t\t\t\tcallback();","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Sources","\t-----------------------------------------------------------------------------*/","\t","","\tfunction addEventSource(source) {","\t\tsource = _addEventSource(source);","\t\tif (source) {","\t\t\tpendingSourceCnt++;","\t\t\tfetchEventSource(source, currentFetchID); // will eventually call reportEvents","\t\t}","\t}","\t","\t","\tfunction _addEventSource(source) {","\t\tif ($.isFunction(source) || $.isArray(source)) {","\t\t\tsource = { events: source };","\t\t}","\t\telse if (typeof source == 'string') {","\t\t\tsource = { url: source };","\t\t}","\t\tif (typeof source == 'object') {","\t\t\tnormalizeSource(source);","\t\t\tsources.push(source);","\t\t\treturn source;","\t\t}","\t}","\t","","\tfunction removeEventSource(source) {","\t\tsources = $.grep(sources, function(src) {","\t\t\treturn !isSourcesEqual(src, source);","\t\t});","\t\t// remove all client events from that source","\t\tcache = $.grep(cache, function(e) {","\t\t\treturn !isSourcesEqual(e.source, source);","\t\t});","\t\treportEvents(cache);","\t}","\t","\t","\t","\t/* Manipulation","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction updateEvent(event) { // update an existing event","\t\tvar i, len = cache.length, e,","\t\t\tdefaultEventEnd = getView().defaultEventEnd, // getView???","\t\t\tstartDelta = event.start - event._start,","\t\t\tendDelta = event.end ?","\t\t\t\t(event.end - (event._end || defaultEventEnd(event))) // event._end would be null if event.end","\t\t\t\t: 0;                                                      // was null and event was just resized","\t\tfor (i=0; i<len; i++) {","\t\t\te = cache[i];","\t\t\tif (e._id == event._id && e != event) {","\t\t\t\te.start = new Date(+e.start + startDelta);","\t\t\t\tif (event.end) {","\t\t\t\t\tif (e.end) {","\t\t\t\t\t\te.end = new Date(+e.end + endDelta);","\t\t\t\t\t}else{","\t\t\t\t\t\te.end = new Date(+defaultEventEnd(e) + endDelta);","\t\t\t\t\t}","\t\t\t\t}else{","\t\t\t\t\te.end = null;","\t\t\t\t}","\t\t\t\te.title = event.title;","\t\t\t\te.url = event.url;","\t\t\t\te.allDay = event.allDay;","\t\t\t\te.className = event.className;","\t\t\t\te.editable = event.editable;","\t\t\t\te.color = event.color;","\t\t\t\te.backgroundColor = event.backgroundColor;","\t\t\t\te.borderColor = event.borderColor;","\t\t\t\te.textColor = event.textColor;","\t\t\t\tnormalizeEvent(e);","\t\t\t}","\t\t}","\t\tnormalizeEvent(event);","\t\treportEvents(cache);","\t}","\t","\t","\tfunction renderEvent(event, stick) {","\t\tnormalizeEvent(event);","\t\tif (!event.source) {","\t\t\tif (stick) {","\t\t\t\tstickySource.events.push(event);","\t\t\t\tevent.source = stickySource;","\t\t\t}","\t\t\tcache.push(event);","\t\t}","\t\treportEvents(cache);","\t}","\t","\t","\tfunction removeEvents(filter) {","\t\tif (!filter) { // remove all","\t\t\tcache = [];","\t\t\t// clear all array sources","\t\t\tfor (var i=0; i<sources.length; i++) {","\t\t\t\tif ($.isArray(sources[i].events)) {","\t\t\t\t\tsources[i].events = [];","\t\t\t\t}","\t\t\t}","\t\t}else{","\t\t\tif (!$.isFunction(filter)) { // an event ID","\t\t\t\tvar id = filter + '';","\t\t\t\tfilter = function(e) {","\t\t\t\t\treturn e._id == id;","\t\t\t\t};","\t\t\t}","\t\t\tcache = $.grep(cache, filter, true);","\t\t\t// remove events from array sources","\t\t\tfor (var i=0; i<sources.length; i++) {","\t\t\t\tif ($.isArray(sources[i].events)) {","\t\t\t\t\tsources[i].events = $.grep(sources[i].events, filter, true);","\t\t\t\t}","\t\t\t}","\t\t}","\t\treportEvents(cache);","\t}","\t","\t","\tfunction clientEvents(filter) {","\t\tif ($.isFunction(filter)) {","\t\t\treturn $.grep(cache, filter);","\t\t}","\t\telse if (filter) { // an event ID","\t\t\tfilter += '';","\t\t\treturn $.grep(cache, function(e) {","\t\t\t\treturn e._id == filter;","\t\t\t});","\t\t}","\t\treturn cache; // else, return all","\t}","\t","\t","\t","\t/* Loading State","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction pushLoading() {","\t\tif (!loadingLevel++) {","\t\t\ttrigger('loading', null, true, getView());","\t\t}","\t}","\t","\t","\tfunction popLoading() {","\t\tif (!--loadingLevel) {","\t\t\ttrigger('loading', null, false, getView());","\t\t}","\t}","\t","\t","\t","\t/* Event Normalization","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction normalizeEvent(event) {","\t\tvar source = event.source || {};","\t\tvar ignoreTimezone = firstDefined(source.ignoreTimezone, options.ignoreTimezone);","\t\tevent._id = event._id || (event.id === undefined ? '_fc' + eventGUID++ : event.id + '');","\t\tif (event.date) {","\t\t\tif (!event.start) {","\t\t\t\tevent.start = event.date;","\t\t\t}","\t\t\tdelete event.date;","\t\t}","\t\tevent._start = cloneDate(event.start = parseDate(event.start, ignoreTimezone));","\t\tevent.end = parseDate(event.end, ignoreTimezone);","\t\tif (event.end && event.end <= event.start) {","\t\t\tevent.end = null;","\t\t}","\t\tevent._end = event.end ? cloneDate(event.end) : null;","\t\tif (event.allDay === undefined) {","\t\t\tevent.allDay = firstDefined(source.allDayDefault, options.allDayDefault);","\t\t}","\t\tif (event.className) {","\t\t\tif (typeof event.className == 'string') {","\t\t\t\tevent.className = event.className.split(/\\s+/);","\t\t\t}","\t\t}else{","\t\t\tevent.className = [];","\t\t}","\t\t// TODO: if there is no start date, return false to indicate an invalid event","\t}","\t","\t","\t","\t/* Utils","\t------------------------------------------------------------------------------*/","\t","\t","\tfunction normalizeSource(source) {","\t\tif (source.className) {","\t\t\t// TODO: repeat code, same code for event classNames","\t\t\tif (typeof source.className == 'string') {","\t\t\t\tsource.className = source.className.split(/\\s+/);","\t\t\t}","\t\t}else{","\t\t\tsource.className = [];","\t\t}","\t\tvar normalizers = fc.sourceNormalizers;","\t\tfor (var i=0; i<normalizers.length; i++) {","\t\t\tnormalizers[i](source);","\t\t}","\t}","\t","\t","\tfunction isSourcesEqual(source1, source2) {","\t\treturn source1 && source2 && getSourcePrimitive(source1) == getSourcePrimitive(source2);","\t}","\t","\t","\tfunction getSourcePrimitive(source) {","\t\treturn ((typeof source == 'object') ? (source.events || source.url) : '') || source;","\t}","","","}","",";;","","","fc.addDays = addDays;","fc.cloneDate = cloneDate;","fc.parseDate = parseDate;","fc.parseISO8601 = parseISO8601;","fc.parseTime = parseTime;","fc.formatDate = formatDate;","fc.formatDates = formatDates;","","","","/* Date Math","-----------------------------------------------------------------------------*/","","var dayIDs = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'],","\tDAY_MS = 86400000,","\tHOUR_MS = 3600000,","\tMINUTE_MS = 60000;","\t","","function addYears(d, n, keepTime) {","\td.setFullYear(d.getFullYear() + n);","\tif (!keepTime) {","\t\tclearTime(d);","\t}","\treturn d;","}","","","function addMonths(d, n, keepTime) { // prevents day overflow/underflow","\tif (+d) { // prevent infinite looping on invalid dates","\t\tvar m = d.getMonth() + n,","\t\t\tcheck = cloneDate(d);","\t\tcheck.setDate(1);","\t\tcheck.setMonth(m);","\t\td.setMonth(m);","\t\tif (!keepTime) {","\t\t\tclearTime(d);","\t\t}","\t\twhile (d.getMonth() != check.getMonth()) {","\t\t\td.setDate(d.getDate() + (d < check ? 1 : -1));","\t\t}","\t}","\treturn d;","}","","","function addDays(d, n, keepTime) { // deals with daylight savings","\tif (+d) {","\t\tvar dd = d.getDate() + n,","\t\t\tcheck = cloneDate(d);","\t\tcheck.setHours(9); // set to middle of day","\t\tcheck.setDate(dd);","\t\td.setDate(dd);","\t\tif (!keepTime) {","\t\t\tclearTime(d);","\t\t}","\t\tfixDate(d, check);","\t}","\treturn d;","}","","","function fixDate(d, check) { // force d to be on check's YMD, for daylight savings purposes","\tif (+d) { // prevent infinite looping on invalid dates","\t\twhile (d.getDate() != check.getDate()) {","\t\t\td.setTime(+d + (d < check ? 1 : -1) * HOUR_MS);","\t\t}","\t}","}","","","function addMinutes(d, n) {","\td.setMinutes(d.getMinutes() + n);","\treturn d;","}","","","function clearTime(d) {","\td.setHours(0);","\td.setMinutes(0);","\td.setSeconds(0); ","\td.setMilliseconds(0);","\treturn d;","}","","","function cloneDate(d, dontKeepTime) {","\tif (dontKeepTime) {","\t\treturn clearTime(new Date(+d));","\t}","\treturn new Date(+d);","}","","","function zeroDate() { // returns a Date with time 00:00:00 and dateOfMonth=1","\tvar i=0, d;","\tdo {","\t\td = new Date(1970, i++, 1);","\t} while (d.getHours()); // != 0","\treturn d;","}","","","function dayDiff(d1, d2) { // d1 - d2","\treturn Math.round((cloneDate(d1, true) - cloneDate(d2, true)) / DAY_MS);","}","","","function setYMD(date, y, m, d) {","\tif (y !== undefined && y != date.getFullYear()) {","\t\tdate.setDate(1);","\t\tdate.setMonth(0);","\t\tdate.setFullYear(y);","\t}","\tif (m !== undefined && m != date.getMonth()) {","\t\tdate.setDate(1);","\t\tdate.setMonth(m);","\t}","\tif (d !== undefined) {","\t\tdate.setDate(d);","\t}","}","","","","/* Date Parsing","-----------------------------------------------------------------------------*/","","","function parseDate(s, ignoreTimezone) { // ignoreTimezone defaults to true","\tif (typeof s == 'object') { // already a Date object","\t\treturn s;","\t}","\tif (typeof s == 'number') { // a UNIX timestamp","\t\treturn new Date(s * 1000);","\t}","\tif (typeof s == 'string') {","\t\tif (s.match(/^\\d+(\\.\\d+)?$/)) { // a UNIX timestamp","\t\t\treturn new Date(parseFloat(s) * 1000);","\t\t}","\t\tif (ignoreTimezone === undefined) {","\t\t\tignoreTimezone = true;","\t\t}","\t\treturn parseISO8601(s, ignoreTimezone) || (s ? new Date(s) : null);","\t}","\t// TODO: never return invalid dates (like from new Date(<string>)), return null instead","\treturn null;","}","","","function parseISO8601(s, ignoreTimezone) { // ignoreTimezone defaults to false","\t// derived from http://delete.me.uk/2005/03/iso8601.html","\t// TODO: for a know glitch/feature, read tests/issue_206_parseDate_dst.html","\tvar m = s.match(/^([0-9]{4})(-([0-9]{2})(-([0-9]{2})([T ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(\\.([0-9]+))?)?(Z|(([-+])([0-9]{2})(:?([0-9]{2}))?))?)?)?)?$/);","\tif (!m) {","\t\treturn null;","\t}","\tvar date = new Date(m[1], 0, 1);","\tif (ignoreTimezone || !m[13]) {","\t\tvar check = new Date(m[1], 0, 1, 9, 0);","\t\tif (m[3]) {","\t\t\tdate.setMonth(m[3] - 1);","\t\t\tcheck.setMonth(m[3] - 1);","\t\t}","\t\tif (m[5]) {","\t\t\tdate.setDate(m[5]);","\t\t\tcheck.setDate(m[5]);","\t\t}","\t\tfixDate(date, check);","\t\tif (m[7]) {","\t\t\tdate.setHours(m[7]);","\t\t}","\t\tif (m[8]) {","\t\t\tdate.setMinutes(m[8]);","\t\t}","\t\tif (m[10]) {","\t\t\tdate.setSeconds(m[10]);","\t\t}","\t\tif (m[12]) {","\t\t\tdate.setMilliseconds(Number(\"0.\" + m[12]) * 1000);","\t\t}","\t\tfixDate(date, check);","\t}else{","\t\tdate.setUTCFullYear(","\t\t\tm[1],","\t\t\tm[3] ? m[3] - 1 : 0,","\t\t\tm[5] || 1","\t\t);","\t\tdate.setUTCHours(","\t\t\tm[7] || 0,","\t\t\tm[8] || 0,","\t\t\tm[10] || 0,","\t\t\tm[12] ? Number(\"0.\" + m[12]) * 1000 : 0","\t\t);","\t\tif (m[14]) {","\t\t\tvar offset = Number(m[16]) * 60 + (m[18] ? Number(m[18]) : 0);","\t\t\toffset *= m[15] == '-' ? 1 : -1;","\t\t\tdate = new Date(+date + (offset * 60 * 1000));","\t\t}","\t}","\treturn date;","}","","","function parseTime(s) { // returns minutes since start of day","\tif (typeof s == 'number') { // an hour","\t\treturn s * 60;","\t}","\tif (typeof s == 'object') { // a Date object","\t\treturn s.getHours() * 60 + s.getMinutes();","\t}","\tvar m = s.match(/(\\d+)(?::(\\d+))?\\s*(\\w+)?/);","\tif (m) {","\t\tvar h = parseInt(m[1], 10);","\t\tif (m[3]) {","\t\t\th %= 12;","\t\t\tif (m[3].toLowerCase().charAt(0) == 'p') {","\t\t\t\th += 12;","\t\t\t}","\t\t}","\t\treturn h * 60 + (m[2] ? parseInt(m[2], 10) : 0);","\t}","}","","","","/* Date Formatting","-----------------------------------------------------------------------------*/","// TODO: use same function formatDate(date, [date2], format, [options])","","","function formatDate(date, format, options) {","\treturn formatDates(date, null, format, options);","}","","","function formatDates(date1, date2, format, options) {","\toptions = options || defaults;","\tvar date = date1,","\t\totherDate = date2,","\t\ti, len = format.length, c,","\t\ti2, formatter,","\t\tres = '';","\tfor (i=0; i<len; i++) {","\t\tc = format.charAt(i);","\t\tif (c == \"'\") {","\t\t\tfor (i2=i+1; i2<len; i2++) {","\t\t\t\tif (format.charAt(i2) == \"'\") {","\t\t\t\t\tif (date) {","\t\t\t\t\t\tif (i2 == i+1) {","\t\t\t\t\t\t\tres += \"'\";","\t\t\t\t\t\t}else{","\t\t\t\t\t\t\tres += format.substring(i+1, i2);","\t\t\t\t\t\t}","\t\t\t\t\t\ti = i2;","\t\t\t\t\t}","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if (c == '(') {","\t\t\tfor (i2=i+1; i2<len; i2++) {","\t\t\t\tif (format.charAt(i2) == ')') {","\t\t\t\t\tvar subres = formatDate(date, format.substring(i+1, i2), options);","\t\t\t\t\tif (parseInt(subres.replace(/\\D/, ''), 10)) {","\t\t\t\t\t\tres += subres;","\t\t\t\t\t}","\t\t\t\t\ti = i2;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if (c == '[') {","\t\t\tfor (i2=i+1; i2<len; i2++) {","\t\t\t\tif (format.charAt(i2) == ']') {","\t\t\t\t\tvar subformat = format.substring(i+1, i2);","\t\t\t\t\tvar subres = formatDate(date, subformat, options);","\t\t\t\t\tif (subres != formatDate(otherDate, subformat, options)) {","\t\t\t\t\t\tres += subres;","\t\t\t\t\t}","\t\t\t\t\ti = i2;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if (c == '{') {","\t\t\tdate = date2;","\t\t\totherDate = date1;","\t\t}","\t\telse if (c == '}') {","\t\t\tdate = date1;","\t\t\totherDate = date2;","\t\t}","\t\telse {","\t\t\tfor (i2=len; i2>i; i2--) {","\t\t\t\tif (formatter = dateFormatters[format.substring(i, i2)]) {","\t\t\t\t\tif (date) {","\t\t\t\t\t\tres += formatter(date, options);","\t\t\t\t\t}","\t\t\t\t\ti = i2 - 1;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t\tif (i2 == i) {","\t\t\t\tif (date) {","\t\t\t\t\tres += c;","\t\t\t\t}","\t\t\t}","\t\t}","\t}","\treturn res;","};","","","var dateFormatters = {","\ts\t: function(d)\t{ return d.getSeconds() },","\tss\t: function(d)\t{ return zeroPad(d.getSeconds()) },","\tm\t: function(d)\t{ return d.getMinutes() },","\tmm\t: function(d)\t{ return zeroPad(d.getMinutes()) },","\th\t: function(d)\t{ return d.getHours() % 12 || 12 },","\thh\t: function(d)\t{ return zeroPad(d.getHours() % 12 || 12) },","\tH\t: function(d)\t{ return d.getHours() },","\tHH\t: function(d)\t{ return zeroPad(d.getHours()) },","\td\t: function(d)\t{ return d.getDate() },","\tdd\t: function(d)\t{ return zeroPad(d.getDate()) },","\tddd\t: function(d,o)\t{ return o.dayNamesShort[d.getDay()] },","\tdddd: function(d,o)\t{ return o.dayNames[d.getDay()] },","\tM\t: function(d)\t{ return d.getMonth() + 1 },","\tMM\t: function(d)\t{ return zeroPad(d.getMonth() + 1) },","\tMMM\t: function(d,o)\t{ return o.monthNamesShort[d.getMonth()] },","\tMMMM: function(d,o)\t{ return o.monthNames[d.getMonth()] },","\tyy\t: function(d)\t{ return (d.getFullYear()+'').substring(2) },","\tyyyy: function(d)\t{ return d.getFullYear() },","\tt\t: function(d)\t{ return d.getHours() < 12 ? 'a' : 'p' },","\ttt\t: function(d)\t{ return d.getHours() < 12 ? 'am' : 'pm' },","\tT\t: function(d)\t{ return d.getHours() < 12 ? 'A' : 'P' },","\tTT\t: function(d)\t{ return d.getHours() < 12 ? 'AM' : 'PM' },","\tu\t: function(d)\t{ return formatDate(d, \"yyyy-MM-dd'T'HH:mm:ss'Z'\") },","\tS\t: function(d)\t{","\t\tvar date = d.getDate();","\t\tif (date > 10 && date < 20) {","\t\t\treturn 'th';","\t\t}","\t\treturn ['st', 'nd', 'rd'][date%10-1] || 'th';","\t},","\tw   : function(d, o) { // local","\t\treturn o.weekNumberCalculation(d);","\t},","\tW   : function(d) { // ISO","\t\treturn iso8601Week(d);","\t}","};","fc.dateFormatters = dateFormatters;","","","/* thanks jQuery UI (https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js)"," * "," * Set as calculateWeek to determine the week of the year based on the ISO 8601 definition."," * `date` - the date to get the week for"," * `number` - the number of the week within the year that contains this date"," */","function iso8601Week(date) {","\tvar time;","\tvar checkDate = new Date(date.getTime());","","\t// Find Thursday of this week starting on Monday","\tcheckDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));","","\ttime = checkDate.getTime();","\tcheckDate.setMonth(0); // Compare with Jan 1","\tcheckDate.setDate(1);","\treturn Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;","}","","",";;","","fc.applyAll = applyAll;","","","/* Event Date Math","-----------------------------------------------------------------------------*/","","","function exclEndDay(event) {","\tif (event.end) {","\t\treturn _exclEndDay(event.end, event.allDay);","\t}else{","\t\treturn addDays(cloneDate(event.start), 1);","\t}","}","","","function _exclEndDay(end, allDay) {","\tend = cloneDate(end);","\treturn allDay || end.getHours() || end.getMinutes() ? addDays(end, 1) : clearTime(end);","\t// why don't we check for seconds/ms too?","}","","","","/* Event Element Binding","-----------------------------------------------------------------------------*/","","","function lazySegBind(container, segs, bindHandlers) {","\tcontainer.unbind('mouseover').mouseover(function(ev) {","\t\tvar parent=ev.target, e,","\t\t\ti, seg;","\t\twhile (parent != this) {","\t\t\te = parent;","\t\t\tparent = parent.parentNode;","\t\t}","\t\tif ((i = e._fci) !== undefined) {","\t\t\te._fci = undefined;","\t\t\tseg = segs[i];","\t\t\tbindHandlers(seg.event, seg.element, seg);","\t\t\t$(ev.target).trigger(ev);","\t\t}","\t\tev.stopPropagation();","\t});","}","","","","/* Element Dimensions","-----------------------------------------------------------------------------*/","","","function setOuterWidth(element, width, includeMargins) {","\tfor (var i=0, e; i<element.length; i++) {","\t\te = $(element[i]);","\t\te.width(Math.max(0, width - hsides(e, includeMargins)));","\t}","}","","","function setOuterHeight(element, height, includeMargins) {","\tfor (var i=0, e; i<element.length; i++) {","\t\te = $(element[i]);","\t\te.height(Math.max(0, height - vsides(e, includeMargins)));","\t}","}","","","function hsides(element, includeMargins) {","\treturn hpadding(element) + hborders(element) + (includeMargins ? hmargins(element) : 0);","}","","","function hpadding(element) {","\treturn (parseFloat($.css(element[0], 'paddingLeft', true)) || 0) +","\t       (parseFloat($.css(element[0], 'paddingRight', true)) || 0);","}","","","function hmargins(element) {","\treturn (parseFloat($.css(element[0], 'marginLeft', true)) || 0) +","\t       (parseFloat($.css(element[0], 'marginRight', true)) || 0);","}","","","function hborders(element) {","\treturn (parseFloat($.css(element[0], 'borderLeftWidth', true)) || 0) +","\t       (parseFloat($.css(element[0], 'borderRightWidth', true)) || 0);","}","","","function vsides(element, includeMargins) {","\treturn vpadding(element) +  vborders(element) + (includeMargins ? vmargins(element) : 0);","}","","","function vpadding(element) {","\treturn (parseFloat($.css(element[0], 'paddingTop', true)) || 0) +","\t       (parseFloat($.css(element[0], 'paddingBottom', true)) || 0);","}","","","function vmargins(element) {","\treturn (parseFloat($.css(element[0], 'marginTop', true)) || 0) +","\t       (parseFloat($.css(element[0], 'marginBottom', true)) || 0);","}","","","function vborders(element) {","\treturn (parseFloat($.css(element[0], 'borderTopWidth', true)) || 0) +","\t       (parseFloat($.css(element[0], 'borderBottomWidth', true)) || 0);","}","","","","/* Misc Utils","-----------------------------------------------------------------------------*/","","","//TODO: arraySlice","//TODO: isFunction, grep ?","","","function noop() { }","","","function dateCompare(a, b) {","\treturn a - b;","}","","","function arrayMax(a) {","\treturn Math.max.apply(Math, a);","}","","","function zeroPad(n) {","\treturn (n < 10 ? '0' : '') + n;","}","","","function smartProperty(obj, name) { // get a camel-cased/namespaced property of an object","\tif (obj[name] !== undefined) {","\t\treturn obj[name];","\t}","\tvar parts = name.split(/(?=[A-Z])/),","\t\ti=parts.length-1, res;","\tfor (; i>=0; i--) {","\t\tres = obj[parts[i].toLowerCase()];","\t\tif (res !== undefined) {","\t\t\treturn res;","\t\t}","\t}","\treturn obj[''];","}","","","function htmlEscape(s) {","\treturn s.replace(/&/g, '&')","\t\t.replace(/</g, '<')","\t\t.replace(/>/g, '>')","\t\t.replace(/'/g, '\\'')","\t\t.replace(/\"/g, '\"')","\t\t.replace(/\\n/g, '<br />');","}","","","function disableTextSelection(element) {","\telement","\t\t.attr('unselectable', 'on')","\t\t.css('MozUserSelect', 'none')","\t\t.bind('selectstart.ui', function() { return false; });","}","","","/*","function enableTextSelection(element) {","\telement","\t\t.attr('unselectable', 'off')","\t\t.css('MozUserSelect', '')","\t\t.unbind('selectstart.ui');","}","*/","","","function markFirstLast(e) {","\te.children()","\t\t.removeClass('fc-first fc-last')","\t\t.filter(':first-child')","\t\t\t.addClass('fc-first')","\t\t.end()","\t\t.filter(':last-child')","\t\t\t.addClass('fc-last');","}","","","function setDayID(cell, date) {","\tcell.each(function(i, _cell) {","\t\t_cell.className = _cell.className.replace(/^fc-\\w*/, 'fc-' + dayIDs[date.getDay()]);","\t\t// TODO: make a way that doesn't rely on order of classes","\t});","}","","","function getSkinCss(event, opt) {","\tvar source = event.source || {};","\tvar eventColor = event.color;","\tvar sourceColor = source.color;","\tvar optionColor = opt('eventColor');","\tvar backgroundColor =","\t\tevent.backgroundColor ||","\t\teventColor ||","\t\tsource.backgroundColor ||","\t\tsourceColor ||","\t\topt('eventBackgroundColor') ||","\t\toptionColor;","\tvar borderColor =","\t\tevent.borderColor ||","\t\teventColor ||","\t\tsource.borderColor ||","\t\tsourceColor ||","\t\topt('eventBorderColor') ||","\t\toptionColor;","\tvar textColor =","\t\tevent.textColor ||","\t\tsource.textColor ||","\t\topt('eventTextColor');","\tvar statements = [];","\tif (backgroundColor) {","\t\tstatements.push('background-color:' + backgroundColor);","\t}","\tif (borderColor) {","\t\tstatements.push('border-color:' + borderColor);","\t}","\tif (textColor) {","\t\tstatements.push('color:' + textColor);","\t}","\treturn statements.join(';');","}","","","function applyAll(functions, thisObj, args) {","\tif ($.isFunction(functions)) {","\t\tfunctions = [ functions ];","\t}","\tif (functions) {","\t\tvar i;","\t\tvar ret;","\t\tfor (i=0; i<functions.length; i++) {","\t\t\tret = functions[i].apply(thisObj, args) || ret;","\t\t}","\t\treturn ret;","\t}","}","","","function firstDefined() {","\tfor (var i=0; i<arguments.length; i++) {","\t\tif (arguments[i] !== undefined) {","\t\t\treturn arguments[i];","\t\t}","\t}","}","","",";;","","fcViews.month = MonthView;","","function MonthView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tBasicView.call(t, element, calendar, 'month');","\tvar opt = t.opt;","\tvar renderBasic = t.renderBasic;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar getCellsPerWeek = t.getCellsPerWeek;","\tvar formatDate = calendar.formatDate;","\t","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddMonths(date, delta);","\t\t\tdate.setDate(1);","\t\t}","","\t\tvar firstDay = opt('firstDay');","","\t\tvar start = cloneDate(date, true);","\t\tstart.setDate(1);","","\t\tvar end = addMonths(cloneDate(start), 1);","","\t\tvar visStart = cloneDate(start);","\t\taddDays(visStart, -((visStart.getDay() - firstDay + 7) % 7));","\t\tskipHiddenDays(visStart);","","\t\tvar visEnd = cloneDate(end);","\t\taddDays(visEnd, (7 - visEnd.getDay() + firstDay) % 7);","\t\tskipHiddenDays(visEnd, -1, true);","","\t\tvar colCnt = getCellsPerWeek();","\t\tvar rowCnt = Math.round(dayDiff(visEnd, visStart) / 7); // should be no need for Math.round","","\t\tif (opt('weekMode') == 'fixed') {","\t\t\taddDays(visEnd, (6 - rowCnt) * 7); // add weeks to make up for it","\t\t\trowCnt = 6;","\t\t}","","\t\tt.title = formatDate(start, opt('titleFormat'));","","\t\tt.start = start;","\t\tt.end = end;","\t\tt.visStart = visStart;","\t\tt.visEnd = visEnd;","","\t\trenderBasic(rowCnt, colCnt, true);","\t}","\t","\t","}","",";;","","fcViews.basicWeek = BasicWeekView;","","function BasicWeekView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tBasicView.call(t, element, calendar, 'basicWeek');","\tvar opt = t.opt;","\tvar renderBasic = t.renderBasic;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar getCellsPerWeek = t.getCellsPerWeek;","\tvar formatDates = calendar.formatDates;","\t","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddDays(date, delta * 7);","\t\t}","","\t\tvar start = addDays(cloneDate(date), -((date.getDay() - opt('firstDay') + 7) % 7));","\t\tvar end = addDays(cloneDate(start), 7);","","\t\tvar visStart = cloneDate(start);","\t\tskipHiddenDays(visStart);","","\t\tvar visEnd = cloneDate(end);","\t\tskipHiddenDays(visEnd, -1, true);","","\t\tvar colCnt = getCellsPerWeek();","","\t\tt.start = start;","\t\tt.end = end;","\t\tt.visStart = visStart;","\t\tt.visEnd = visEnd;","","\t\tt.title = formatDates(","\t\t\tvisStart,","\t\t\taddDays(cloneDate(visEnd), -1),","\t\t\topt('titleFormat')","\t\t);","","\t\trenderBasic(1, colCnt, false);","\t}","\t","\t","}","",";;","","fcViews.basicDay = BasicDayView;","","","function BasicDayView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tBasicView.call(t, element, calendar, 'basicDay');","\tvar opt = t.opt;","\tvar renderBasic = t.renderBasic;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar formatDate = calendar.formatDate;","\t","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddDays(date, delta);","\t\t}","\t\tskipHiddenDays(date, delta < 0 ? -1 : 1);","","\t\tvar start = cloneDate(date, true);","\t\tvar end = addDays(cloneDate(start), 1);","","\t\tt.title = formatDate(date, opt('titleFormat'));","","\t\tt.start = t.visStart = start;","\t\tt.end = t.visEnd = end;","","\t\trenderBasic(1, 1, false);","\t}","\t","\t","}","",";;","","setDefaults({","\tweekMode: 'fixed'","});","","","function BasicView(element, calendar, viewName) {","\tvar t = this;","\t","\t","\t// exports","\tt.renderBasic = renderBasic;","\tt.setHeight = setHeight;","\tt.setWidth = setWidth;","\tt.renderDayOverlay = renderDayOverlay;","\tt.defaultSelectionEnd = defaultSelectionEnd;","\tt.renderSelection = renderSelection;","\tt.clearSelection = clearSelection;","\tt.reportDayClick = reportDayClick; // for selection (kinda hacky)","\tt.dragStart = dragStart;","\tt.dragStop = dragStop;","\tt.defaultEventEnd = defaultEventEnd;","\tt.getHoverListener = function() { return hoverListener };","\tt.colLeft = colLeft;","\tt.colRight = colRight;","\tt.colContentLeft = colContentLeft;","\tt.colContentRight = colContentRight;","\tt.getIsCellAllDay = function() { return true };","\tt.allDayRow = allDayRow;","\tt.getRowCnt = function() { return rowCnt };","\tt.getColCnt = function() { return colCnt };","\tt.getColWidth = function() { return colWidth };","\tt.getDaySegmentContainer = function() { return daySegmentContainer };","\t","\t","\t// imports","\tView.call(t, element, calendar, viewName);","\tOverlayManager.call(t);","\tSelectionManager.call(t);","\tBasicEventRenderer.call(t);","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar renderOverlay = t.renderOverlay;","\tvar clearOverlays = t.clearOverlays;","\tvar daySelectionMousedown = t.daySelectionMousedown;","\tvar cellToDate = t.cellToDate;","\tvar dateToCell = t.dateToCell;","\tvar rangeToSegments = t.rangeToSegments;","\tvar formatDate = calendar.formatDate;","\t","\t","\t// locals","\t","\tvar table;","\tvar head;","\tvar headCells;","\tvar body;","\tvar bodyRows;","\tvar bodyCells;","\tvar bodyFirstCells;","\tvar firstRowCellInners;","\tvar firstRowCellContentInners;","\tvar daySegmentContainer;","\t","\tvar viewWidth;","\tvar viewHeight;","\tvar colWidth;","\tvar weekNumberWidth;","\t","\tvar rowCnt, colCnt;","\tvar showNumbers;","\tvar coordinateGrid;","\tvar hoverListener;","\tvar colPositions;","\tvar colContentPositions;","\t","\tvar tm;","\tvar colFormat;","\tvar showWeekNumbers;","\tvar weekNumberTitle;","\tvar weekNumberFormat;","\t","\t","\t","\t/* Rendering","\t------------------------------------------------------------*/","\t","\t","\tdisableTextSelection(element.addClass('fc-grid'));","\t","\t","\tfunction renderBasic(_rowCnt, _colCnt, _showNumbers) {","\t\trowCnt = _rowCnt;","\t\tcolCnt = _colCnt;","\t\tshowNumbers = _showNumbers;","\t\tupdateOptions();","","\t\tif (!body) {","\t\t\tbuildEventContainer();","\t\t}","","\t\tbuildTable();","\t}","\t","\t","\tfunction updateOptions() {","\t\ttm = opt('theme') ? 'ui' : 'fc';","\t\tcolFormat = opt('columnFormat');","","\t\t// week # options. (TODO: bad, logic also in other views)","\t\tshowWeekNumbers = opt('weekNumbers');","\t\tweekNumberTitle = opt('weekNumberTitle');","\t\tif (opt('weekNumberCalculation') != 'iso') {","\t\t\tweekNumberFormat = \"w\";","\t\t}","\t\telse {","\t\t\tweekNumberFormat = \"W\";","\t\t}","\t}","\t","\t","\tfunction buildEventContainer() {","\t\tdaySegmentContainer =","\t\t\t$(\"<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>\")","\t\t\t\t.appendTo(element);","\t}","\t","\t","\tfunction buildTable() {","\t\tvar html = buildTableHTML();","","\t\tif (table) {","\t\t\ttable.remove();","\t\t}","\t\ttable = $(html).appendTo(element);","","\t\thead = table.find('thead');","\t\theadCells = head.find('.fc-day-header');","\t\tbody = table.find('tbody');","\t\tbodyRows = body.find('tr');","\t\tbodyCells = body.find('.fc-day');","\t\tbodyFirstCells = bodyRows.find('td:first-child');","","\t\tfirstRowCellInners = bodyRows.eq(0).find('.fc-day > div');","\t\tfirstRowCellContentInners = bodyRows.eq(0).find('.fc-day-content > div');","\t\t","\t\tmarkFirstLast(head.add(head.find('tr'))); // marks first+last tr/th's","\t\tmarkFirstLast(bodyRows); // marks first+last td's","\t\tbodyRows.eq(0).addClass('fc-first');","\t\tbodyRows.filter(':last').addClass('fc-last');","","\t\tbodyCells.each(function(i, _cell) {","\t\t\tvar date = cellToDate(","\t\t\t\tMath.floor(i / colCnt),","\t\t\t\ti % colCnt","\t\t\t);","\t\t\ttrigger('dayRender', t, date, $(_cell));","\t\t});","","\t\tdayBind(bodyCells);","\t}","","","","\t/* HTML Building","\t-----------------------------------------------------------*/","","","\tfunction buildTableHTML() {","\t\tvar html =","\t\t\t\"<table class='fc-border-separate' style='width:100%' cellspacing='0'>\" +","\t\t\tbuildHeadHTML() +","\t\t\tbuildBodyHTML() +","\t\t\t\"</table>\";","","\t\treturn html;","\t}","","","\tfunction buildHeadHTML() {","\t\tvar headerClass = tm + \"-widget-header\";","\t\tvar html = '';","\t\tvar col;","\t\tvar date;","","\t\thtml += \"<thead><tr>\";","","\t\tif (showWeekNumbers) {","\t\t\thtml +=","\t\t\t\t\"<th class='fc-week-number \" + headerClass + \"'>\" +","\t\t\t\thtmlEscape(weekNumberTitle) +","\t\t\t\t\"</th>\";","\t\t}","","\t\tfor (col=0; col<colCnt; col++) {","\t\t\tdate = cellToDate(0, col);","\t\t\thtml +=","\t\t\t\t\"<th class='fc-day-header fc-\" + dayIDs[date.getDay()] + \" \" + headerClass + \"'>\" +","\t\t\t\thtmlEscape(formatDate(date, colFormat)) +","\t\t\t\t\"</th>\";","\t\t}","","\t\thtml += \"</tr></thead>\";","","\t\treturn html;","\t}","","","\tfunction buildBodyHTML() {","\t\tvar contentClass = tm + \"-widget-content\";","\t\tvar html = '';","\t\tvar row;","\t\tvar col;","\t\tvar date;","","\t\thtml += \"<tbody>\";","","\t\tfor (row=0; row<rowCnt; row++) {","","\t\t\thtml += \"<tr class='fc-week'>\";","","\t\t\tif (showWeekNumbers) {","\t\t\t\tdate = cellToDate(row, 0);","\t\t\t\thtml +=","\t\t\t\t\t\"<td class='fc-week-number \" + contentClass + \"'>\" +","\t\t\t\t\t\"<div>\" +","\t\t\t\t\thtmlEscape(formatDate(date, weekNumberFormat)) +","\t\t\t\t\t\"</div>\" +","\t\t\t\t\t\"</td>\";","\t\t\t}","","\t\t\tfor (col=0; col<colCnt; col++) {","\t\t\t\tdate = cellToDate(row, col);","\t\t\t\thtml += buildCellHTML(date);","\t\t\t}","","\t\t\thtml += \"</tr>\";","\t\t}","","\t\thtml += \"</tbody>\";","","\t\treturn html;","\t}","","","\tfunction buildCellHTML(date) {","\t\tvar contentClass = tm + \"-widget-content\";","\t\tvar month = t.start.getMonth();","\t\tvar today = clearTime(new Date());","\t\tvar html = '';","\t\tvar classNames = [","\t\t\t'fc-day',","\t\t\t'fc-' + dayIDs[date.getDay()],","\t\t\tcontentClass","\t\t];","","\t\tif (date.getMonth() != month) {","\t\t\tclassNames.push('fc-other-month');","\t\t}","\t\tif (+date == +today) {","\t\t\tclassNames.push(","\t\t\t\t'fc-today',","\t\t\t\ttm + '-state-highlight'","\t\t\t);","\t\t}","\t\telse if (date < today) {","\t\t\tclassNames.push('fc-past');","\t\t}","\t\telse {","\t\t\tclassNames.push('fc-future');","\t\t}","","\t\thtml +=","\t\t\t\"<td\" +","\t\t\t\" class='\" + classNames.join(' ') + \"'\" +","\t\t\t\" data-date='\" + formatDate(date, 'yyyy-MM-dd') + \"'\" +","\t\t\t\">\" +","\t\t\t\"<div>\";","","\t\tif (showNumbers) {","\t\t\thtml += \"<div class='fc-day-number'>\" + date.getDate() + \"</div>\";","\t\t}","","\t\thtml +=","\t\t\t\"<div class='fc-day-content'>\" +","\t\t\t\"<div style='position:relative'> </div>\" +","\t\t\t\"</div>\" +","\t\t\t\"</div>\" +","\t\t\t\"</td>\";","","\t\treturn html;","\t}","","","","\t/* Dimensions","\t-----------------------------------------------------------*/","\t","\t","\tfunction setHeight(height) {","\t\tviewHeight = height;","\t\t","\t\tvar bodyHeight = viewHeight - head.height();","\t\tvar rowHeight;","\t\tvar rowHeightLast;","\t\tvar cell;","\t\t\t","\t\tif (opt('weekMode') == 'variable') {","\t\t\trowHeight = rowHeightLast = Math.floor(bodyHeight / (rowCnt==1 ? 2 : 6));","\t\t}else{","\t\t\trowHeight = Math.floor(bodyHeight / rowCnt);","\t\t\trowHeightLast = bodyHeight - rowHeight * (rowCnt-1);","\t\t}","\t\t","\t\tbodyFirstCells.each(function(i, _cell) {","\t\t\tif (i < rowCnt) {","\t\t\t\tcell = $(_cell);","\t\t\t\tcell.find('> div').css(","\t\t\t\t\t'min-height',","\t\t\t\t\t(i==rowCnt-1 ? rowHeightLast : rowHeight) - vsides(cell)","\t\t\t\t);","\t\t\t}","\t\t});","\t\t","\t}","\t","\t","\tfunction setWidth(width) {","\t\tviewWidth = width;","\t\tcolPositions.clear();","\t\tcolContentPositions.clear();","","\t\tweekNumberWidth = 0;","\t\tif (showWeekNumbers) {","\t\t\tweekNumberWidth = head.find('th.fc-week-number').outerWidth();","\t\t}","","\t\tcolWidth = Math.floor((viewWidth - weekNumberWidth) / colCnt);","\t\tsetOuterWidth(headCells.slice(0, -1), colWidth);","\t}","\t","\t","\t","\t/* Day clicking and binding","\t-----------------------------------------------------------*/","\t","\t","\tfunction dayBind(days) {","\t\tdays.click(dayClick)","\t\t\t.mousedown(daySelectionMousedown);","\t}","\t","\t","\tfunction dayClick(ev) {","\t\tif (!opt('selectable')) { // if selectable, SelectionManager will worry about dayClick","\t\t\tvar date = parseISO8601($(this).data('date'));","\t\t\ttrigger('dayClick', this, date, true, ev);","\t\t}","\t}","\t","\t","\t","\t/* Semi-transparent Overlay Helpers","\t------------------------------------------------------*/","\t// TODO: should be consolidated with AgendaView's methods","","","\tfunction renderDayOverlay(overlayStart, overlayEnd, refreshCoordinateGrid) { // overlayEnd is exclusive","","\t\tif (refreshCoordinateGrid) {","\t\t\tcoordinateGrid.build();","\t\t}","","\t\tvar segments = rangeToSegments(overlayStart, overlayEnd);","","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","\t\t\tdayBind(","\t\t\t\trenderCellOverlay(","\t\t\t\t\tsegment.row,","\t\t\t\t\tsegment.leftCol,","\t\t\t\t\tsegment.row,","\t\t\t\t\tsegment.rightCol","\t\t\t\t)","\t\t\t);","\t\t}","\t}","","\t","\tfunction renderCellOverlay(row0, col0, row1, col1) { // row1,col1 is inclusive","\t\tvar rect = coordinateGrid.rect(row0, col0, row1, col1, element);","\t\treturn renderOverlay(rect, element);","\t}","\t","\t","\t","\t/* Selection","\t-----------------------------------------------------------------------*/","\t","\t","\tfunction defaultSelectionEnd(startDate, allDay) {","\t\treturn cloneDate(startDate);","\t}","\t","\t","\tfunction renderSelection(startDate, endDate, allDay) {","\t\trenderDayOverlay(startDate, addDays(cloneDate(endDate), 1), true); // rebuild every time???","\t}","\t","\t","\tfunction clearSelection() {","\t\tclearOverlays();","\t}","\t","\t","\tfunction reportDayClick(date, allDay, ev) {","\t\tvar cell = dateToCell(date);","\t\tvar _element = bodyCells[cell.row*colCnt + cell.col];","\t\ttrigger('dayClick', _element, date, allDay, ev);","\t}","\t","\t","\t","\t/* External Dragging","\t-----------------------------------------------------------------------*/","\t","\t","\tfunction dragStart(_dragElement, ev, ui) {","\t\thoverListener.start(function(cell) {","\t\t\tclearOverlays();","\t\t\tif (cell) {","\t\t\t\trenderCellOverlay(cell.row, cell.col, cell.row, cell.col);","\t\t\t}","\t\t}, ev);","\t}","\t","\t","\tfunction dragStop(_dragElement, ev, ui) {","\t\tvar cell = hoverListener.stop();","\t\tclearOverlays();","\t\tif (cell) {","\t\t\tvar d = cellToDate(cell);","\t\t\ttrigger('drop', _dragElement, d, true, ev, ui);","\t\t}","\t}","\t","\t","\t","\t/* Utilities","\t--------------------------------------------------------*/","\t","\t","\tfunction defaultEventEnd(event) {","\t\treturn cloneDate(event.start);","\t}","\t","\t","\tcoordinateGrid = new CoordinateGrid(function(rows, cols) {","\t\tvar e, n, p;","\t\theadCells.each(function(i, _e) {","\t\t\te = $(_e);","\t\t\tn = e.offset().left;","\t\t\tif (i) {","\t\t\t\tp[1] = n;","\t\t\t}","\t\t\tp = [n];","\t\t\tcols[i] = p;","\t\t});","\t\tp[1] = n + e.outerWidth();","\t\tbodyRows.each(function(i, _e) {","\t\t\tif (i < rowCnt) {","\t\t\t\te = $(_e);","\t\t\t\tn = e.offset().top;","\t\t\t\tif (i) {","\t\t\t\t\tp[1] = n;","\t\t\t\t}","\t\t\t\tp = [n];","\t\t\t\trows[i] = p;","\t\t\t}","\t\t});","\t\tp[1] = n + e.outerHeight();","\t});","\t","\t","\thoverListener = new HoverListener(coordinateGrid);","\t","\tcolPositions = new HorizontalPositionCache(function(col) {","\t\treturn firstRowCellInners.eq(col);","\t});","","\tcolContentPositions = new HorizontalPositionCache(function(col) {","\t\treturn firstRowCellContentInners.eq(col);","\t});","","","\tfunction colLeft(col) {","\t\treturn colPositions.left(col);","\t}","","","\tfunction colRight(col) {","\t\treturn colPositions.right(col);","\t}","\t","\t","\tfunction colContentLeft(col) {","\t\treturn colContentPositions.left(col);","\t}","\t","\t","\tfunction colContentRight(col) {","\t\treturn colContentPositions.right(col);","\t}","\t","\t","\tfunction allDayRow(i) {","\t\treturn bodyRows.eq(i);","\t}","\t","}","",";;","","function BasicEventRenderer() {","\tvar t = this;","\t","\t","\t// exports","\tt.renderEvents = renderEvents;","\tt.clearEvents = clearEvents;","\t","","\t// imports","\tDayEventRenderer.call(t);","","\t","\tfunction renderEvents(events, modifiedEventId) {","\t\tt.renderDayEvents(events, modifiedEventId);","\t}","\t","\t","\tfunction clearEvents() {","\t\tt.getDaySegmentContainer().empty();","\t}","","","\t// TODO: have this class (and AgendaEventRenderer) be responsible for creating the event container div","","}","",";;","","fcViews.agendaWeek = AgendaWeekView;","","function AgendaWeekView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tAgendaView.call(t, element, calendar, 'agendaWeek');","\tvar opt = t.opt;","\tvar renderAgenda = t.renderAgenda;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar getCellsPerWeek = t.getCellsPerWeek;","\tvar formatDates = calendar.formatDates;","","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddDays(date, delta * 7);","\t\t}","","\t\tvar start = addDays(cloneDate(date), -((date.getDay() - opt('firstDay') + 7) % 7));","\t\tvar end = addDays(cloneDate(start), 7);","","\t\tvar visStart = cloneDate(start);","\t\tskipHiddenDays(visStart);","","\t\tvar visEnd = cloneDate(end);","\t\tskipHiddenDays(visEnd, -1, true);","","\t\tvar colCnt = getCellsPerWeek();","","\t\tt.title = formatDates(","\t\t\tvisStart,","\t\t\taddDays(cloneDate(visEnd), -1),","\t\t\topt('titleFormat')","\t\t);","","\t\tt.start = start;","\t\tt.end = end;","\t\tt.visStart = visStart;","\t\tt.visEnd = visEnd;","","\t\trenderAgenda(colCnt);","\t}","","}","",";;","","fcViews.agendaDay = AgendaDayView;","","","function AgendaDayView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tAgendaView.call(t, element, calendar, 'agendaDay');","\tvar opt = t.opt;","\tvar renderAgenda = t.renderAgenda;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar formatDate = calendar.formatDate;","\t","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddDays(date, delta);","\t\t}","\t\tskipHiddenDays(date, delta < 0 ? -1 : 1);","","\t\tvar start = cloneDate(date, true);","\t\tvar end = addDays(cloneDate(start), 1);","","\t\tt.title = formatDate(date, opt('titleFormat'));","","\t\tt.start = t.visStart = start;","\t\tt.end = t.visEnd = end;","","\t\trenderAgenda(1);","\t}","\t","","}","",";;","","setDefaults({","\tallDaySlot: true,","\tallDayText: 'all-day',","\tfirstHour: 6,","\tslotMinutes: 30,","\tdefaultEventMinutes: 120,","\taxisFormat: 'h(:mm)tt',","\ttimeFormat: {","\t\tagenda: 'h:mm{ - h:mm}'","\t},","\tdragOpacity: {","\t\tagenda: .5","\t},","\tminTime: 0,","\tmaxTime: 24,","\tslotEventOverlap: true","});","","","// TODO: make it work in quirks mode (event corners, all-day height)","// TODO: test liquid width, especially in IE6","","","function AgendaView(element, calendar, viewName) {","\tvar t = this;","\t","\t","\t// exports","\tt.renderAgenda = renderAgenda;","\tt.setWidth = setWidth;","\tt.setHeight = setHeight;","\tt.afterRender = afterRender;","\tt.defaultEventEnd = defaultEventEnd;","\tt.timePosition = timePosition;","\tt.getIsCellAllDay = getIsCellAllDay;","\tt.allDayRow = getAllDayRow;","\tt.getCoordinateGrid = function() { return coordinateGrid }; // specifically for AgendaEventRenderer","\tt.getHoverListener = function() { return hoverListener };","\tt.colLeft = colLeft;","\tt.colRight = colRight;","\tt.colContentLeft = colContentLeft;","\tt.colContentRight = colContentRight;","\tt.getDaySegmentContainer = function() { return daySegmentContainer };","\tt.getSlotSegmentContainer = function() { return slotSegmentContainer };","\tt.getMinMinute = function() { return minMinute };","\tt.getMaxMinute = function() { return maxMinute };","\tt.getSlotContainer = function() { return slotContainer };","\tt.getRowCnt = function() { return 1 };","\tt.getColCnt = function() { return colCnt };","\tt.getColWidth = function() { return colWidth };","\tt.getSnapHeight = function() { return snapHeight };","\tt.getSnapMinutes = function() { return snapMinutes };","\tt.defaultSelectionEnd = defaultSelectionEnd;","\tt.renderDayOverlay = renderDayOverlay;","\tt.renderSelection = renderSelection;","\tt.clearSelection = clearSelection;","\tt.reportDayClick = reportDayClick; // selection mousedown hack","\tt.dragStart = dragStart;","\tt.dragStop = dragStop;","\t","\t","\t// imports","\tView.call(t, element, calendar, viewName);","\tOverlayManager.call(t);","\tSelectionManager.call(t);","\tAgendaEventRenderer.call(t);","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar renderOverlay = t.renderOverlay;","\tvar clearOverlays = t.clearOverlays;","\tvar reportSelection = t.reportSelection;","\tvar unselect = t.unselect;","\tvar daySelectionMousedown = t.daySelectionMousedown;","\tvar slotSegHtml = t.slotSegHtml;","\tvar cellToDate = t.cellToDate;","\tvar dateToCell = t.dateToCell;","\tvar rangeToSegments = t.rangeToSegments;","\tvar formatDate = calendar.formatDate;","\t","\t","\t// locals","\t","\tvar dayTable;","\tvar dayHead;","\tvar dayHeadCells;","\tvar dayBody;","\tvar dayBodyCells;","\tvar dayBodyCellInners;","\tvar dayBodyCellContentInners;","\tvar dayBodyFirstCell;","\tvar dayBodyFirstCellStretcher;","\tvar slotLayer;","\tvar daySegmentContainer;","\tvar allDayTable;","\tvar allDayRow;","\tvar slotScroller;","\tvar slotContainer;","\tvar slotSegmentContainer;","\tvar slotTable;","\tvar selectionHelper;","\t","\tvar viewWidth;","\tvar viewHeight;","\tvar axisWidth;","\tvar colWidth;","\tvar gutterWidth;","\tvar slotHeight; // TODO: what if slotHeight changes? (see issue 650)","","\tvar snapMinutes;","\tvar snapRatio; // ratio of number of \"selection\" slots to normal slots. (ex: 1, 2, 4)","\tvar snapHeight; // holds the pixel hight of a \"selection\" slot","\t","\tvar colCnt;","\tvar slotCnt;","\tvar coordinateGrid;","\tvar hoverListener;","\tvar colPositions;","\tvar colContentPositions;","\tvar slotTopCache = {};","\t","\tvar tm;","\tvar rtl;","\tvar minMinute, maxMinute;","\tvar colFormat;","\tvar showWeekNumbers;","\tvar weekNumberTitle;","\tvar weekNumberFormat;","\t","","\t","\t/* Rendering","\t-----------------------------------------------------------------------------*/","\t","\t","\tdisableTextSelection(element.addClass('fc-agenda'));","\t","\t","\tfunction renderAgenda(c) {","\t\tcolCnt = c;","\t\tupdateOptions();","","\t\tif (!dayTable) { // first time rendering?","\t\t\tbuildSkeleton(); // builds day table, slot area, events containers","\t\t}","\t\telse {","\t\t\tbuildDayTable(); // rebuilds day table","\t\t}","\t}","\t","\t","\tfunction updateOptions() {","","\t\ttm = opt('theme') ? 'ui' : 'fc';","\t\trtl = opt('isRTL')","\t\tminMinute = parseTime(opt('minTime'));","\t\tmaxMinute = parseTime(opt('maxTime'));","\t\tcolFormat = opt('columnFormat');","","\t\t// week # options. (TODO: bad, logic also in other views)","\t\tshowWeekNumbers = opt('weekNumbers');","\t\tweekNumberTitle = opt('weekNumberTitle');","\t\tif (opt('weekNumberCalculation') != 'iso') {","\t\t\tweekNumberFormat = \"w\";","\t\t}","\t\telse {","\t\t\tweekNumberFormat = \"W\";","\t\t}","","\t\tsnapMinutes = opt('snapMinutes') || opt('slotMinutes');","\t}","","","","\t/* Build DOM","\t-----------------------------------------------------------------------*/","","","\tfunction buildSkeleton() {","\t\tvar headerClass = tm + \"-widget-header\";","\t\tvar contentClass = tm + \"-widget-content\";","\t\tvar s;","\t\tvar d;","\t\tvar i;","\t\tvar maxd;","\t\tvar minutes;","\t\tvar slotNormal = opt('slotMinutes') % 15 == 0;","\t\t","\t\tbuildDayTable();","\t\t","\t\tslotLayer =","\t\t\t$(\"<div style='position:absolute;z-index:2;left:0;width:100%'/>\")","\t\t\t\t.appendTo(element);","\t\t\t\t","\t\tif (opt('allDaySlot')) {","\t\t","\t\t\tdaySegmentContainer =","\t\t\t\t$(\"<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>\")","\t\t\t\t\t.appendTo(slotLayer);","\t\t","\t\t\ts =","\t\t\t\t\"<table style='width:100%' class='fc-agenda-allday' cellspacing='0'>\" +","\t\t\t\t\"<tr>\" +","\t\t\t\t\"<th class='\" + headerClass + \" fc-agenda-axis'>\" + opt('allDayText') + \"</th>\" +","\t\t\t\t\"<td>\" +","\t\t\t\t\"<div class='fc-day-content'><div style='position:relative'/></div>\" +","\t\t\t\t\"</td>\" +","\t\t\t\t\"<th class='\" + headerClass + \" fc-agenda-gutter'> </th>\" +","\t\t\t\t\"</tr>\" +","\t\t\t\t\"</table>\";","\t\t\tallDayTable = $(s).appendTo(slotLayer);","\t\t\tallDayRow = allDayTable.find('tr');","\t\t\t","\t\t\tdayBind(allDayRow.find('td'));","\t\t\t","\t\t\tslotLayer.append(","\t\t\t\t\"<div class='fc-agenda-divider \" + headerClass + \"'>\" +","\t\t\t\t\"<div class='fc-agenda-divider-inner'/>\" +","\t\t\t\t\"</div>\"","\t\t\t);","\t\t\t","\t\t}else{","\t\t","\t\t\tdaySegmentContainer = $([]); // in jQuery 1.4, we can just do $()","\t\t","\t\t}","\t\t","\t\tslotScroller =","\t\t\t$(\"<div style='position:absolute;width:100%;overflow-x:hidden;overflow-y:auto'/>\")","\t\t\t\t.appendTo(slotLayer);","\t\t\t\t","\t\tslotContainer =","\t\t\t$(\"<div style='position:relative;width:100%;overflow:hidden'/>\")","\t\t\t\t.appendTo(slotScroller);","\t\t\t\t","\t\tslotSegmentContainer =","\t\t\t$(\"<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>\")","\t\t\t\t.appendTo(slotContainer);","\t\t","\t\ts =","\t\t\t\"<table class='fc-agenda-slots' style='width:100%' cellspacing='0'>\" +","\t\t\t\"<tbody>\";","\t\td = zeroDate();","\t\tmaxd = addMinutes(cloneDate(d), maxMinute);","\t\taddMinutes(d, minMinute);","\t\tslotCnt = 0;","\t\tfor (i=0; d < maxd; i++) {","\t\t\tminutes = d.getMinutes();","\t\t\ts +=","\t\t\t\t\"<tr class='fc-slot\" + i + ' ' + (!minutes ? '' : 'fc-minor') + \"'>\" +","\t\t\t\t\"<th class='fc-agenda-axis \" + headerClass + \"'>\" +","\t\t\t\t((!slotNormal || !minutes) ? formatDate(d, opt('axisFormat')) : ' ') +","\t\t\t\t\"</th>\" +","\t\t\t\t\"<td class='\" + contentClass + \"'>\" +","\t\t\t\t\"<div style='position:relative'> </div>\" +","\t\t\t\t\"</td>\" +","\t\t\t\t\"</tr>\";","\t\t\taddMinutes(d, opt('slotMinutes'));","\t\t\tslotCnt++;","\t\t}","\t\ts +=","\t\t\t\"</tbody>\" +","\t\t\t\"</table>\";","\t\tslotTable = $(s).appendTo(slotContainer);","\t\t","\t\tslotBind(slotTable.find('td'));","\t}","","","","\t/* Build Day Table","\t-----------------------------------------------------------------------*/","","","\tfunction buildDayTable() {","\t\tvar html = buildDayTableHTML();","","\t\tif (dayTable) {","\t\t\tdayTable.remove();","\t\t}","\t\tdayTable = $(html).appendTo(element);","","\t\tdayHead = dayTable.find('thead');","\t\tdayHeadCells = dayHead.find('th').slice(1, -1); // exclude gutter","\t\tdayBody = dayTable.find('tbody');","\t\tdayBodyCells = dayBody.find('td').slice(0, -1); // exclude gutter","\t\tdayBodyCellInners = dayBodyCells.find('> div');","\t\tdayBodyCellContentInners = dayBodyCells.find('.fc-day-content > div');","","\t\tdayBodyFirstCell = dayBodyCells.eq(0);","\t\tdayBodyFirstCellStretcher = dayBodyCellInners.eq(0);","\t\t","\t\tmarkFirstLast(dayHead.add(dayHead.find('tr')));","\t\tmarkFirstLast(dayBody.add(dayBody.find('tr')));","","\t\t// TODO: now that we rebuild the cells every time, we should call dayRender","\t}","","","\tfunction buildDayTableHTML() {","\t\tvar html =","\t\t\t\"<table style='width:100%' class='fc-agenda-days fc-border-separate' cellspacing='0'>\" +","\t\t\tbuildDayTableHeadHTML() +","\t\t\tbuildDayTableBodyHTML() +","\t\t\t\"</table>\";","","\t\treturn html;","\t}","","","\tfunction buildDayTableHeadHTML() {","\t\tvar headerClass = tm + \"-widget-header\";","\t\tvar date;","\t\tvar html = '';","\t\tvar weekText;","\t\tvar col;","","\t\thtml +=","\t\t\t\"<thead>\" +","\t\t\t\"<tr>\";","","\t\tif (showWeekNumbers) {","\t\t\tdate = cellToDate(0, 0);","\t\t\tweekText = formatDate(date, weekNumberFormat);","\t\t\tif (rtl) {","\t\t\t\tweekText += weekNumberTitle;","\t\t\t}","\t\t\telse {","\t\t\t\tweekText = weekNumberTitle + weekText;","\t\t\t}","\t\t\thtml +=","\t\t\t\t\"<th class='fc-agenda-axis fc-week-number \" + headerClass + \"'>\" +","\t\t\t\thtmlEscape(weekText) +","\t\t\t\t\"</th>\";","\t\t}","\t\telse {","\t\t\thtml += \"<th class='fc-agenda-axis \" + headerClass + \"'> </th>\";","\t\t}","","\t\tfor (col=0; col<colCnt; col++) {","\t\t\tdate = cellToDate(0, col);","\t\t\thtml +=","\t\t\t\t\"<th class='fc-\" + dayIDs[date.getDay()] + \" fc-col\" + col + ' ' + headerClass + \"'>\" +","\t\t\t\thtmlEscape(formatDate(date, colFormat)) +","\t\t\t\t\"</th>\";","\t\t}","","\t\thtml +=","\t\t\t\"<th class='fc-agenda-gutter \" + headerClass + \"'> </th>\" +","\t\t\t\"</tr>\" +","\t\t\t\"</thead>\";","","\t\treturn html;","\t}","","","\tfunction buildDayTableBodyHTML() {","\t\tvar headerClass = tm + \"-widget-header\"; // TODO: make these when updateOptions() called","\t\tvar contentClass = tm + \"-widget-content\";","\t\tvar date;","\t\tvar today = clearTime(new Date());","\t\tvar col;","\t\tvar cellsHTML;","\t\tvar cellHTML;","\t\tvar classNames;","\t\tvar html = '';","","\t\thtml +=","\t\t\t\"<tbody>\" +","\t\t\t\"<tr>\" +","\t\t\t\"<th class='fc-agenda-axis \" + headerClass + \"'> </th>\";","","\t\tcellsHTML = '';","","\t\tfor (col=0; col<colCnt; col++) {","","\t\t\tdate = cellToDate(0, col);","","\t\t\tclassNames = [","\t\t\t\t'fc-col' + col,","\t\t\t\t'fc-' + dayIDs[date.getDay()],","\t\t\t\tcontentClass","\t\t\t];","\t\t\tif (+date == +today) {","\t\t\t\tclassNames.push(","\t\t\t\t\ttm + '-state-highlight',","\t\t\t\t\t'fc-today'","\t\t\t\t);","\t\t\t}","\t\t\telse if (date < today) {","\t\t\t\tclassNames.push('fc-past');","\t\t\t}","\t\t\telse {","\t\t\t\tclassNames.push('fc-future');","\t\t\t}","","\t\t\tcellHTML =","\t\t\t\t\"<td class='\" + classNames.join(' ') + \"'>\" +","\t\t\t\t\"<div>\" +","\t\t\t\t\"<div class='fc-day-content'>\" +","\t\t\t\t\"<div style='position:relative'> </div>\" +","\t\t\t\t\"</div>\" +","\t\t\t\t\"</div>\" +","\t\t\t\t\"</td>\";","","\t\t\tcellsHTML += cellHTML;","\t\t}","","\t\thtml += cellsHTML;","\t\thtml +=","\t\t\t\"<td class='fc-agenda-gutter \" + contentClass + \"'> </td>\" +","\t\t\t\"</tr>\" +","\t\t\t\"</tbody>\";","","\t\treturn html;","\t}","","","\t// TODO: data-date on the cells","","\t","\t","\t/* Dimensions","\t-----------------------------------------------------------------------*/","","\t","\tfunction setHeight(height) {","\t\tif (height === undefined) {","\t\t\theight = viewHeight;","\t\t}","\t\tviewHeight = height;","\t\tslotTopCache = {};","\t","\t\tvar headHeight = dayBody.position().top;","\t\tvar allDayHeight = slotScroller.position().top; // including divider","\t\tvar bodyHeight = Math.min( // total body height, including borders","\t\t\theight - headHeight,   // when scrollbars","\t\t\tslotTable.height() + allDayHeight + 1 // when no scrollbars. +1 for bottom border","\t\t);","","\t\tdayBodyFirstCellStretcher","\t\t\t.height(bodyHeight - vsides(dayBodyFirstCell));","\t\t","\t\tslotLayer.css('top', headHeight);","\t\t","\t\tslotScroller.height(bodyHeight - allDayHeight - 1);","\t\t","\t\t// the stylesheet guarantees that the first row has no border.","\t\t// this allows .height() to work well cross-browser.","\t\tslotHeight = slotTable.find('tr:first').height() + 1; // +1 for bottom border","","\t\tsnapRatio = opt('slotMinutes') / snapMinutes;","\t\tsnapHeight = slotHeight / snapRatio;","\t}","\t","\t","\tfunction setWidth(width) {","\t\tviewWidth = width;","\t\tcolPositions.clear();","\t\tcolContentPositions.clear();","","\t\tvar axisFirstCells = dayHead.find('th:first');","\t\tif (allDayTable) {","\t\t\taxisFirstCells = axisFirstCells.add(allDayTable.find('th:first'));","\t\t}","\t\taxisFirstCells = axisFirstCells.add(slotTable.find('th:first'));","\t\t","\t\taxisWidth = 0;","\t\tsetOuterWidth(","\t\t\taxisFirstCells","\t\t\t\t.width('')","\t\t\t\t.each(function(i, _cell) {","\t\t\t\t\taxisWidth = Math.max(axisWidth, $(_cell).outerWidth());","\t\t\t\t}),","\t\t\taxisWidth","\t\t);","\t\t","\t\tvar gutterCells = dayTable.find('.fc-agenda-gutter');","\t\tif (allDayTable) {","\t\t\tgutterCells = gutterCells.add(allDayTable.find('th.fc-agenda-gutter'));","\t\t}","","\t\tvar slotTableWidth = slotScroller[0].clientWidth; // needs to be done after axisWidth (for IE7)","\t\t","\t\tgutterWidth = slotScroller.width() - slotTableWidth;","\t\tif (gutterWidth) {","\t\t\tsetOuterWidth(gutterCells, gutterWidth);","\t\t\tgutterCells","\t\t\t\t.show()","\t\t\t\t.prev()","\t\t\t\t.removeClass('fc-last');","\t\t}else{","\t\t\tgutterCells","\t\t\t\t.hide()","\t\t\t\t.prev()","\t\t\t\t.addClass('fc-last');","\t\t}","\t\t","\t\tcolWidth = Math.floor((slotTableWidth - axisWidth) / colCnt);","\t\tsetOuterWidth(dayHeadCells.slice(0, -1), colWidth);","\t}","\t","","","\t/* Scrolling","\t-----------------------------------------------------------------------*/","","","\tfunction resetScroll() {","\t\tvar d0 = zeroDate();","\t\tvar scrollDate = cloneDate(d0);","\t\tscrollDate.setHours(opt('firstHour'));","\t\tvar top = timePosition(d0, scrollDate) + 1; // +1 for the border","\t\tfunction scroll() {","\t\t\tslotScroller.scrollTop(top);","\t\t}","\t\tscroll();","\t\tsetTimeout(scroll, 0); // overrides any previous scroll state made by the browser","\t}","","","\tfunction afterRender() { // after the view has been freshly rendered and sized","\t\tresetScroll();","\t}","\t","\t","\t","\t/* Slot/Day clicking and binding","\t-----------------------------------------------------------------------*/","\t","","\tfunction dayBind(cells) {","\t\tcells.click(slotClick)","\t\t\t.mousedown(daySelectionMousedown);","\t}","","","\tfunction slotBind(cells) {","\t\tcells.click(slotClick)","\t\t\t.mousedown(slotSelectionMousedown);","\t}","\t","\t","\tfunction slotClick(ev) {","\t\tif (!opt('selectable')) { // if selectable, SelectionManager will worry about dayClick","\t\t\tvar col = Math.min(colCnt-1, Math.floor((ev.pageX - dayTable.offset().left - axisWidth) / colWidth));","\t\t\tvar date = cellToDate(0, col);","\t\t\tvar rowMatch = this.parentNode.className.match(/fc-slot(\\d+)/); // TODO: maybe use data","\t\t\tif (rowMatch) {","\t\t\t\tvar mins = parseInt(rowMatch[1]) * opt('slotMinutes');","\t\t\t\tvar hours = Math.floor(mins/60);","\t\t\t\tdate.setHours(hours);","\t\t\t\tdate.setMinutes(mins%60 + minMinute);","\t\t\t\ttrigger('dayClick', dayBodyCells[col], date, false, ev);","\t\t\t}else{","\t\t\t\ttrigger('dayClick', dayBodyCells[col], date, true, ev);","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Semi-transparent Overlay Helpers","\t-----------------------------------------------------*/","\t// TODO: should be consolidated with BasicView's methods","","","\tfunction renderDayOverlay(overlayStart, overlayEnd, refreshCoordinateGrid) { // overlayEnd is exclusive","","\t\tif (refreshCoordinateGrid) {","\t\t\tcoordinateGrid.build();","\t\t}","","\t\tvar segments = rangeToSegments(overlayStart, overlayEnd);","","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","\t\t\tdayBind(","\t\t\t\trenderCellOverlay(","\t\t\t\t\tsegment.row,","\t\t\t\t\tsegment.leftCol,","\t\t\t\t\tsegment.row,","\t\t\t\t\tsegment.rightCol","\t\t\t\t)","\t\t\t);","\t\t}","\t}","\t","\t","\tfunction renderCellOverlay(row0, col0, row1, col1) { // only for all-day?","\t\tvar rect = coordinateGrid.rect(row0, col0, row1, col1, slotLayer);","\t\treturn renderOverlay(rect, slotLayer);","\t}","\t","","\tfunction renderSlotOverlay(overlayStart, overlayEnd) {","\t\tfor (var i=0; i<colCnt; i++) {","\t\t\tvar dayStart = cellToDate(0, i);","\t\t\tvar dayEnd = addDays(cloneDate(dayStart), 1);","\t\t\tvar stretchStart = new Date(Math.max(dayStart, overlayStart));","\t\t\tvar stretchEnd = new Date(Math.min(dayEnd, overlayEnd));","\t\t\tif (stretchStart < stretchEnd) {","\t\t\t\tvar rect = coordinateGrid.rect(0, i, 0, i, slotContainer); // only use it for horizontal coords","\t\t\t\tvar top = timePosition(dayStart, stretchStart);","\t\t\t\tvar bottom = timePosition(dayStart, stretchEnd);","\t\t\t\trect.top = top;","\t\t\t\trect.height = bottom - top;","\t\t\t\tslotBind(","\t\t\t\t\trenderOverlay(rect, slotContainer)","\t\t\t\t);","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Coordinate Utilities","\t-----------------------------------------------------------------------------*/","\t","\t","\tcoordinateGrid = new CoordinateGrid(function(rows, cols) {","\t\tvar e, n, p;","\t\tdayHeadCells.each(function(i, _e) {","\t\t\te = $(_e);","\t\t\tn = e.offset().left;","\t\t\tif (i) {","\t\t\t\tp[1] = n;","\t\t\t}","\t\t\tp = [n];","\t\t\tcols[i] = p;","\t\t});","\t\tp[1] = n + e.outerWidth();","\t\tif (opt('allDaySlot')) {","\t\t\te = allDayRow;","\t\t\tn = e.offset().top;","\t\t\trows[0] = [n, n+e.outerHeight()];","\t\t}","\t\tvar slotTableTop = slotContainer.offset().top;","\t\tvar slotScrollerTop = slotScroller.offset().top;","\t\tvar slotScrollerBottom = slotScrollerTop + slotScroller.outerHeight();","\t\tfunction constrain(n) {","\t\t\treturn Math.max(slotScrollerTop, Math.min(slotScrollerBottom, n));","\t\t}","\t\tfor (var i=0; i<slotCnt*snapRatio; i++) { // adapt slot count to increased/decreased selection slot count","\t\t\trows.push([","\t\t\t\tconstrain(slotTableTop + snapHeight*i),","\t\t\t\tconstrain(slotTableTop + snapHeight*(i+1))","\t\t\t]);","\t\t}","\t});","\t","\t","\thoverListener = new HoverListener(coordinateGrid);","\t","\tcolPositions = new HorizontalPositionCache(function(col) {","\t\treturn dayBodyCellInners.eq(col);","\t});","\t","\tcolContentPositions = new HorizontalPositionCache(function(col) {","\t\treturn dayBodyCellContentInners.eq(col);","\t});","\t","\t","\tfunction colLeft(col) {","\t\treturn colPositions.left(col);","\t}","","","\tfunction colContentLeft(col) {","\t\treturn colContentPositions.left(col);","\t}","","","\tfunction colRight(col) {","\t\treturn colPositions.right(col);","\t}","\t","\t","\tfunction colContentRight(col) {","\t\treturn colContentPositions.right(col);","\t}","","","\tfunction getIsCellAllDay(cell) {","\t\treturn opt('allDaySlot') && !cell.row;","\t}","","","\tfunction realCellToDate(cell) { // ugh \"real\" ... but blame it on our abuse of the \"cell\" system","\t\tvar d = cellToDate(0, cell.col);","\t\tvar slotIndex = cell.row;","\t\tif (opt('allDaySlot')) {","\t\t\tslotIndex--;","\t\t}","\t\tif (slotIndex >= 0) {","\t\t\taddMinutes(d, minMinute + slotIndex * snapMinutes);","\t\t}","\t\treturn d;","\t}","\t","\t","\t// get the Y coordinate of the given time on the given day (both Date objects)","\tfunction timePosition(day, time) { // both date objects. day holds 00:00 of current day","\t\tday = cloneDate(day, true);","\t\tif (time < addMinutes(cloneDate(day), minMinute)) {","\t\t\treturn 0;","\t\t}","\t\tif (time >= addMinutes(cloneDate(day), maxMinute)) {","\t\t\treturn slotTable.height();","\t\t}","\t\tvar slotMinutes = opt('slotMinutes'),","\t\t\tminutes = time.getHours()*60 + time.getMinutes() - minMinute,","\t\t\tslotI = Math.floor(minutes / slotMinutes),","\t\t\tslotTop = slotTopCache[slotI];","\t\tif (slotTop === undefined) {","\t\t\tslotTop = slotTopCache[slotI] =","\t\t\t\tslotTable.find('tr').eq(slotI).find('td div')[0].offsetTop;","\t\t\t\t// .eq() is faster than \":eq()\" selector","\t\t\t\t// [0].offsetTop is faster than .position().top (do we really need this optimization?)","\t\t\t\t// a better optimization would be to cache all these divs","\t\t}","\t\treturn Math.max(0, Math.round(","\t\t\tslotTop - 1 + slotHeight * ((minutes % slotMinutes) / slotMinutes)","\t\t));","\t}","\t","\t","\tfunction getAllDayRow(index) {","\t\treturn allDayRow;","\t}","\t","\t","\tfunction defaultEventEnd(event) {","\t\tvar start = cloneDate(event.start);","\t\tif (event.allDay) {","\t\t\treturn start;","\t\t}","\t\treturn addMinutes(start, opt('defaultEventMinutes'));","\t}","\t","\t","\t","\t/* Selection","\t---------------------------------------------------------------------------------*/","\t","\t","\tfunction defaultSelectionEnd(startDate, allDay) {","\t\tif (allDay) {","\t\t\treturn cloneDate(startDate);","\t\t}","\t\treturn addMinutes(cloneDate(startDate), opt('slotMinutes'));","\t}","\t","\t","\tfunction renderSelection(startDate, endDate, allDay) { // only for all-day","\t\tif (allDay) {","\t\t\tif (opt('allDaySlot')) {","\t\t\t\trenderDayOverlay(startDate, addDays(cloneDate(endDate), 1), true);","\t\t\t}","\t\t}else{","\t\t\trenderSlotSelection(startDate, endDate);","\t\t}","\t}","\t","\t","\tfunction renderSlotSelection(startDate, endDate) {","\t\tvar helperOption = opt('selectHelper');","\t\tcoordinateGrid.build();","\t\tif (helperOption) {","\t\t\tvar col = dateToCell(startDate).col;","\t\t\tif (col >= 0 && col < colCnt) { // only works when times are on same day","\t\t\t\tvar rect = coordinateGrid.rect(0, col, 0, col, slotContainer); // only for horizontal coords","\t\t\t\tvar top = timePosition(startDate, startDate);","\t\t\t\tvar bottom = timePosition(startDate, endDate);","\t\t\t\tif (bottom > top) { // protect against selections that are entirely before or after visible range","\t\t\t\t\trect.top = top;","\t\t\t\t\trect.height = bottom - top;","\t\t\t\t\trect.left += 2;","\t\t\t\t\trect.width -= 5;","\t\t\t\t\tif ($.isFunction(helperOption)) {","\t\t\t\t\t\tvar helperRes = helperOption(startDate, endDate);","\t\t\t\t\t\tif (helperRes) {","\t\t\t\t\t\t\trect.position = 'absolute';","\t\t\t\t\t\t\tselectionHelper = $(helperRes)","\t\t\t\t\t\t\t\t.css(rect)","\t\t\t\t\t\t\t\t.appendTo(slotContainer);","\t\t\t\t\t\t}","\t\t\t\t\t}else{","\t\t\t\t\t\trect.isStart = true; // conside rect a \"seg\" now","\t\t\t\t\t\trect.isEnd = true;   //","\t\t\t\t\t\tselectionHelper = $(slotSegHtml(","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\ttitle: '',","\t\t\t\t\t\t\t\tstart: startDate,","\t\t\t\t\t\t\t\tend: endDate,","\t\t\t\t\t\t\t\tclassName: ['fc-select-helper'],","\t\t\t\t\t\t\t\teditable: false","\t\t\t\t\t\t\t},","\t\t\t\t\t\t\trect","\t\t\t\t\t\t));","\t\t\t\t\t\tselectionHelper.css('opacity', opt('dragOpacity'));","\t\t\t\t\t}","\t\t\t\t\tif (selectionHelper) {","\t\t\t\t\t\tslotBind(selectionHelper);","\t\t\t\t\t\tslotContainer.append(selectionHelper);","\t\t\t\t\t\tsetOuterWidth(selectionHelper, rect.width, true); // needs to be after appended","\t\t\t\t\t\tsetOuterHeight(selectionHelper, rect.height, true);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}else{","\t\t\trenderSlotOverlay(startDate, endDate);","\t\t}","\t}","\t","\t","\tfunction clearSelection() {","\t\tclearOverlays();","\t\tif (selectionHelper) {","\t\t\tselectionHelper.remove();","\t\t\tselectionHelper = null;","\t\t}","\t}","\t","\t","\tfunction slotSelectionMousedown(ev) {","\t\tif (ev.which == 1 && opt('selectable')) { // ev.which==1 means left mouse button","\t\t\tunselect(ev);","\t\t\tvar dates;","\t\t\thoverListener.start(function(cell, origCell) {","\t\t\t\tclearSelection();","\t\t\t\tif (cell && cell.col == origCell.col && !getIsCellAllDay(cell)) {","\t\t\t\t\tvar d1 = realCellToDate(origCell);","\t\t\t\t\tvar d2 = realCellToDate(cell);","\t\t\t\t\tdates = [","\t\t\t\t\t\td1,","\t\t\t\t\t\taddMinutes(cloneDate(d1), snapMinutes), // calculate minutes depending on selection slot minutes ","\t\t\t\t\t\td2,","\t\t\t\t\t\taddMinutes(cloneDate(d2), snapMinutes)","\t\t\t\t\t].sort(dateCompare);","\t\t\t\t\trenderSlotSelection(dates[0], dates[3]);","\t\t\t\t}else{","\t\t\t\t\tdates = null;","\t\t\t\t}","\t\t\t}, ev);","\t\t\t$(document).one('mouseup', function(ev) {","\t\t\t\thoverListener.stop();","\t\t\t\tif (dates) {","\t\t\t\t\tif (+dates[0] == +dates[1]) {","\t\t\t\t\t\treportDayClick(dates[0], false, ev);","\t\t\t\t\t}","\t\t\t\t\treportSelection(dates[0], dates[3], false, ev);","\t\t\t\t}","\t\t\t});","\t\t}","\t}","","","\tfunction reportDayClick(date, allDay, ev) {","\t\ttrigger('dayClick', dayBodyCells[dateToCell(date).col], date, allDay, ev);","\t}","\t","\t","\t","\t/* External Dragging","\t--------------------------------------------------------------------------------*/","\t","\t","\tfunction dragStart(_dragElement, ev, ui) {","\t\thoverListener.start(function(cell) {","\t\t\tclearOverlays();","\t\t\tif (cell) {","\t\t\t\tif (getIsCellAllDay(cell)) {","\t\t\t\t\trenderCellOverlay(cell.row, cell.col, cell.row, cell.col);","\t\t\t\t}else{","\t\t\t\t\tvar d1 = realCellToDate(cell);","\t\t\t\t\tvar d2 = addMinutes(cloneDate(d1), opt('defaultEventMinutes'));","\t\t\t\t\trenderSlotOverlay(d1, d2);","\t\t\t\t}","\t\t\t}","\t\t}, ev);","\t}","\t","\t","\tfunction dragStop(_dragElement, ev, ui) {","\t\tvar cell = hoverListener.stop();","\t\tclearOverlays();","\t\tif (cell) {","\t\t\ttrigger('drop', _dragElement, realCellToDate(cell), getIsCellAllDay(cell), ev, ui);","\t\t}","\t}","\t","","}","",";;","","function AgendaEventRenderer() {","\tvar t = this;","\t","\t","\t// exports","\tt.renderEvents = renderEvents;","\tt.clearEvents = clearEvents;","\tt.slotSegHtml = slotSegHtml;","\t","\t","\t// imports","\tDayEventRenderer.call(t);","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar isEventDraggable = t.isEventDraggable;","\tvar isEventResizable = t.isEventResizable;","\tvar eventEnd = t.eventEnd;","\tvar eventElementHandlers = t.eventElementHandlers;","\tvar setHeight = t.setHeight;","\tvar getDaySegmentContainer = t.getDaySegmentContainer;","\tvar getSlotSegmentContainer = t.getSlotSegmentContainer;","\tvar getHoverListener = t.getHoverListener;","\tvar getMaxMinute = t.getMaxMinute;","\tvar getMinMinute = t.getMinMinute;","\tvar timePosition = t.timePosition;","\tvar getIsCellAllDay = t.getIsCellAllDay;","\tvar colContentLeft = t.colContentLeft;","\tvar colContentRight = t.colContentRight;","\tvar cellToDate = t.cellToDate;","\tvar getColCnt = t.getColCnt;","\tvar getColWidth = t.getColWidth;","\tvar getSnapHeight = t.getSnapHeight;","\tvar getSnapMinutes = t.getSnapMinutes;","\tvar getSlotContainer = t.getSlotContainer;","\tvar reportEventElement = t.reportEventElement;","\tvar showEvents = t.showEvents;","\tvar hideEvents = t.hideEvents;","\tvar eventDrop = t.eventDrop;","\tvar eventResize = t.eventResize;","\tvar renderDayOverlay = t.renderDayOverlay;","\tvar clearOverlays = t.clearOverlays;","\tvar renderDayEvents = t.renderDayEvents;","\tvar calendar = t.calendar;","\tvar formatDate = calendar.formatDate;","\tvar formatDates = calendar.formatDates;","","","\t// overrides","\tt.draggableDayEvent = draggableDayEvent;","","\t","\t","\t/* Rendering","\t----------------------------------------------------------------------------*/","\t","","\tfunction renderEvents(events, modifiedEventId) {","\t\tvar i, len=events.length,","\t\t\tdayEvents=[],","\t\t\tslotEvents=[];","\t\tfor (i=0; i<len; i++) {","\t\t\tif (events[i].allDay) {","\t\t\t\tdayEvents.push(events[i]);","\t\t\t}else{","\t\t\t\tslotEvents.push(events[i]);","\t\t\t}","\t\t}","","\t\tif (opt('allDaySlot')) {","\t\t\trenderDayEvents(dayEvents, modifiedEventId);","\t\t\tsetHeight(); // no params means set to viewHeight","\t\t}","","\t\trenderSlotSegs(compileSlotSegs(slotEvents), modifiedEventId);","\t}","\t","\t","\tfunction clearEvents() {","\t\tgetDaySegmentContainer().empty();","\t\tgetSlotSegmentContainer().empty();","\t}","","\t","\tfunction compileSlotSegs(events) {","\t\tvar colCnt = getColCnt(),","\t\t\tminMinute = getMinMinute(),","\t\t\tmaxMinute = getMaxMinute(),","\t\t\td,","\t\t\tvisEventEnds = $.map(events, slotEventEnd),","\t\t\ti,","\t\t\tj, seg,","\t\t\tcolSegs,","\t\t\tsegs = [];","","\t\tfor (i=0; i<colCnt; i++) {","","\t\t\td = cellToDate(0, i);","\t\t\taddMinutes(d, minMinute);","","\t\t\tcolSegs = sliceSegs(","\t\t\t\tevents,","\t\t\t\tvisEventEnds,","\t\t\t\td,","\t\t\t\taddMinutes(cloneDate(d), maxMinute-minMinute)","\t\t\t);","","\t\t\tcolSegs = placeSlotSegs(colSegs); // returns a new order","","\t\t\tfor (j=0; j<colSegs.length; j++) {","\t\t\t\tseg = colSegs[j];","\t\t\t\tseg.col = i;","\t\t\t\tsegs.push(seg);","\t\t\t}","\t\t}","","\t\treturn segs;","\t}","","","\tfunction sliceSegs(events, visEventEnds, start, end) {","\t\tvar segs = [],","\t\t\ti, len=events.length, event,","\t\t\teventStart, eventEnd,","\t\t\tsegStart, segEnd,","\t\t\tisStart, isEnd;","\t\tfor (i=0; i<len; i++) {","\t\t\tevent = events[i];","\t\t\teventStart = event.start;","\t\t\teventEnd = visEventEnds[i];","\t\t\tif (eventEnd > start && eventStart < end) {","\t\t\t\tif (eventStart < start) {","\t\t\t\t\tsegStart = cloneDate(start);","\t\t\t\t\tisStart = false;","\t\t\t\t}else{","\t\t\t\t\tsegStart = eventStart;","\t\t\t\t\tisStart = true;","\t\t\t\t}","\t\t\t\tif (eventEnd > end) {","\t\t\t\t\tsegEnd = cloneDate(end);","\t\t\t\t\tisEnd = false;","\t\t\t\t}else{","\t\t\t\t\tsegEnd = eventEnd;","\t\t\t\t\tisEnd = true;","\t\t\t\t}","\t\t\t\tsegs.push({","\t\t\t\t\tevent: event,","\t\t\t\t\tstart: segStart,","\t\t\t\t\tend: segEnd,","\t\t\t\t\tisStart: isStart,","\t\t\t\t\tisEnd: isEnd","\t\t\t\t});","\t\t\t}","\t\t}","\t\treturn segs.sort(compareSlotSegs);","\t}","","","\tfunction slotEventEnd(event) {","\t\tif (event.end) {","\t\t\treturn cloneDate(event.end);","\t\t}else{","\t\t\treturn addMinutes(cloneDate(event.start), opt('defaultEventMinutes'));","\t\t}","\t}","\t","\t","\t// renders events in the 'time slots' at the bottom","\t// TODO: when we refactor this, when user returns `false` eventRender, don't have empty space","\t// TODO: refactor will include using pixels to detect collisions instead of dates (handy for seg cmp)","\t","\tfunction renderSlotSegs(segs, modifiedEventId) {","\t","\t\tvar i, segCnt=segs.length, seg,","\t\t\tevent,","\t\t\ttop,","\t\t\tbottom,","\t\t\tcolumnLeft,","\t\t\tcolumnRight,","\t\t\tcolumnWidth,","\t\t\twidth,","\t\t\tleft,","\t\t\tright,","\t\t\thtml = '',","\t\t\teventElements,","\t\t\teventElement,","\t\t\ttriggerRes,","\t\t\ttitleElement,","\t\t\theight,","\t\t\tslotSegmentContainer = getSlotSegmentContainer(),","\t\t\tisRTL = opt('isRTL');","\t\t\t","\t\t// calculate position/dimensions, create html","\t\tfor (i=0; i<segCnt; i++) {","\t\t\tseg = segs[i];","\t\t\tevent = seg.event;","\t\t\ttop = timePosition(seg.start, seg.start);","\t\t\tbottom = timePosition(seg.start, seg.end);","\t\t\tcolumnLeft = colContentLeft(seg.col);","\t\t\tcolumnRight = colContentRight(seg.col);","\t\t\tcolumnWidth = columnRight - columnLeft;","","\t\t\t// shave off space on right near scrollbars (2.5%)","\t\t\t// TODO: move this to CSS somehow","\t\t\tcolumnRight -= columnWidth * .025;","\t\t\tcolumnWidth = columnRight - columnLeft;","","\t\t\twidth = columnWidth * (seg.forwardCoord - seg.backwardCoord);","","\t\t\tif (opt('slotEventOverlap')) {","\t\t\t\t// double the width while making sure resize handle is visible","\t\t\t\t// (assumed to be 20px wide)","\t\t\t\twidth = Math.max(","\t\t\t\t\t(width - (20/2)) * 2,","\t\t\t\t\twidth // narrow columns will want to make the segment smaller than","\t\t\t\t\t\t// the natural width. don't allow it","\t\t\t\t);","\t\t\t}","","\t\t\tif (isRTL) {","\t\t\t\tright = columnRight - seg.backwardCoord * columnWidth;","\t\t\t\tleft = right - width;","\t\t\t}","\t\t\telse {","\t\t\t\tleft = columnLeft + seg.backwardCoord * columnWidth;","\t\t\t\tright = left + width;","\t\t\t}","","\t\t\t// make sure horizontal coordinates are in bounds","\t\t\tleft = Math.max(left, columnLeft);","\t\t\tright = Math.min(right, columnRight);","\t\t\twidth = right - left;","","\t\t\tseg.top = top;","\t\t\tseg.left = left;","\t\t\tseg.outerWidth = width;","\t\t\tseg.outerHeight = bottom - top;","\t\t\thtml += slotSegHtml(event, seg);","\t\t}","","\t\tslotSegmentContainer[0].innerHTML = html; // faster than html()","\t\teventElements = slotSegmentContainer.children();","\t\t","\t\t// retrieve elements, run through eventRender callback, bind event handlers","\t\tfor (i=0; i<segCnt; i++) {","\t\t\tseg = segs[i];","\t\t\tevent = seg.event;","\t\t\teventElement = $(eventElements[i]); // faster than eq()","\t\t\ttriggerRes = trigger('eventRender', event, event, eventElement);","\t\t\tif (triggerRes === false) {","\t\t\t\teventElement.remove();","\t\t\t}else{","\t\t\t\tif (triggerRes && triggerRes !== true) {","\t\t\t\t\teventElement.remove();","\t\t\t\t\teventElement = $(triggerRes)","\t\t\t\t\t\t.css({","\t\t\t\t\t\t\tposition: 'absolute',","\t\t\t\t\t\t\ttop: seg.top,","\t\t\t\t\t\t\tleft: seg.left","\t\t\t\t\t\t})","\t\t\t\t\t\t.appendTo(slotSegmentContainer);","\t\t\t\t}","\t\t\t\tseg.element = eventElement;","\t\t\t\tif (event._id === modifiedEventId) {","\t\t\t\t\tbindSlotSeg(event, eventElement, seg);","\t\t\t\t}else{","\t\t\t\t\teventElement[0]._fci = i; // for lazySegBind","\t\t\t\t}","\t\t\t\treportEventElement(event, eventElement);","\t\t\t}","\t\t}","\t\t","\t\tlazySegBind(slotSegmentContainer, segs, bindSlotSeg);","\t\t","\t\t// record event sides and title positions","\t\tfor (i=0; i<segCnt; i++) {","\t\t\tseg = segs[i];","\t\t\tif (eventElement = seg.element) {","\t\t\t\tseg.vsides = vsides(eventElement, true);","\t\t\t\tseg.hsides = hsides(eventElement, true);","\t\t\t\ttitleElement = eventElement.find('.fc-event-title');","\t\t\t\tif (titleElement.length) {","\t\t\t\t\tseg.contentTop = titleElement[0].offsetTop;","\t\t\t\t}","\t\t\t}","\t\t}","\t\t","\t\t// set all positions/dimensions at once","\t\tfor (i=0; i<segCnt; i++) {","\t\t\tseg = segs[i];","\t\t\tif (eventElement = seg.element) {","\t\t\t\teventElement[0].style.width = Math.max(0, seg.outerWidth - seg.hsides) + 'px';","\t\t\t\theight = Math.max(0, seg.outerHeight - seg.vsides);","\t\t\t\teventElement[0].style.height = height + 'px';","\t\t\t\tevent = seg.event;","\t\t\t\tif (seg.contentTop !== undefined && height - seg.contentTop < 10) {","\t\t\t\t\t// not enough room for title, put it in the time (TODO: maybe make both display:inline instead)","\t\t\t\t\teventElement.find('div.fc-event-time')","\t\t\t\t\t\t.text(formatDate(event.start, opt('timeFormat')) + ' - ' + event.title);","\t\t\t\t\teventElement.find('div.fc-event-title')","\t\t\t\t\t\t.remove();","\t\t\t\t}","\t\t\t\ttrigger('eventAfterRender', event, event, eventElement);","\t\t\t}","\t\t}","\t\t\t\t\t","\t}","\t","\t","\tfunction slotSegHtml(event, seg) {","\t\tvar html = \"<\";","\t\tvar url = event.url;","\t\tvar skinCss = getSkinCss(event, opt);","\t\tvar classes = ['fc-event', 'fc-event-vert'];","\t\tif (isEventDraggable(event)) {","\t\t\tclasses.push('fc-event-draggable');","\t\t}","\t\tif (seg.isStart) {","\t\t\tclasses.push('fc-event-start');","\t\t}","\t\tif (seg.isEnd) {","\t\t\tclasses.push('fc-event-end');","\t\t}","\t\tclasses = classes.concat(event.className);","\t\tif (event.source) {","\t\t\tclasses = classes.concat(event.source.className || []);","\t\t}","\t\tif (url) {","\t\t\thtml += \"a href='\" + htmlEscape(event.url) + \"'\";","\t\t}else{","\t\t\thtml += \"div\";","\t\t}","\t\thtml +=","\t\t\t\" class='\" + classes.join(' ') + \"'\" +","\t\t\t\" style=\" +","\t\t\t\t\"'\" +","\t\t\t\t\"position:absolute;\" +","\t\t\t\t\"top:\" + seg.top + \"px;\" +","\t\t\t\t\"left:\" + seg.left + \"px;\" +","\t\t\t\tskinCss +","\t\t\t\t\"'\" +","\t\t\t\">\" +","\t\t\t\"<div class='fc-event-inner'>\" +","\t\t\t\"<div class='fc-event-time'>\" +","\t\t\thtmlEscape(formatDates(event.start, event.end, opt('timeFormat'))) +","\t\t\t\"</div>\" +","\t\t\t\"<div class='fc-event-title'>\" +","\t\t\thtmlEscape(event.title || '') +","\t\t\t\"</div>\" +","\t\t\t\"</div>\" +","\t\t\t\"<div class='fc-event-bg'></div>\";","\t\tif (seg.isEnd && isEventResizable(event)) {","\t\t\thtml +=","\t\t\t\t\"<div class='ui-resizable-handle ui-resizable-s'>=</div>\";","\t\t}","\t\thtml +=","\t\t\t\"</\" + (url ? \"a\" : \"div\") + \">\";","\t\treturn html;","\t}","\t","\t","\tfunction bindSlotSeg(event, eventElement, seg) {","\t\tvar timeElement = eventElement.find('div.fc-event-time');","\t\tif (isEventDraggable(event)) {","\t\t\tdraggableSlotEvent(event, eventElement, timeElement);","\t\t}","\t\tif (seg.isEnd && isEventResizable(event)) {","\t\t\tresizableSlotEvent(event, eventElement, timeElement);","\t\t}","\t\teventElementHandlers(event, eventElement);","\t}","\t","\t","\t","\t/* Dragging","\t-----------------------------------------------------------------------------------*/","\t","\t","\t// when event starts out FULL-DAY","\t// overrides DayEventRenderer's version because it needs to account for dragging elements","\t// to and from the slot area.","\t","\tfunction draggableDayEvent(event, eventElement, seg) {","\t\tvar isStart = seg.isStart;","\t\tvar origWidth;","\t\tvar revert;","\t\tvar allDay = true;","\t\tvar dayDelta;","\t\tvar hoverListener = getHoverListener();","\t\tvar colWidth = getColWidth();","\t\tvar snapHeight = getSnapHeight();","\t\tvar snapMinutes = getSnapMinutes();","\t\tvar minMinute = getMinMinute();","\t\teventElement.draggable({","\t\t\topacity: opt('dragOpacity', 'month'), // use whatever the month view was using","\t\t\trevertDuration: opt('dragRevertDuration'),","\t\t\tstart: function(ev, ui) {","\t\t\t\ttrigger('eventDragStart', eventElement, event, ev, ui);","\t\t\t\thideEvents(event, eventElement);","\t\t\t\torigWidth = eventElement.width();","\t\t\t\thoverListener.start(function(cell, origCell) {","\t\t\t\t\tclearOverlays();","\t\t\t\t\tif (cell) {","\t\t\t\t\t\trevert = false;","\t\t\t\t\t\tvar origDate = cellToDate(0, origCell.col);","\t\t\t\t\t\tvar date = cellToDate(0, cell.col);","\t\t\t\t\t\tdayDelta = dayDiff(date, origDate);","\t\t\t\t\t\tif (!cell.row) {","\t\t\t\t\t\t\t// on full-days","\t\t\t\t\t\t\trenderDayOverlay(","\t\t\t\t\t\t\t\taddDays(cloneDate(event.start), dayDelta),","\t\t\t\t\t\t\t\taddDays(exclEndDay(event), dayDelta)","\t\t\t\t\t\t\t);","\t\t\t\t\t\t\tresetElement();","\t\t\t\t\t\t}else{","\t\t\t\t\t\t\t// mouse is over bottom slots","\t\t\t\t\t\t\tif (isStart) {","\t\t\t\t\t\t\t\tif (allDay) {","\t\t\t\t\t\t\t\t\t// convert event to temporary slot-event","\t\t\t\t\t\t\t\t\teventElement.width(colWidth - 10); // don't use entire width","\t\t\t\t\t\t\t\t\tsetOuterHeight(","\t\t\t\t\t\t\t\t\t\teventElement,","\t\t\t\t\t\t\t\t\t\tsnapHeight * Math.round(","\t\t\t\t\t\t\t\t\t\t\t(event.end ? ((event.end - event.start) / MINUTE_MS) : opt('defaultEventMinutes')) /","\t\t\t\t\t\t\t\t\t\t\t\tsnapMinutes","\t\t\t\t\t\t\t\t\t\t)","\t\t\t\t\t\t\t\t\t);","\t\t\t\t\t\t\t\t\teventElement.draggable('option', 'grid', [colWidth, 1]);","\t\t\t\t\t\t\t\t\tallDay = false;","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}else{","\t\t\t\t\t\t\t\trevert = true;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\trevert = revert || (allDay && !dayDelta);","\t\t\t\t\t}else{","\t\t\t\t\t\tresetElement();","\t\t\t\t\t\trevert = true;","\t\t\t\t\t}","\t\t\t\t\teventElement.draggable('option', 'revert', revert);","\t\t\t\t}, ev, 'drag');","\t\t\t},","\t\t\tstop: function(ev, ui) {","\t\t\t\thoverListener.stop();","\t\t\t\tclearOverlays();","\t\t\t\ttrigger('eventDragStop', eventElement, event, ev, ui);","\t\t\t\tif (revert) {","\t\t\t\t\t// hasn't moved or is out of bounds (draggable has already reverted)","\t\t\t\t\tresetElement();","\t\t\t\t\teventElement.css('filter', ''); // clear IE opacity side-effects","\t\t\t\t\tshowEvents(event, eventElement);","\t\t\t\t}else{","\t\t\t\t\t// changed!","\t\t\t\t\tvar minuteDelta = 0;","\t\t\t\t\tif (!allDay) {","\t\t\t\t\t\tminuteDelta = Math.round((eventElement.offset().top - getSlotContainer().offset().top) / snapHeight)","\t\t\t\t\t\t\t* snapMinutes","\t\t\t\t\t\t\t+ minMinute","\t\t\t\t\t\t\t- (event.start.getHours() * 60 + event.start.getMinutes());","\t\t\t\t\t}","\t\t\t\t\teventDrop(this, event, dayDelta, minuteDelta, allDay, ev, ui);","\t\t\t\t}","\t\t\t}","\t\t});","\t\tfunction resetElement() {","\t\t\tif (!allDay) {","\t\t\t\teventElement","\t\t\t\t\t.width(origWidth)","\t\t\t\t\t.height('')","\t\t\t\t\t.draggable('option', 'grid', null);","\t\t\t\tallDay = true;","\t\t\t}","\t\t}","\t}","\t","\t","\t// when event starts out IN TIMESLOTS","\t","\tfunction draggableSlotEvent(event, eventElement, timeElement) {","\t\tvar coordinateGrid = t.getCoordinateGrid();","\t\tvar colCnt = getColCnt();","\t\tvar colWidth = getColWidth();","\t\tvar snapHeight = getSnapHeight();","\t\tvar snapMinutes = getSnapMinutes();","","\t\t// states","\t\tvar origPosition; // original position of the element, not the mouse","\t\tvar origCell;","\t\tvar isInBounds, prevIsInBounds;","\t\tvar isAllDay, prevIsAllDay;","\t\tvar colDelta, prevColDelta;","\t\tvar dayDelta; // derived from colDelta","\t\tvar minuteDelta, prevMinuteDelta;","","\t\teventElement.draggable({","\t\t\tscroll: false,","\t\t\tgrid: [ colWidth, snapHeight ],","\t\t\taxis: colCnt==1 ? 'y' : false,","\t\t\topacity: opt('dragOpacity'),","\t\t\trevertDuration: opt('dragRevertDuration'),","\t\t\tstart: function(ev, ui) {","","\t\t\t\ttrigger('eventDragStart', eventElement, event, ev, ui);","\t\t\t\thideEvents(event, eventElement);","","\t\t\t\tcoordinateGrid.build();","","\t\t\t\t// initialize states","\t\t\t\torigPosition = eventElement.position();","\t\t\t\torigCell = coordinateGrid.cell(ev.pageX, ev.pageY);","\t\t\t\tisInBounds = prevIsInBounds = true;","\t\t\t\tisAllDay = prevIsAllDay = getIsCellAllDay(origCell);","\t\t\t\tcolDelta = prevColDelta = 0;","\t\t\t\tdayDelta = 0;","\t\t\t\tminuteDelta = prevMinuteDelta = 0;","","\t\t\t},","\t\t\tdrag: function(ev, ui) {","","\t\t\t\t// NOTE: this `cell` value is only useful for determining in-bounds and all-day.","\t\t\t\t// Bad for anything else due to the discrepancy between the mouse position and the","\t\t\t\t// element position while snapping. (problem revealed in PR #55)","\t\t\t\t//","\t\t\t\t// PS- the problem exists for draggableDayEvent() when dragging an all-day event to a slot event.","\t\t\t\t// We should overhaul the dragging system and stop relying on jQuery UI.","\t\t\t\tvar cell = coordinateGrid.cell(ev.pageX, ev.pageY);","","\t\t\t\t// update states","\t\t\t\tisInBounds = !!cell;","\t\t\t\tif (isInBounds) {","\t\t\t\t\tisAllDay = getIsCellAllDay(cell);","","\t\t\t\t\t// calculate column delta","\t\t\t\t\tcolDelta = Math.round((ui.position.left - origPosition.left) / colWidth);","\t\t\t\t\tif (colDelta != prevColDelta) {","\t\t\t\t\t\t// calculate the day delta based off of the original clicked column and the column delta","\t\t\t\t\t\tvar origDate = cellToDate(0, origCell.col);","\t\t\t\t\t\tvar col = origCell.col + colDelta;","\t\t\t\t\t\tcol = Math.max(0, col);","\t\t\t\t\t\tcol = Math.min(colCnt-1, col);","\t\t\t\t\t\tvar date = cellToDate(0, col);","\t\t\t\t\t\tdayDelta = dayDiff(date, origDate);","\t\t\t\t\t}","","\t\t\t\t\t// calculate minute delta (only if over slots)","\t\t\t\t\tif (!isAllDay) {","\t\t\t\t\t\tminuteDelta = Math.round((ui.position.top - origPosition.top) / snapHeight) * snapMinutes;","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\t// any state changes?","\t\t\t\tif (","\t\t\t\t\tisInBounds != prevIsInBounds ||","\t\t\t\t\tisAllDay != prevIsAllDay ||","\t\t\t\t\tcolDelta != prevColDelta ||","\t\t\t\t\tminuteDelta != prevMinuteDelta","\t\t\t\t) {","","\t\t\t\t\tupdateUI();","","\t\t\t\t\t// update previous states for next time","\t\t\t\t\tprevIsInBounds = isInBounds;","\t\t\t\t\tprevIsAllDay = isAllDay;","\t\t\t\t\tprevColDelta = colDelta;","\t\t\t\t\tprevMinuteDelta = minuteDelta;","\t\t\t\t}","","\t\t\t\t// if out-of-bounds, revert when done, and vice versa.","\t\t\t\teventElement.draggable('option', 'revert', !isInBounds);","","\t\t\t},","\t\t\tstop: function(ev, ui) {","","\t\t\t\tclearOverlays();","\t\t\t\ttrigger('eventDragStop', eventElement, event, ev, ui);","","\t\t\t\tif (isInBounds && (isAllDay || dayDelta || minuteDelta)) { // changed!","\t\t\t\t\teventDrop(this, event, dayDelta, isAllDay ? 0 : minuteDelta, isAllDay, ev, ui);","\t\t\t\t}","\t\t\t\telse { // either no change or out-of-bounds (draggable has already reverted)","","\t\t\t\t\t// reset states for next time, and for updateUI()","\t\t\t\t\tisInBounds = true;","\t\t\t\t\tisAllDay = false;","\t\t\t\t\tcolDelta = 0;","\t\t\t\t\tdayDelta = 0;","\t\t\t\t\tminuteDelta = 0;","","\t\t\t\t\tupdateUI();","\t\t\t\t\teventElement.css('filter', ''); // clear IE opacity side-effects","","\t\t\t\t\t// sometimes fast drags make event revert to wrong position, so reset.","\t\t\t\t\t// also, if we dragged the element out of the area because of snapping,","\t\t\t\t\t// but the *mouse* is still in bounds, we need to reset the position.","\t\t\t\t\teventElement.css(origPosition);","","\t\t\t\t\tshowEvents(event, eventElement);","\t\t\t\t}","\t\t\t}","\t\t});","","\t\tfunction updateUI() {","\t\t\tclearOverlays();","\t\t\tif (isInBounds) {","\t\t\t\tif (isAllDay) {","\t\t\t\t\ttimeElement.hide();","\t\t\t\t\teventElement.draggable('option', 'grid', null); // disable grid snapping","\t\t\t\t\trenderDayOverlay(","\t\t\t\t\t\taddDays(cloneDate(event.start), dayDelta),","\t\t\t\t\t\taddDays(exclEndDay(event), dayDelta)","\t\t\t\t\t);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tupdateTimeText(minuteDelta);","\t\t\t\t\ttimeElement.css('display', ''); // show() was causing display=inline","\t\t\t\t\teventElement.draggable('option', 'grid', [colWidth, snapHeight]); // re-enable grid snapping","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tfunction updateTimeText(minuteDelta) {","\t\t\tvar newStart = addMinutes(cloneDate(event.start), minuteDelta);","\t\t\tvar newEnd;","\t\t\tif (event.end) {","\t\t\t\tnewEnd = addMinutes(cloneDate(event.end), minuteDelta);","\t\t\t}","\t\t\ttimeElement.text(formatDates(newStart, newEnd, opt('timeFormat')));","\t\t}","","\t}","\t","\t","\t","\t/* Resizing","\t--------------------------------------------------------------------------------------*/","\t","\t","\tfunction resizableSlotEvent(event, eventElement, timeElement) {","\t\tvar snapDelta, prevSnapDelta;","\t\tvar snapHeight = getSnapHeight();","\t\tvar snapMinutes = getSnapMinutes();","\t\teventElement.resizable({","\t\t\thandles: {","\t\t\t\ts: '.ui-resizable-handle'","\t\t\t},","\t\t\tgrid: snapHeight,","\t\t\tstart: function(ev, ui) {","\t\t\t\tsnapDelta = prevSnapDelta = 0;","\t\t\t\thideEvents(event, eventElement);","\t\t\t\ttrigger('eventResizeStart', this, event, ev, ui);","\t\t\t},","\t\t\tresize: function(ev, ui) {","\t\t\t\t// don't rely on ui.size.height, doesn't take grid into account","\t\t\t\tsnapDelta = Math.round((Math.max(snapHeight, eventElement.height()) - ui.originalSize.height) / snapHeight);","\t\t\t\tif (snapDelta != prevSnapDelta) {","\t\t\t\t\ttimeElement.text(","\t\t\t\t\t\tformatDates(","\t\t\t\t\t\t\tevent.start,","\t\t\t\t\t\t\t(!snapDelta && !event.end) ? null : // no change, so don't display time range","\t\t\t\t\t\t\t\taddMinutes(eventEnd(event), snapMinutes*snapDelta),","\t\t\t\t\t\t\topt('timeFormat')","\t\t\t\t\t\t)","\t\t\t\t\t);","\t\t\t\t\tprevSnapDelta = snapDelta;","\t\t\t\t}","\t\t\t},","\t\t\tstop: function(ev, ui) {","\t\t\t\ttrigger('eventResizeStop', this, event, ev, ui);","\t\t\t\tif (snapDelta) {","\t\t\t\t\teventResize(this, event, 0, snapMinutes*snapDelta, ev, ui);","\t\t\t\t}else{","\t\t\t\t\tshowEvents(event, eventElement);","\t\t\t\t\t// BUG: if event was really short, need to put title back in span","\t\t\t\t}","\t\t\t}","\t\t});","\t}","\t","","}","","","","/* Agenda Event Segment Utilities","-----------------------------------------------------------------------------*/","","","// Sets the seg.backwardCoord and seg.forwardCoord on each segment and returns a new","// list in the order they should be placed into the DOM (an implicit z-index).","function placeSlotSegs(segs) {","\tvar levels = buildSlotSegLevels(segs);","\tvar level0 = levels[0];","\tvar i;","","\tcomputeForwardSlotSegs(levels);","","\tif (level0) {","","\t\tfor (i=0; i<level0.length; i++) {","\t\t\tcomputeSlotSegPressures(level0[i]);","\t\t}","","\t\tfor (i=0; i<level0.length; i++) {","\t\t\tcomputeSlotSegCoords(level0[i], 0, 0);","\t\t}","\t}","","\treturn flattenSlotSegLevels(levels);","}","","","// Builds an array of segments \"levels\". The first level will be the leftmost tier of segments","// if the calendar is left-to-right, or the rightmost if the calendar is right-to-left.","function buildSlotSegLevels(segs) {","\tvar levels = [];","\tvar i, seg;","\tvar j;","","\tfor (i=0; i<segs.length; i++) {","\t\tseg = segs[i];","","\t\t// go through all the levels and stop on the first level where there are no collisions","\t\tfor (j=0; j<levels.length; j++) {","\t\t\tif (!computeSlotSegCollisions(seg, levels[j]).length) {","\t\t\t\tbreak;","\t\t\t}","\t\t}","","\t\t(levels[j] || (levels[j] = [])).push(seg);","\t}","","\treturn levels;","}","","","// For every segment, figure out the other segments that are in subsequent","// levels that also occupy the same vertical space. Accumulate in seg.forwardSegs","function computeForwardSlotSegs(levels) {","\tvar i, level;","\tvar j, seg;","\tvar k;","","\tfor (i=0; i<levels.length; i++) {","\t\tlevel = levels[i];","","\t\tfor (j=0; j<level.length; j++) {","\t\t\tseg = level[j];","","\t\t\tseg.forwardSegs = [];","\t\t\tfor (k=i+1; k<levels.length; k++) {","\t\t\t\tcomputeSlotSegCollisions(seg, levels[k], seg.forwardSegs);","\t\t\t}","\t\t}","\t}","}","","","// Figure out which path forward (via seg.forwardSegs) results in the longest path until","// the furthest edge is reached. The number of segments in this path will be seg.forwardPressure","function computeSlotSegPressures(seg) {","\tvar forwardSegs = seg.forwardSegs;","\tvar forwardPressure = 0;","\tvar i, forwardSeg;","","\tif (seg.forwardPressure === undefined) { // not already computed","","\t\tfor (i=0; i<forwardSegs.length; i++) {","\t\t\tforwardSeg = forwardSegs[i];","","\t\t\t// figure out the child's maximum forward path","\t\t\tcomputeSlotSegPressures(forwardSeg);","","\t\t\t// either use the existing maximum, or use the child's forward pressure","\t\t\t// plus one (for the forwardSeg itself)","\t\t\tforwardPressure = Math.max(","\t\t\t\tforwardPressure,","\t\t\t\t1 + forwardSeg.forwardPressure","\t\t\t);","\t\t}","","\t\tseg.forwardPressure = forwardPressure;","\t}","}","","","// Calculate seg.forwardCoord and seg.backwardCoord for the segment, where both values range","// from 0 to 1. If the calendar is left-to-right, the seg.backwardCoord maps to \"left\" and","// seg.forwardCoord maps to \"right\" (via percentage). Vice-versa if the calendar is right-to-left.","//","// The segment might be part of a \"series\", which means consecutive segments with the same pressure","// who's width is unknown until an edge has been hit. `seriesBackwardPressure` is the number of","// segments behind this one in the current series, and `seriesBackwardCoord` is the starting","// coordinate of the first segment in the series.","function computeSlotSegCoords(seg, seriesBackwardPressure, seriesBackwardCoord) {","\tvar forwardSegs = seg.forwardSegs;","\tvar i;","","\tif (seg.forwardCoord === undefined) { // not already computed","","\t\tif (!forwardSegs.length) {","","\t\t\t// if there are no forward segments, this segment should butt up against the edge","\t\t\tseg.forwardCoord = 1;","\t\t}","\t\telse {","","\t\t\t// sort highest pressure first","\t\t\tforwardSegs.sort(compareForwardSlotSegs);","","\t\t\t// this segment's forwardCoord will be calculated from the backwardCoord of the","\t\t\t// highest-pressure forward segment.","\t\t\tcomputeSlotSegCoords(forwardSegs[0], seriesBackwardPressure + 1, seriesBackwardCoord);","\t\t\tseg.forwardCoord = forwardSegs[0].backwardCoord;","\t\t}","","\t\t// calculate the backwardCoord from the forwardCoord. consider the series","\t\tseg.backwardCoord = seg.forwardCoord -","\t\t\t(seg.forwardCoord - seriesBackwardCoord) / // available width for series","\t\t\t(seriesBackwardPressure + 1); // # of segments in the series","","\t\t// use this segment's coordinates to computed the coordinates of the less-pressurized","\t\t// forward segments","\t\tfor (i=0; i<forwardSegs.length; i++) {","\t\t\tcomputeSlotSegCoords(forwardSegs[i], 0, seg.forwardCoord);","\t\t}","\t}","}","","","// Outputs a flat array of segments, from lowest to highest level","function flattenSlotSegLevels(levels) {","\tvar segs = [];","\tvar i, level;","\tvar j;","","\tfor (i=0; i<levels.length; i++) {","\t\tlevel = levels[i];","","\t\tfor (j=0; j<level.length; j++) {","\t\t\tsegs.push(level[j]);","\t\t}","\t}","","\treturn segs;","}","","","// Find all the segments in `otherSegs` that vertically collide with `seg`.","// Append into an optionally-supplied `results` array and return.","function computeSlotSegCollisions(seg, otherSegs, results) {","\tresults = results || [];","","\tfor (var i=0; i<otherSegs.length; i++) {","\t\tif (isSlotSegCollision(seg, otherSegs[i])) {","\t\t\tresults.push(otherSegs[i]);","\t\t}","\t}","","\treturn results;","}","","","// Do these segments occupy the same vertical space?","function isSlotSegCollision(seg1, seg2) {","\treturn seg1.end > seg2.start && seg1.start < seg2.end;","}","","","// A cmp function for determining which forward segment to rely on more when computing coordinates.","function compareForwardSlotSegs(seg1, seg2) {","\t// put higher-pressure first","\treturn seg2.forwardPressure - seg1.forwardPressure ||","\t\t// put segments that are closer to initial edge first (and favor ones with no coords yet)","\t\t(seg1.backwardCoord || 0) - (seg2.backwardCoord || 0) ||","\t\t// do normal sorting...","\t\tcompareSlotSegs(seg1, seg2);","}","","","// A cmp function for determining which segment should be closer to the initial edge","// (the left edge on a left-to-right calendar).","function compareSlotSegs(seg1, seg2) {","\treturn seg1.start - seg2.start || // earlier start time goes first","\t\t(seg2.end - seg2.start) - (seg1.end - seg1.start) || // tie? longer-duration goes first","\t\t(seg1.event.title || '').localeCompare(seg2.event.title); // tie? alphabetically by title","}","","",";;","","","function View(element, calendar, viewName) {","\tvar t = this;","\t","\t","\t// exports","\tt.element = element;","\tt.calendar = calendar;","\tt.name = viewName;","\tt.opt = opt;","\tt.trigger = trigger;","\tt.isEventDraggable = isEventDraggable;","\tt.isEventResizable = isEventResizable;","\tt.setEventData = setEventData;","\tt.clearEventData = clearEventData;","\tt.eventEnd = eventEnd;","\tt.reportEventElement = reportEventElement;","\tt.triggerEventDestroy = triggerEventDestroy;","\tt.eventElementHandlers = eventElementHandlers;","\tt.showEvents = showEvents;","\tt.hideEvents = hideEvents;","\tt.eventDrop = eventDrop;","\tt.eventResize = eventResize;","\t// t.title","\t// t.start, t.end","\t// t.visStart, t.visEnd","\t","\t","\t// imports","\tvar defaultEventEnd = t.defaultEventEnd;","\tvar normalizeEvent = calendar.normalizeEvent; // in EventManager","\tvar reportEventChange = calendar.reportEventChange;","\t","\t","\t// locals","\tvar eventsByID = {}; // eventID mapped to array of events (there can be multiple b/c of repeating events)","\tvar eventElementsByID = {}; // eventID mapped to array of jQuery elements","\tvar eventElementCouples = []; // array of objects, { event, element } // TODO: unify with segment system","\tvar options = calendar.options;","\t","\t","\t","\tfunction opt(name, viewNameOverride) {","\t\tvar v = options[name];","\t\tif ($.isPlainObject(v)) {","\t\t\treturn smartProperty(v, viewNameOverride || viewName);","\t\t}","\t\treturn v;","\t}","","\t","\tfunction trigger(name, thisObj) {","\t\treturn calendar.trigger.apply(","\t\t\tcalendar,","\t\t\t[name, thisObj || t].concat(Array.prototype.slice.call(arguments, 2), [t])","\t\t);","\t}","\t","","","\t/* Event Editable Boolean Calculations","\t------------------------------------------------------------------------------*/","","\t","\tfunction isEventDraggable(event) {","\t\tvar source = event.source || {};","\t\treturn firstDefined(","\t\t\t\tevent.startEditable,","\t\t\t\tsource.startEditable,","\t\t\t\topt('eventStartEditable'),","\t\t\t\tevent.editable,","\t\t\t\tsource.editable,","\t\t\t\topt('editable')","\t\t\t)","\t\t\t&& !opt('disableDragging'); // deprecated","\t}","\t","\t","\tfunction isEventResizable(event) { // but also need to make sure the seg.isEnd == true","\t\tvar source = event.source || {};","\t\treturn firstDefined(","\t\t\t\tevent.durationEditable,","\t\t\t\tsource.durationEditable,","\t\t\t\topt('eventDurationEditable'),","\t\t\t\tevent.editable,","\t\t\t\tsource.editable,","\t\t\t\topt('editable')","\t\t\t)","\t\t\t&& !opt('disableResizing'); // deprecated","\t}","\t","\t","\t","\t/* Event Data","\t------------------------------------------------------------------------------*/","\t","\t","\tfunction setEventData(events) { // events are already normalized at this point","\t\teventsByID = {};","\t\tvar i, len=events.length, event;","\t\tfor (i=0; i<len; i++) {","\t\t\tevent = events[i];","\t\t\tif (eventsByID[event._id]) {","\t\t\t\teventsByID[event._id].push(event);","\t\t\t}else{","\t\t\t\teventsByID[event._id] = [event];","\t\t\t}","\t\t}","\t}","","","\tfunction clearEventData() {","\t\teventsByID = {};","\t\teventElementsByID = {};","\t\teventElementCouples = [];","\t}","\t","\t","\t// returns a Date object for an event's end","\tfunction eventEnd(event) {","\t\treturn event.end ? cloneDate(event.end) : defaultEventEnd(event);","\t}","\t","\t","\t","\t/* Event Elements","\t------------------------------------------------------------------------------*/","\t","\t","\t// report when view creates an element for an event","\tfunction reportEventElement(event, element) {","\t\teventElementCouples.push({ event: event, element: element });","\t\tif (eventElementsByID[event._id]) {","\t\t\teventElementsByID[event._id].push(element);","\t\t}else{","\t\t\teventElementsByID[event._id] = [element];","\t\t}","\t}","","","\tfunction triggerEventDestroy() {","\t\t$.each(eventElementCouples, function(i, couple) {","\t\t\tt.trigger('eventDestroy', couple.event, couple.event, couple.element);","\t\t});","\t}","\t","\t","\t// attaches eventClick, eventMouseover, eventMouseout","\tfunction eventElementHandlers(event, eventElement) {","\t\teventElement","\t\t\t.click(function(ev) {","\t\t\t\tif (!eventElement.hasClass('ui-draggable-dragging') &&","\t\t\t\t\t!eventElement.hasClass('ui-resizable-resizing')) {","\t\t\t\t\t\treturn trigger('eventClick', this, event, ev);","\t\t\t\t\t}","\t\t\t})","\t\t\t.hover(","\t\t\t\tfunction(ev) {","\t\t\t\t\ttrigger('eventMouseover', this, event, ev);","\t\t\t\t},","\t\t\t\tfunction(ev) {","\t\t\t\t\ttrigger('eventMouseout', this, event, ev);","\t\t\t\t}","\t\t\t);","\t\t// TODO: don't fire eventMouseover/eventMouseout *while* dragging is occuring (on subject element)","\t\t// TODO: same for resizing","\t}","\t","\t","\tfunction showEvents(event, exceptElement) {","\t\teachEventElement(event, exceptElement, 'show');","\t}","\t","\t","\tfunction hideEvents(event, exceptElement) {","\t\teachEventElement(event, exceptElement, 'hide');","\t}","\t","\t","\tfunction eachEventElement(event, exceptElement, funcName) {","\t\t// NOTE: there may be multiple events per ID (repeating events)","\t\t// and multiple segments per event","\t\tvar elements = eventElementsByID[event._id],","\t\t\ti, len = elements.length;","\t\tfor (i=0; i<len; i++) {","\t\t\tif (!exceptElement || elements[i][0] != exceptElement[0]) {","\t\t\t\telements[i][funcName]();","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Event Modification Reporting","\t---------------------------------------------------------------------------------*/","\t","\t","\tfunction eventDrop(e, event, dayDelta, minuteDelta, allDay, ev, ui) {","\t\tvar oldAllDay = event.allDay;","\t\tvar eventId = event._id;","\t\tmoveEvents(eventsByID[eventId], dayDelta, minuteDelta, allDay);","\t\ttrigger(","\t\t\t'eventDrop',","\t\t\te,","\t\t\tevent,","\t\t\tdayDelta,","\t\t\tminuteDelta,","\t\t\tallDay,","\t\t\tfunction() {","\t\t\t\t// TODO: investigate cases where this inverse technique might not work","\t\t\t\tmoveEvents(eventsByID[eventId], -dayDelta, -minuteDelta, oldAllDay);","\t\t\t\treportEventChange(eventId);","\t\t\t},","\t\t\tev,","\t\t\tui","\t\t);","\t\treportEventChange(eventId);","\t}","\t","\t","\tfunction eventResize(e, event, dayDelta, minuteDelta, ev, ui) {","\t\tvar eventId = event._id;","\t\telongateEvents(eventsByID[eventId], dayDelta, minuteDelta);","\t\ttrigger(","\t\t\t'eventResize',","\t\t\te,","\t\t\tevent,","\t\t\tdayDelta,","\t\t\tminuteDelta,","\t\t\tfunction() {","\t\t\t\t// TODO: investigate cases where this inverse technique might not work","\t\t\t\telongateEvents(eventsByID[eventId], -dayDelta, -minuteDelta);","\t\t\t\treportEventChange(eventId);","\t\t\t},","\t\t\tev,","\t\t\tui","\t\t);","\t\treportEventChange(eventId);","\t}","\t","\t","\t","\t/* Event Modification Math","\t---------------------------------------------------------------------------------*/","\t","\t","\tfunction moveEvents(events, dayDelta, minuteDelta, allDay) {","\t\tminuteDelta = minuteDelta || 0;","\t\tfor (var e, len=events.length, i=0; i<len; i++) {","\t\t\te = events[i];","\t\t\tif (allDay !== undefined) {","\t\t\t\te.allDay = allDay;","\t\t\t}","\t\t\taddMinutes(addDays(e.start, dayDelta, true), minuteDelta);","\t\t\tif (e.end) {","\t\t\t\te.end = addMinutes(addDays(e.end, dayDelta, true), minuteDelta);","\t\t\t}","\t\t\tnormalizeEvent(e, options);","\t\t}","\t}","\t","\t","\tfunction elongateEvents(events, dayDelta, minuteDelta) {","\t\tminuteDelta = minuteDelta || 0;","\t\tfor (var e, len=events.length, i=0; i<len; i++) {","\t\t\te = events[i];","\t\t\te.end = addMinutes(addDays(eventEnd(e), dayDelta, true), minuteDelta);","\t\t\tnormalizeEvent(e, options);","\t\t}","\t}","","","","\t// ====================================================================================================","\t// Utilities for day \"cells\"","\t// ====================================================================================================","\t// The \"basic\" views are completely made up of day cells.","\t// The \"agenda\" views have day cells at the top \"all day\" slot.","\t// This was the obvious common place to put these utilities, but they should be abstracted out into","\t// a more meaningful class (like DayEventRenderer).","\t// ====================================================================================================","","","\t// For determining how a given \"cell\" translates into a \"date\":","\t//","\t// 1. Convert the \"cell\" (row and column) into a \"cell offset\" (the # of the cell, cronologically from the first).","\t//    Keep in mind that column indices are inverted with isRTL. This is taken into account.","\t//","\t// 2. Convert the \"cell offset\" to a \"day offset\" (the # of days since the first visible day in the view).","\t//","\t// 3. Convert the \"day offset\" into a \"date\" (a JavaScript Date object).","\t//","\t// The reverse transformation happens when transforming a date into a cell.","","","\t// exports","\tt.isHiddenDay = isHiddenDay;","\tt.skipHiddenDays = skipHiddenDays;","\tt.getCellsPerWeek = getCellsPerWeek;","\tt.dateToCell = dateToCell;","\tt.dateToDayOffset = dateToDayOffset;","\tt.dayOffsetToCellOffset = dayOffsetToCellOffset;","\tt.cellOffsetToCell = cellOffsetToCell;","\tt.cellToDate = cellToDate;","\tt.cellToCellOffset = cellToCellOffset;","\tt.cellOffsetToDayOffset = cellOffsetToDayOffset;","\tt.dayOffsetToDate = dayOffsetToDate;","\tt.rangeToSegments = rangeToSegments;","","","\t// internals","\tvar hiddenDays = opt('hiddenDays') || []; // array of day-of-week indices that are hidden","\tvar isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)","\tvar cellsPerWeek;","\tvar dayToCellMap = []; // hash from dayIndex -> cellIndex, for one week","\tvar cellToDayMap = []; // hash from cellIndex -> dayIndex, for one week","\tvar isRTL = opt('isRTL');","","","\t// initialize important internal variables","\t(function() {","","\t\tif (opt('weekends') === false) {","\t\t\thiddenDays.push(0, 6); // 0=sunday, 6=saturday","\t\t}","","\t\t// Loop through a hypothetical week and determine which","\t\t// days-of-week are hidden. Record in both hashes (one is the reverse of the other).","\t\tfor (var dayIndex=0, cellIndex=0; dayIndex<7; dayIndex++) {","\t\t\tdayToCellMap[dayIndex] = cellIndex;","\t\t\tisHiddenDayHash[dayIndex] = $.inArray(dayIndex, hiddenDays) != -1;","\t\t\tif (!isHiddenDayHash[dayIndex]) {","\t\t\t\tcellToDayMap[cellIndex] = dayIndex;","\t\t\t\tcellIndex++;","\t\t\t}","\t\t}","","\t\tcellsPerWeek = cellIndex;","\t\tif (!cellsPerWeek) {","\t\t\tthrow 'invalid hiddenDays'; // all days were hidden? bad.","\t\t}","","\t})();","","","\t// Is the current day hidden?","\t// `day` is a day-of-week index (0-6), or a Date object","\tfunction isHiddenDay(day) {","\t\tif (typeof day == 'object') {","\t\t\tday = day.getDay();","\t\t}","\t\treturn isHiddenDayHash[day];","\t}","","","\tfunction getCellsPerWeek() {","\t\treturn cellsPerWeek;","\t}","","","\t// Keep incrementing the current day until it is no longer a hidden day.","\t// If the initial value of `date` is not a hidden day, don't do anything.","\t// Pass `isExclusive` as `true` if you are dealing with an end date.","\t// `inc` defaults to `1` (increment one day forward each time)","\tfunction skipHiddenDays(date, inc, isExclusive) {","\t\tinc = inc || 1;","\t\twhile (","\t\t\tisHiddenDayHash[ ( date.getDay() + (isExclusive ? inc : 0) + 7 ) % 7 ]","\t\t) {","\t\t\taddDays(date, inc);","\t\t}","\t}","","","\t//","\t// TRANSFORMATIONS: cell -> cell offset -> day offset -> date","\t//","","\t// cell -> date (combines all transformations)","\t// Possible arguments:","\t// - row, col","\t// - { row:#, col: # }","\tfunction cellToDate() {","\t\tvar cellOffset = cellToCellOffset.apply(null, arguments);","\t\tvar dayOffset = cellOffsetToDayOffset(cellOffset);","\t\tvar date = dayOffsetToDate(dayOffset);","\t\treturn date;","\t}","","\t// cell -> cell offset","\t// Possible arguments:","\t// - row, col","\t// - { row:#, col:# }","\tfunction cellToCellOffset(row, col) {","\t\tvar colCnt = t.getColCnt();","","\t\t// rtl variables. wish we could pre-populate these. but where?","\t\tvar dis = isRTL ? -1 : 1;","\t\tvar dit = isRTL ? colCnt - 1 : 0;","","\t\tif (typeof row == 'object') {","\t\t\tcol = row.col;","\t\t\trow = row.row;","\t\t}","\t\tvar cellOffset = row * colCnt + (col * dis + dit); // column, adjusted for RTL (dis & dit)","","\t\treturn cellOffset;","\t}","","\t// cell offset -> day offset","\tfunction cellOffsetToDayOffset(cellOffset) {","\t\tvar day0 = t.visStart.getDay(); // first date's day of week","\t\tcellOffset += dayToCellMap[day0]; // normlize cellOffset to beginning-of-week","\t\treturn Math.floor(cellOffset / cellsPerWeek) * 7 // # of days from full weeks","\t\t\t+ cellToDayMap[ // # of days from partial last week","\t\t\t\t(cellOffset % cellsPerWeek + cellsPerWeek) % cellsPerWeek // crazy math to handle negative cellOffsets","\t\t\t]","\t\t\t- day0; // adjustment for beginning-of-week normalization","\t}","","\t// day offset -> date (JavaScript Date object)","\tfunction dayOffsetToDate(dayOffset) {","\t\tvar date = cloneDate(t.visStart);","\t\taddDays(date, dayOffset);","\t\treturn date;","\t}","","","\t//","\t// TRANSFORMATIONS: date -> day offset -> cell offset -> cell","\t//","","\t// date -> cell (combines all transformations)","\tfunction dateToCell(date) {","\t\tvar dayOffset = dateToDayOffset(date);","\t\tvar cellOffset = dayOffsetToCellOffset(dayOffset);","\t\tvar cell = cellOffsetToCell(cellOffset);","\t\treturn cell;","\t}","","\t// date -> day offset","\tfunction dateToDayOffset(date) {","\t\treturn dayDiff(date, t.visStart);","\t}","","\t// day offset -> cell offset","\tfunction dayOffsetToCellOffset(dayOffset) {","\t\tvar day0 = t.visStart.getDay(); // first date's day of week","\t\tdayOffset += day0; // normalize dayOffset to beginning-of-week","\t\treturn Math.floor(dayOffset / 7) * cellsPerWeek // # of cells from full weeks","\t\t\t+ dayToCellMap[ // # of cells from partial last week","\t\t\t\t(dayOffset % 7 + 7) % 7 // crazy math to handle negative dayOffsets","\t\t\t]","\t\t\t- dayToCellMap[day0]; // adjustment for beginning-of-week normalization","\t}","","\t// cell offset -> cell (object with row & col keys)","\tfunction cellOffsetToCell(cellOffset) {","\t\tvar colCnt = t.getColCnt();","","\t\t// rtl variables. wish we could pre-populate these. but where?","\t\tvar dis = isRTL ? -1 : 1;","\t\tvar dit = isRTL ? colCnt - 1 : 0;","","\t\tvar row = Math.floor(cellOffset / colCnt);","\t\tvar col = ((cellOffset % colCnt + colCnt) % colCnt) * dis + dit; // column, adjusted for RTL (dis & dit)","\t\treturn {","\t\t\trow: row,","\t\t\tcol: col","\t\t};","\t}","","","\t//","\t// Converts a date range into an array of segment objects.","\t// \"Segments\" are horizontal stretches of time, sliced up by row.","\t// A segment object has the following properties:","\t// - row","\t// - cols","\t// - isStart","\t// - isEnd","\t//","\tfunction rangeToSegments(startDate, endDate) {","\t\tvar rowCnt = t.getRowCnt();","\t\tvar colCnt = t.getColCnt();","\t\tvar segments = []; // array of segments to return","","\t\t// day offset for given date range","\t\tvar rangeDayOffsetStart = dateToDayOffset(startDate);","\t\tvar rangeDayOffsetEnd = dateToDayOffset(endDate); // exclusive","","\t\t// first and last cell offset for the given date range","\t\t// \"last\" implies inclusivity","\t\tvar rangeCellOffsetFirst = dayOffsetToCellOffset(rangeDayOffsetStart);","\t\tvar rangeCellOffsetLast = dayOffsetToCellOffset(rangeDayOffsetEnd) - 1;","","\t\t// loop through all the rows in the view","\t\tfor (var row=0; row<rowCnt; row++) {","","\t\t\t// first and last cell offset for the row","\t\t\tvar rowCellOffsetFirst = row * colCnt;","\t\t\tvar rowCellOffsetLast = rowCellOffsetFirst + colCnt - 1;","","\t\t\t// get the segment's cell offsets by constraining the range's cell offsets to the bounds of the row","\t\t\tvar segmentCellOffsetFirst = Math.max(rangeCellOffsetFirst, rowCellOffsetFirst);","\t\t\tvar segmentCellOffsetLast = Math.min(rangeCellOffsetLast, rowCellOffsetLast);","","\t\t\t// make sure segment's offsets are valid and in view","\t\t\tif (segmentCellOffsetFirst <= segmentCellOffsetLast) {","","\t\t\t\t// translate to cells","\t\t\t\tvar segmentCellFirst = cellOffsetToCell(segmentCellOffsetFirst);","\t\t\t\tvar segmentCellLast = cellOffsetToCell(segmentCellOffsetLast);","","\t\t\t\t// view might be RTL, so order by leftmost column","\t\t\t\tvar cols = [ segmentCellFirst.col, segmentCellLast.col ].sort();","","\t\t\t\t// Determine if segment's first/last cell is the beginning/end of the date range.","\t\t\t\t// We need to compare \"day offset\" because \"cell offsets\" are often ambiguous and","\t\t\t\t// can translate to multiple days, and an edge case reveals itself when we the","\t\t\t\t// range's first cell is hidden (we don't want isStart to be true).","\t\t\t\tvar isStart = cellOffsetToDayOffset(segmentCellOffsetFirst) == rangeDayOffsetStart;","\t\t\t\tvar isEnd = cellOffsetToDayOffset(segmentCellOffsetLast) + 1 == rangeDayOffsetEnd; // +1 for comparing exclusively","","\t\t\t\tsegments.push({","\t\t\t\t\trow: row,","\t\t\t\t\tleftCol: cols[0],","\t\t\t\t\trightCol: cols[1],","\t\t\t\t\tisStart: isStart,","\t\t\t\t\tisEnd: isEnd","\t\t\t\t});","\t\t\t}","\t\t}","","\t\treturn segments;","\t}","\t","","}","",";;","","function DayEventRenderer() {","\tvar t = this;","","\t","\t// exports","\tt.renderDayEvents = renderDayEvents;","\tt.draggableDayEvent = draggableDayEvent; // made public so that subclasses can override","\tt.resizableDayEvent = resizableDayEvent; // \"","\t","\t","\t// imports","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar isEventDraggable = t.isEventDraggable;","\tvar isEventResizable = t.isEventResizable;","\tvar eventEnd = t.eventEnd;","\tvar reportEventElement = t.reportEventElement;","\tvar eventElementHandlers = t.eventElementHandlers;","\tvar showEvents = t.showEvents;","\tvar hideEvents = t.hideEvents;","\tvar eventDrop = t.eventDrop;","\tvar eventResize = t.eventResize;","\tvar getRowCnt = t.getRowCnt;","\tvar getColCnt = t.getColCnt;","\tvar getColWidth = t.getColWidth;","\tvar allDayRow = t.allDayRow; // TODO: rename","\tvar colLeft = t.colLeft;","\tvar colRight = t.colRight;","\tvar colContentLeft = t.colContentLeft;","\tvar colContentRight = t.colContentRight;","\tvar dateToCell = t.dateToCell;","\tvar getDaySegmentContainer = t.getDaySegmentContainer;","\tvar formatDates = t.calendar.formatDates;","\tvar renderDayOverlay = t.renderDayOverlay;","\tvar clearOverlays = t.clearOverlays;","\tvar clearSelection = t.clearSelection;","\tvar getHoverListener = t.getHoverListener;","\tvar rangeToSegments = t.rangeToSegments;","\tvar cellToDate = t.cellToDate;","\tvar cellToCellOffset = t.cellToCellOffset;","\tvar cellOffsetToDayOffset = t.cellOffsetToDayOffset;","\tvar dateToDayOffset = t.dateToDayOffset;","\tvar dayOffsetToCellOffset = t.dayOffsetToCellOffset;","","","\t// Render `events` onto the calendar, attach mouse event handlers, and call the `eventAfterRender` callback for each.","\t// Mouse event will be lazily applied, except if the event has an ID of `modifiedEventId`.","\t// Can only be called when the event container is empty (because it wipes out all innerHTML).","\tfunction renderDayEvents(events, modifiedEventId) {","","\t\t// do the actual rendering. Receive the intermediate \"segment\" data structures.","\t\tvar segments = _renderDayEvents(","\t\t\tevents,","\t\t\tfalse, // don't append event elements","\t\t\ttrue // set the heights of the rows","\t\t);","","\t\t// report the elements to the View, for general drag/resize utilities","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\treportEventElement(segment.event, element);","\t\t});","","\t\t// attach mouse handlers","\t\tattachHandlers(segments, modifiedEventId);","","\t\t// call `eventAfterRender` callback for each event","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\ttrigger('eventAfterRender', segment.event, segment.event, element);","\t\t});","\t}","","","\t// Render an event on the calendar, but don't report them anywhere, and don't attach mouse handlers.","\t// Append this event element to the event container, which might already be populated with events.","\t// If an event's segment will have row equal to `adjustRow`, then explicitly set its top coordinate to `adjustTop`.","\t// This hack is used to maintain continuity when user is manually resizing an event.","\t// Returns an array of DOM elements for the event.","\tfunction renderTempDayEvent(event, adjustRow, adjustTop) {","","\t\t// actually render the event. `true` for appending element to container.","\t\t// Recieve the intermediate \"segment\" data structures.","\t\tvar segments = _renderDayEvents(","\t\t\t[ event ],","\t\t\ttrue, // append event elements","\t\t\tfalse // don't set the heights of the rows","\t\t);","","\t\tvar elements = [];","","\t\t// Adjust certain elements' top coordinates","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\tif (segment.row === adjustRow) {","\t\t\t\telement.css('top', adjustTop);","\t\t\t}","\t\t\telements.push(element[0]); // accumulate DOM nodes","\t\t});","","\t\treturn elements;","\t}","","","\t// Render events onto the calendar. Only responsible for the VISUAL aspect.","\t// Not responsible for attaching handlers or calling callbacks.","\t// Set `doAppend` to `true` for rendering elements without clearing the existing container.","\t// Set `doRowHeights` to allow setting the height of each row, to compensate for vertical event overflow.","\tfunction _renderDayEvents(events, doAppend, doRowHeights) {","","\t\t// where the DOM nodes will eventually end up","\t\tvar finalContainer = getDaySegmentContainer();","","\t\t// the container where the initial HTML will be rendered.","\t\t// If `doAppend`==true, uses a temporary container.","\t\tvar renderContainer = doAppend ? $(\"<div/>\") : finalContainer;","","\t\tvar segments = buildSegments(events);","\t\tvar html;","\t\tvar elements;","","\t\t// calculate the desired `left` and `width` properties on each segment object","\t\tcalculateHorizontals(segments);","","\t\t// build the HTML string. relies on `left` property","\t\thtml = buildHTML(segments);","","\t\t// render the HTML. innerHTML is considerably faster than jQuery's .html()","\t\trenderContainer[0].innerHTML = html;","","\t\t// retrieve the individual elements","\t\telements = renderContainer.children();","","\t\t// if we were appending, and thus using a temporary container,","\t\t// re-attach elements to the real container.","\t\tif (doAppend) {","\t\t\tfinalContainer.append(elements);","\t\t}","","\t\t// assigns each element to `segment.event`, after filtering them through user callbacks","\t\tresolveElements(segments, elements);","","\t\t// Calculate the left and right padding+margin for each element.","\t\t// We need this for setting each element's desired outer width, because of the W3C box model.","\t\t// It's important we do this in a separate pass from acually setting the width on the DOM elements","\t\t// because alternating reading/writing dimensions causes reflow for every iteration.","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\tsegment.hsides = hsides(element, true); // include margins = `true`","\t\t});","","\t\t// Set the width of each element","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\telement.width(","\t\t\t\tMath.max(0, segment.outerWidth - segment.hsides)","\t\t\t);","\t\t});","","\t\t// Grab each element's outerHeight (setVerticals uses this).","\t\t// To get an accurate reading, it's important to have each element's width explicitly set already.","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\tsegment.outerHeight = element.outerHeight(true); // include margins = `true`","\t\t});","","\t\t// Set the top coordinate on each element (requires segment.outerHeight)","\t\tsetVerticals(segments, doRowHeights);","","\t\treturn segments;","\t}","","","\t// Generate an array of \"segments\" for all events.","\tfunction buildSegments(events) {","\t\tvar segments = [];","\t\tfor (var i=0; i<events.length; i++) {","\t\t\tvar eventSegments = buildSegmentsForEvent(events[i]);","\t\t\tsegments.push.apply(segments, eventSegments); // append an array to an array","\t\t}","\t\treturn segments;","\t}","","","\t// Generate an array of segments for a single event.","\t// A \"segment\" is the same data structure that View.rangeToSegments produces,","\t// with the addition of the `event` property being set to reference the original event.","\tfunction buildSegmentsForEvent(event) {","\t\tvar startDate = event.start;","\t\tvar endDate = exclEndDay(event);","\t\tvar segments = rangeToSegments(startDate, endDate);","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tsegments[i].event = event;","\t\t}","\t\treturn segments;","\t}","","","\t// Sets the `left` and `outerWidth` property of each segment.","\t// These values are the desired dimensions for the eventual DOM elements.","\tfunction calculateHorizontals(segments) {","\t\tvar isRTL = opt('isRTL');","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","","\t\t\t// Determine functions used for calulating the elements left/right coordinates,","\t\t\t// depending on whether the view is RTL or not.","\t\t\t// NOTE:","\t\t\t// colLeft/colRight returns the coordinate butting up the edge of the cell.","\t\t\t// colContentLeft/colContentRight is indented a little bit from the edge.","\t\t\tvar leftFunc = (isRTL ? segment.isEnd : segment.isStart) ? colContentLeft : colLeft;","\t\t\tvar rightFunc = (isRTL ? segment.isStart : segment.isEnd) ? colContentRight : colRight;","","\t\t\tvar left = leftFunc(segment.leftCol);","\t\t\tvar right = rightFunc(segment.rightCol);","\t\t\tsegment.left = left;","\t\t\tsegment.outerWidth = right - left;","\t\t}","\t}","","","\t// Build a concatenated HTML string for an array of segments","\tfunction buildHTML(segments) {","\t\tvar html = '';","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\thtml += buildHTMLForSegment(segments[i]);","\t\t}","\t\treturn html;","\t}","","","\t// Build an HTML string for a single segment.","\t// Relies on the following properties:","\t// - `segment.event` (from `buildSegmentsForEvent`)","\t// - `segment.left` (from `calculateHorizontals`)","\tfunction buildHTMLForSegment(segment) {","\t\tvar html = '';","\t\tvar isRTL = opt('isRTL');","\t\tvar event = segment.event;","\t\tvar url = event.url;","","\t\t// generate the list of CSS classNames","\t\tvar classNames = [ 'fc-event', 'fc-event-hori' ];","\t\tif (isEventDraggable(event)) {","\t\t\tclassNames.push('fc-event-draggable');","\t\t}","\t\tif (segment.isStart) {","\t\t\tclassNames.push('fc-event-start');","\t\t}","\t\tif (segment.isEnd) {","\t\t\tclassNames.push('fc-event-end');","\t\t}","\t\t// use the event's configured classNames","\t\t// guaranteed to be an array via `normalizeEvent`","\t\tclassNames = classNames.concat(event.className);","\t\tif (event.source) {","\t\t\t// use the event's source's classNames, if specified","\t\t\tclassNames = classNames.concat(event.source.className || []);","\t\t}","","\t\t// generate a semicolon delimited CSS string for any of the \"skin\" properties","\t\t// of the event object (`backgroundColor`, `borderColor` and such)","\t\tvar skinCss = getSkinCss(event, opt);","","\t\tif (url) {","\t\t\thtml += \"<a href='\" + htmlEscape(url) + \"'\";","\t\t}else{","\t\t\thtml += \"<div\";","\t\t}","\t\thtml +=","\t\t\t\" class='\" + classNames.join(' ') + \"'\" +","\t\t\t\" style=\" +","\t\t\t\t\"'\" +","\t\t\t\t\"position:absolute;\" +","\t\t\t\t\"left:\" + segment.left + \"px;\" +","\t\t\t\tskinCss +","\t\t\t\t\"'\" +","\t\t\t\">\" +","\t\t\t\"<div class='fc-event-inner'>\";","\t\tif (!event.allDay && segment.isStart) {","\t\t\thtml +=","\t\t\t\t\"<span class='fc-event-time'>\" +","\t\t\t\thtmlEscape(","\t\t\t\t\tformatDates(event.start, event.end, opt('timeFormat'))","\t\t\t\t) +","\t\t\t\t\"</span>\";","\t\t}","\t\thtml +=","\t\t\t\"<span class='fc-event-title'>\" +","\t\t\thtmlEscape(event.title || '') +","\t\t\t\"</span>\" +","\t\t\t\"</div>\";","\t\tif (segment.isEnd && isEventResizable(event)) {","\t\t\thtml +=","\t\t\t\t\"<div class='ui-resizable-handle ui-resizable-\" + (isRTL ? 'w' : 'e') + \"'>\" +","\t\t\t\t\"   \" + // makes hit area a lot better for IE6/7","\t\t\t\t\"</div>\";","\t\t}","\t\thtml += \"</\" + (url ? \"a\" : \"div\") + \">\";","","\t\t// TODO:","\t\t// When these elements are initially rendered, they will be briefly visibile on the screen,","\t\t// even though their widths/heights are not set.","\t\t// SOLUTION: initially set them as visibility:hidden ?","","\t\treturn html;","\t}","","","\t// Associate each segment (an object) with an element (a jQuery object),","\t// by setting each `segment.element`.","\t// Run each element through the `eventRender` filter, which allows developers to","\t// modify an existing element, supply a new one, or cancel rendering.","\tfunction resolveElements(segments, elements) {","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","\t\t\tvar event = segment.event;","\t\t\tvar element = elements.eq(i);","","\t\t\t// call the trigger with the original element","\t\t\tvar triggerRes = trigger('eventRender', event, event, element);","","\t\t\tif (triggerRes === false) {","\t\t\t\t// if `false`, remove the event from the DOM and don't assign it to `segment.event`","\t\t\t\telement.remove();","\t\t\t}","\t\t\telse {","\t\t\t\tif (triggerRes && triggerRes !== true) {","\t\t\t\t\t// the trigger returned a new element, but not `true` (which means keep the existing element)","","\t\t\t\t\t// re-assign the important CSS dimension properties that were already assigned in `buildHTMLForSegment`","\t\t\t\t\ttriggerRes = $(triggerRes)","\t\t\t\t\t\t.css({","\t\t\t\t\t\t\tposition: 'absolute',","\t\t\t\t\t\t\tleft: segment.left","\t\t\t\t\t\t});","","\t\t\t\t\telement.replaceWith(triggerRes);","\t\t\t\t\telement = triggerRes;","\t\t\t\t}","","\t\t\t\tsegment.element = element;","\t\t\t}","\t\t}","\t}","","","","\t/* Top-coordinate Methods","\t-------------------------------------------------------------------------------------------------*/","","","\t// Sets the \"top\" CSS property for each element.","\t// If `doRowHeights` is `true`, also sets each row's first cell to an explicit height,","\t// so that if elements vertically overflow, the cell expands vertically to compensate.","\tfunction setVerticals(segments, doRowHeights) {","\t\tvar rowContentHeights = calculateVerticals(segments); // also sets segment.top","\t\tvar rowContentElements = getRowContentElements(); // returns 1 inner div per row","\t\tvar rowContentTops = [];","","\t\t// Set each row's height by setting height of first inner div","\t\tif (doRowHeights) {","\t\t\tfor (var i=0; i<rowContentElements.length; i++) {","\t\t\t\trowContentElements[i].height(rowContentHeights[i]);","\t\t\t}","\t\t}","","\t\t// Get each row's top, relative to the views's origin.","\t\t// Important to do this after setting each row's height.","\t\tfor (var i=0; i<rowContentElements.length; i++) {","\t\t\trowContentTops.push(","\t\t\t\trowContentElements[i].position().top","\t\t\t);","\t\t}","","\t\t// Set each segment element's CSS \"top\" property.","\t\t// Each segment object has a \"top\" property, which is relative to the row's top, but...","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\telement.css(","\t\t\t\t'top',","\t\t\t\trowContentTops[segment.row] + segment.top // ...now, relative to views's origin","\t\t\t);","\t\t});","\t}","","","\t// Calculate the \"top\" coordinate for each segment, relative to the \"top\" of the row.","\t// Also, return an array that contains the \"content\" height for each row","\t// (the height displaced by the vertically stacked events in the row).","\t// Requires segments to have their `outerHeight` property already set.","\tfunction calculateVerticals(segments) {","\t\tvar rowCnt = getRowCnt();","\t\tvar colCnt = getColCnt();","\t\tvar rowContentHeights = []; // content height for each row","\t\tvar segmentRows = buildSegmentRows(segments); // an array of segment arrays, one for each row","","\t\tfor (var rowI=0; rowI<rowCnt; rowI++) {","\t\t\tvar segmentRow = segmentRows[rowI];","","\t\t\t// an array of running total heights for each column.","\t\t\t// initialize with all zeros.","\t\t\tvar colHeights = [];","\t\t\tfor (var colI=0; colI<colCnt; colI++) {","\t\t\t\tcolHeights.push(0);","\t\t\t}","","\t\t\t// loop through every segment","\t\t\tfor (var segmentI=0; segmentI<segmentRow.length; segmentI++) {","\t\t\t\tvar segment = segmentRow[segmentI];","","\t\t\t\t// find the segment's top coordinate by looking at the max height","\t\t\t\t// of all the columns the segment will be in.","\t\t\t\tsegment.top = arrayMax(","\t\t\t\t\tcolHeights.slice(","\t\t\t\t\t\tsegment.leftCol,","\t\t\t\t\t\tsegment.rightCol + 1 // make exclusive for slice","\t\t\t\t\t)","\t\t\t\t);","","\t\t\t\t// adjust the columns to account for the segment's height","\t\t\t\tfor (var colI=segment.leftCol; colI<=segment.rightCol; colI++) {","\t\t\t\t\tcolHeights[colI] = segment.top + segment.outerHeight;","\t\t\t\t}","\t\t\t}","","\t\t\t// the tallest column in the row should be the \"content height\"","\t\t\trowContentHeights.push(arrayMax(colHeights));","\t\t}","","\t\treturn rowContentHeights;","\t}","","","\t// Build an array of segment arrays, each representing the segments that will","\t// be in a row of the grid, sorted by which event should be closest to the top.","\tfunction buildSegmentRows(segments) {","\t\tvar rowCnt = getRowCnt();","\t\tvar segmentRows = [];","\t\tvar segmentI;","\t\tvar segment;","\t\tvar rowI;","","\t\t// group segments by row","\t\tfor (segmentI=0; segmentI<segments.length; segmentI++) {","\t\t\tsegment = segments[segmentI];","\t\t\trowI = segment.row;","\t\t\tif (segment.element) { // was rendered?","\t\t\t\tif (segmentRows[rowI]) {","\t\t\t\t\t// already other segments. append to array","\t\t\t\t\tsegmentRows[rowI].push(segment);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\t// first segment in row. create new array","\t\t\t\t\tsegmentRows[rowI] = [ segment ];","\t\t\t\t}","\t\t\t}","\t\t}","","\t\t// sort each row","\t\tfor (rowI=0; rowI<rowCnt; rowI++) {","\t\t\tsegmentRows[rowI] = sortSegmentRow(","\t\t\t\tsegmentRows[rowI] || [] // guarantee an array, even if no segments","\t\t\t);","\t\t}","","\t\treturn segmentRows;","\t}","","","\t// Sort an array of segments according to which segment should appear closest to the top","\tfunction sortSegmentRow(segments) {","\t\tvar sortedSegments = [];","","\t\t// build the subrow array","\t\tvar subrows = buildSegmentSubrows(segments);","","\t\t// flatten it","\t\tfor (var i=0; i<subrows.length; i++) {","\t\t\tsortedSegments.push.apply(sortedSegments, subrows[i]); // append an array to an array","\t\t}","","\t\treturn sortedSegments;","\t}","","","\t// Take an array of segments, which are all assumed to be in the same row,","\t// and sort into subrows.","\tfunction buildSegmentSubrows(segments) {","","\t\t// Give preference to elements with certain criteria, so they have","\t\t// a chance to be closer to the top.","\t\tsegments.sort(compareDaySegments);","","\t\tvar subrows = [];","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","","\t\t\t// loop through subrows, starting with the topmost, until the segment","\t\t\t// doesn't collide with other segments.","\t\t\tfor (var j=0; j<subrows.length; j++) {","\t\t\t\tif (!isDaySegmentCollision(segment, subrows[j])) {","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t\t// `j` now holds the desired subrow index","\t\t\tif (subrows[j]) {","\t\t\t\tsubrows[j].push(segment);","\t\t\t}","\t\t\telse {","\t\t\t\tsubrows[j] = [ segment ];","\t\t\t}","\t\t}","","\t\treturn subrows;","\t}","","","\t// Return an array of jQuery objects for the placeholder content containers of each row.","\t// The content containers don't actually contain anything, but their dimensions should match","\t// the events that are overlaid on top.","\tfunction getRowContentElements() {","\t\tvar i;","\t\tvar rowCnt = getRowCnt();","\t\tvar rowDivs = [];","\t\tfor (i=0; i<rowCnt; i++) {","\t\t\trowDivs[i] = allDayRow(i)","\t\t\t\t.find('div.fc-day-content > div');","\t\t}","\t\treturn rowDivs;","\t}","","","","\t/* Mouse Handlers","\t---------------------------------------------------------------------------------------------------*/","\t// TODO: better documentation!","","","\tfunction attachHandlers(segments, modifiedEventId) {","\t\tvar segmentContainer = getDaySegmentContainer();","","\t\tsegmentElementEach(segments, function(segment, element, i) {","\t\t\tvar event = segment.event;","\t\t\tif (event._id === modifiedEventId) {","\t\t\t\tbindDaySeg(event, element, segment);","\t\t\t}else{","\t\t\t\telement[0]._fci = i; // for lazySegBind","\t\t\t}","\t\t});","","\t\tlazySegBind(segmentContainer, segments, bindDaySeg);","\t}","","","\tfunction bindDaySeg(event, eventElement, segment) {","","\t\tif (isEventDraggable(event)) {","\t\t\tt.draggableDayEvent(event, eventElement, segment); // use `t` so subclasses can override","\t\t}","","\t\tif (","\t\t\tsegment.isEnd && // only allow resizing on the final segment for an event","\t\t\tisEventResizable(event)","\t\t) {","\t\t\tt.resizableDayEvent(event, eventElement, segment); // use `t` so subclasses can override","\t\t}","","\t\t// attach all other handlers.","\t\t// needs to be after, because resizableDayEvent might stopImmediatePropagation on click","\t\teventElementHandlers(event, eventElement);","\t}","","\t","\tfunction draggableDayEvent(event, eventElement) {","\t\tvar hoverListener = getHoverListener();","\t\tvar dayDelta;","\t\teventElement.draggable({","\t\t\tdelay: 50,","\t\t\topacity: opt('dragOpacity'),","\t\t\trevertDuration: opt('dragRevertDuration'),","\t\t\tstart: function(ev, ui) {","\t\t\t\ttrigger('eventDragStart', eventElement, event, ev, ui);","\t\t\t\thideEvents(event, eventElement);","\t\t\t\thoverListener.start(function(cell, origCell, rowDelta, colDelta) {","\t\t\t\t\teventElement.draggable('option', 'revert', !cell || !rowDelta && !colDelta);","\t\t\t\t\tclearOverlays();","\t\t\t\t\tif (cell) {","\t\t\t\t\t\tvar origDate = cellToDate(origCell);","\t\t\t\t\t\tvar date = cellToDate(cell);","\t\t\t\t\t\tdayDelta = dayDiff(date, origDate);","\t\t\t\t\t\trenderDayOverlay(","\t\t\t\t\t\t\taddDays(cloneDate(event.start), dayDelta),","\t\t\t\t\t\t\taddDays(exclEndDay(event), dayDelta)","\t\t\t\t\t\t);","\t\t\t\t\t}else{","\t\t\t\t\t\tdayDelta = 0;","\t\t\t\t\t}","\t\t\t\t}, ev, 'drag');","\t\t\t},","\t\t\tstop: function(ev, ui) {","\t\t\t\thoverListener.stop();","\t\t\t\tclearOverlays();","\t\t\t\ttrigger('eventDragStop', eventElement, event, ev, ui);","\t\t\t\tif (dayDelta) {","\t\t\t\t\teventDrop(this, event, dayDelta, 0, event.allDay, ev, ui);","\t\t\t\t}else{","\t\t\t\t\teventElement.css('filter', ''); // clear IE opacity side-effects","\t\t\t\t\tshowEvents(event, eventElement);","\t\t\t\t}","\t\t\t}","\t\t});","\t}","","\t","\tfunction resizableDayEvent(event, element, segment) {","\t\tvar isRTL = opt('isRTL');","\t\tvar direction = isRTL ? 'w' : 'e';","\t\tvar handle = element.find('.ui-resizable-' + direction); // TODO: stop using this class because we aren't using jqui for this","\t\tvar isResizing = false;","\t\t","\t\t// TODO: look into using jquery-ui mouse widget for this stuff","\t\tdisableTextSelection(element); // prevent native <a> selection for IE","\t\telement","\t\t\t.mousedown(function(ev) { // prevent native <a> selection for others","\t\t\t\tev.preventDefault();","\t\t\t})","\t\t\t.click(function(ev) {","\t\t\t\tif (isResizing) {","\t\t\t\t\tev.preventDefault(); // prevent link from being visited (only method that worked in IE6)","\t\t\t\t\tev.stopImmediatePropagation(); // prevent fullcalendar eventClick handler from being called","\t\t\t\t\t                               // (eventElementHandlers needs to be bound after resizableDayEvent)","\t\t\t\t}","\t\t\t});","\t\t","\t\thandle.mousedown(function(ev) {","\t\t\tif (ev.which != 1) {","\t\t\t\treturn; // needs to be left mouse button","\t\t\t}","\t\t\tisResizing = true;","\t\t\tvar hoverListener = getHoverListener();","\t\t\tvar rowCnt = getRowCnt();","\t\t\tvar colCnt = getColCnt();","\t\t\tvar elementTop = element.css('top');","\t\t\tvar dayDelta;","\t\t\tvar helpers;","\t\t\tvar eventCopy = $.extend({}, event);","\t\t\tvar minCellOffset = dayOffsetToCellOffset( dateToDayOffset(event.start) );","\t\t\tclearSelection();","\t\t\t$('body')","\t\t\t\t.css('cursor', direction + '-resize')","\t\t\t\t.one('mouseup', mouseup);","\t\t\ttrigger('eventResizeStart', this, event, ev);","\t\t\thoverListener.start(function(cell, origCell) {","\t\t\t\tif (cell) {","","\t\t\t\t\tvar origCellOffset = cellToCellOffset(origCell);","\t\t\t\t\tvar cellOffset = cellToCellOffset(cell);","","\t\t\t\t\t// don't let resizing move earlier than start date cell","\t\t\t\t\tcellOffset = Math.max(cellOffset, minCellOffset);","","\t\t\t\t\tdayDelta =","\t\t\t\t\t\tcellOffsetToDayOffset(cellOffset) -","\t\t\t\t\t\tcellOffsetToDayOffset(origCellOffset);","","\t\t\t\t\tif (dayDelta) {","\t\t\t\t\t\teventCopy.end = addDays(eventEnd(event), dayDelta, true);","\t\t\t\t\t\tvar oldHelpers = helpers;","","\t\t\t\t\t\thelpers = renderTempDayEvent(eventCopy, segment.row, elementTop);","\t\t\t\t\t\thelpers = $(helpers); // turn array into a jQuery object","","\t\t\t\t\t\thelpers.find('*').css('cursor', direction + '-resize');","\t\t\t\t\t\tif (oldHelpers) {","\t\t\t\t\t\t\toldHelpers.remove();","\t\t\t\t\t\t}","","\t\t\t\t\t\thideEvents(event);","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\tif (helpers) {","\t\t\t\t\t\t\tshowEvents(event);","\t\t\t\t\t\t\thelpers.remove();","\t\t\t\t\t\t\thelpers = null;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tclearOverlays();","\t\t\t\t\trenderDayOverlay( // coordinate grid already rebuilt with hoverListener.start()","\t\t\t\t\t\tevent.start,","\t\t\t\t\t\taddDays( exclEndDay(event), dayDelta )","\t\t\t\t\t\t// TODO: instead of calling renderDayOverlay() with dates,","\t\t\t\t\t\t// call _renderDayOverlay (or whatever) with cell offsets.","\t\t\t\t\t);","\t\t\t\t}","\t\t\t}, ev);","\t\t\t","\t\t\tfunction mouseup(ev) {","\t\t\t\ttrigger('eventResizeStop', this, event, ev);","\t\t\t\t$('body').css('cursor', '');","\t\t\t\thoverListener.stop();","\t\t\t\tclearOverlays();","\t\t\t\tif (dayDelta) {","\t\t\t\t\teventResize(this, event, dayDelta, 0, ev);","\t\t\t\t\t// event redraw will clear helpers","\t\t\t\t}","\t\t\t\t// otherwise, the drag handler already restored the old events","\t\t\t\t","\t\t\t\tsetTimeout(function() { // make this happen after the element's click event","\t\t\t\t\tisResizing = false;","\t\t\t\t},0);","\t\t\t}","\t\t});","\t}","\t","","}","","","","/* Generalized Segment Utilities","-------------------------------------------------------------------------------------------------*/","","","function isDaySegmentCollision(segment, otherSegments) {","\tfor (var i=0; i<otherSegments.length; i++) {","\t\tvar otherSegment = otherSegments[i];","\t\tif (","\t\t\totherSegment.leftCol <= segment.rightCol &&","\t\t\totherSegment.rightCol >= segment.leftCol","\t\t) {","\t\t\treturn true;","\t\t}","\t}","\treturn false;","}","","","function segmentElementEach(segments, callback) { // TODO: use in AgendaView?","\tfor (var i=0; i<segments.length; i++) {","\t\tvar segment = segments[i];","\t\tvar element = segment.element;","\t\tif (element) {","\t\t\tcallback(segment, element, i);","\t\t}","\t}","}","","","// A cmp function for determining which segments should appear higher up","function compareDaySegments(a, b) {","\treturn (b.rightCol - b.leftCol) - (a.rightCol - a.leftCol) || // put wider events first","\t\tb.event.allDay - a.event.allDay || // if tie, put all-day events first (booleans cast to 0/1)","\t\ta.event.start - b.event.start || // if a tie, sort by event start date","\t\t(a.event.title || '').localeCompare(b.event.title) // if a tie, sort by event title","}","","",";;","","//BUG: unselect needs to be triggered when events are dragged+dropped","","function SelectionManager() {","\tvar t = this;","\t","\t","\t// exports","\tt.select = select;","\tt.unselect = unselect;","\tt.reportSelection = reportSelection;","\tt.daySelectionMousedown = daySelectionMousedown;","\t","\t","\t// imports","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar defaultSelectionEnd = t.defaultSelectionEnd;","\tvar renderSelection = t.renderSelection;","\tvar clearSelection = t.clearSelection;","\t","\t","\t// locals","\tvar selected = false;","","","","\t// unselectAuto","\tif (opt('selectable') && opt('unselectAuto')) {","\t\t$(document).mousedown(function(ev) {","\t\t\tvar ignore = opt('unselectCancel');","\t\t\tif (ignore) {","\t\t\t\tif ($(ev.target).parents(ignore).length) { // could be optimized to stop after first match","\t\t\t\t\treturn;","\t\t\t\t}","\t\t\t}","\t\t\tunselect(ev);","\t\t});","\t}","\t","","\tfunction select(startDate, endDate, allDay) {","\t\tunselect();","\t\tif (!endDate) {","\t\t\tendDate = defaultSelectionEnd(startDate, allDay);","\t\t}","\t\trenderSelection(startDate, endDate, allDay);","\t\treportSelection(startDate, endDate, allDay);","\t}","\t","\t","\tfunction unselect(ev) {","\t\tif (selected) {","\t\t\tselected = false;","\t\t\tclearSelection();","\t\t\ttrigger('unselect', null, ev);","\t\t}","\t}","\t","\t","\tfunction reportSelection(startDate, endDate, allDay, ev) {","\t\tselected = true;","\t\ttrigger('select', null, startDate, endDate, allDay, ev);","\t}","\t","\t","\tfunction daySelectionMousedown(ev) { // not really a generic manager method, oh well","\t\tvar cellToDate = t.cellToDate;","\t\tvar getIsCellAllDay = t.getIsCellAllDay;","\t\tvar hoverListener = t.getHoverListener();","\t\tvar reportDayClick = t.reportDayClick; // this is hacky and sort of weird","\t\tif (ev.which == 1 && opt('selectable')) { // which==1 means left mouse button","\t\t\tunselect(ev);","\t\t\tvar _mousedownElement = this;","\t\t\tvar dates;","\t\t\thoverListener.start(function(cell, origCell) { // TODO: maybe put cellToDate/getIsCellAllDay info in cell","\t\t\t\tclearSelection();","\t\t\t\tif (cell && getIsCellAllDay(cell)) {","\t\t\t\t\tdates = [ cellToDate(origCell), cellToDate(cell) ].sort(dateCompare);","\t\t\t\t\trenderSelection(dates[0], dates[1], true);","\t\t\t\t}else{","\t\t\t\t\tdates = null;","\t\t\t\t}","\t\t\t}, ev);","\t\t\t$(document).one('mouseup', function(ev) {","\t\t\t\thoverListener.stop();","\t\t\t\tif (dates) {","\t\t\t\t\tif (+dates[0] == +dates[1]) {","\t\t\t\t\t\treportDayClick(dates[0], true, ev);","\t\t\t\t\t}","\t\t\t\t\treportSelection(dates[0], dates[1], true, ev);","\t\t\t\t}","\t\t\t});","\t\t}","\t}","","","}","",";;"," ","function OverlayManager() {","\tvar t = this;","\t","\t","\t// exports","\tt.renderOverlay = renderOverlay;","\tt.clearOverlays = clearOverlays;","\t","\t","\t// locals","\tvar usedOverlays = [];","\tvar unusedOverlays = [];","\t","\t","\tfunction renderOverlay(rect, parent) {","\t\tvar e = unusedOverlays.shift();","\t\tif (!e) {","\t\t\te = $(\"<div class='fc-cell-overlay' style='position:absolute;z-index:3'/>\");","\t\t}","\t\tif (e[0].parentNode != parent[0]) {","\t\t\te.appendTo(parent);","\t\t}","\t\tusedOverlays.push(e.css(rect).show());","\t\treturn e;","\t}","\t","","\tfunction clearOverlays() {","\t\tvar e;","\t\twhile (e = usedOverlays.shift()) {","\t\t\tunusedOverlays.push(e.hide().unbind());","\t\t}","\t}","","","}","",";;","","function CoordinateGrid(buildFunc) {","","\tvar t = this;","\tvar rows;","\tvar cols;","\t","\t","\tt.build = function() {","\t\trows = [];","\t\tcols = [];","\t\tbuildFunc(rows, cols);","\t};","\t","\t","\tt.cell = function(x, y) {","\t\tvar rowCnt = rows.length;","\t\tvar colCnt = cols.length;","\t\tvar i, r=-1, c=-1;","\t\tfor (i=0; i<rowCnt; i++) {","\t\t\tif (y >= rows[i][0] && y < rows[i][1]) {","\t\t\t\tr = i;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tfor (i=0; i<colCnt; i++) {","\t\t\tif (x >= cols[i][0] && x < cols[i][1]) {","\t\t\t\tc = i;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\treturn (r>=0 && c>=0) ? { row:r, col:c } : null;","\t};","\t","\t","\tt.rect = function(row0, col0, row1, col1, originElement) { // row1,col1 is inclusive","\t\tvar origin = originElement.offset();","\t\treturn {","\t\t\ttop: rows[row0][0] - origin.top,","\t\t\tleft: cols[col0][0] - origin.left,","\t\t\twidth: cols[col1][1] - cols[col0][0],","\t\t\theight: rows[row1][1] - rows[row0][0]","\t\t};","\t};","","}","",";;","","function HoverListener(coordinateGrid) {","","","\tvar t = this;","\tvar bindType;","\tvar change;","\tvar firstCell;","\tvar cell;","\t","\t","\tt.start = function(_change, ev, _bindType) {","\t\tchange = _change;","\t\tfirstCell = cell = null;","\t\tcoordinateGrid.build();","\t\tmouse(ev);","\t\tbindType = _bindType || 'mousemove';","\t\t$(document).bind(bindType, mouse);","\t};","\t","\t","\tfunction mouse(ev) {","\t\t_fixUIEvent(ev); // see below","\t\tvar newCell = coordinateGrid.cell(ev.pageX, ev.pageY);","\t\tif (!newCell != !cell || newCell && (newCell.row != cell.row || newCell.col != cell.col)) {","\t\t\tif (newCell) {","\t\t\t\tif (!firstCell) {","\t\t\t\t\tfirstCell = newCell;","\t\t\t\t}","\t\t\t\tchange(newCell, firstCell, newCell.row-firstCell.row, newCell.col-firstCell.col);","\t\t\t}else{","\t\t\t\tchange(newCell, firstCell);","\t\t\t}","\t\t\tcell = newCell;","\t\t}","\t}","\t","\t","\tt.stop = function() {","\t\t$(document).unbind(bindType, mouse);","\t\treturn cell;","\t};","\t","\t","}","","","","// this fix was only necessary for jQuery UI 1.8.16 (and jQuery 1.7 or 1.7.1)","// upgrading to jQuery UI 1.8.17 (and using either jQuery 1.7 or 1.7.1) fixed the problem","// but keep this in here for 1.8.16 users","// and maybe remove it down the line","","function _fixUIEvent(event) { // for issue 1168","\tif (event.pageX === undefined) {","\t\tevent.pageX = event.originalEvent.pageX;","\t\tevent.pageY = event.originalEvent.pageY;","\t}","}",";;","","function HorizontalPositionCache(getElement) {","","\tvar t = this,","\t\telements = {},","\t\tlefts = {},","\t\trights = {};","\t\t","\tfunction e(i) {","\t\treturn elements[i] = elements[i] || getElement(i);","\t}","\t","\tt.left = function(i) {","\t\treturn lefts[i] = lefts[i] === undefined ? e(i).position().left : lefts[i];","\t};","\t","\tt.right = function(i) {","\t\treturn rights[i] = rights[i] === undefined ? t.left(i) + e(i).width() : rights[i];","\t};","\t","\tt.clear = function() {","\t\telements = {};","\t\tlefts = {};","\t\trights = {};","\t};","\t","}","",";;",""],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":6115,"column":0},"action":"remove","lines":["$(document).ready(function(){","   $('[data-toggle=\"offcanvas\"]').click(function(){","       $(\"#navigation\").toggleClass(\"hidden-xs\");","   });","});","","// ","/*!"," * FullCalendar v1.6.4"," * Docs & License: http://arshaw.com/fullcalendar/"," * (c) 2013 Adam Shaw"," */","","/*"," * Use fullcalendar.css for basic styling."," * For event drag & drop, requires jQuery UI draggable."," * For event resizing, requires jQuery UI resizable."," */"," ","(function($, undefined) {","","",";;","","var defaults = {","","\t// display","\tdefaultView: 'month',","\taspectRatio: 1.35,","\theader: {","\t\tleft: 'title',","\t\tcenter: '',","\t\tright: 'today prev,next'","\t},","\tweekends: true,","\tweekNumbers: false,","\tweekNumberCalculation: 'iso',","\tweekNumberTitle: 'W',","\t","\t// editing","\t//editable: false,","\t//disableDragging: false,","\t//disableResizing: false,","\t","\tallDayDefault: true,","\tignoreTimezone: true,","\t","\t// event ajax","\tlazyFetching: true,","\tstartParam: 'start',","\tendParam: 'end',","\t","\t// time formats","\ttitleFormat: {","\t\tmonth: 'MMMM yyyy',","\t\tweek: \"MMM d[ yyyy]{ '—'[ MMM] d yyyy}\",","\t\tday: 'dddd, MMM d, yyyy'","\t},","\tcolumnFormat: {","\t\tmonth: 'ddd',","\t\tweek: 'ddd M/d',","\t\tday: 'dddd M/d'","\t},","\ttimeFormat: { // for event elements","\t\t'': 'h(:mm)t' // default","\t},","\t","\t// locale","\tisRTL: false,","\tfirstDay: 0,","\tmonthNames: ['January','February','March','April','May','June','July','August','September','October','November','December'],","\tmonthNamesShort: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],","\tdayNames: ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],","\tdayNamesShort: ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],","\tbuttonText: {","\t\tprev: \"<span class='fc-text-arrow'>‹</span>\",","\t\tnext: \"<span class='fc-text-arrow'>›</span>\",","\t\tprevYear: \"<span class='fc-text-arrow'>«</span>\",","\t\tnextYear: \"<span class='fc-text-arrow'>»</span>\",","\t\ttoday: 'today',","\t\tmonth: 'month',","\t\tweek: 'week',","\t\tday: 'day'","\t},","\t","\t// jquery-ui theming","\ttheme: false,","\tbuttonIcons: {","\t\tprev: 'circle-triangle-w',","\t\tnext: 'circle-triangle-e'","\t},","\t","\t//selectable: false,","\tunselectAuto: true,","\t","\tdropAccept: '*',","\t","\thandleWindowResize: true","\t","};","","// right-to-left defaults","var rtlDefaults = {","\theader: {","\t\tleft: 'next,prev today',","\t\tcenter: '',","\t\tright: 'title'","\t},","\tbuttonText: {","\t\tprev: \"<span class='fc-text-arrow'>›</span>\",","\t\tnext: \"<span class='fc-text-arrow'>‹</span>\",","\t\tprevYear: \"<span class='fc-text-arrow'>»</span>\",","\t\tnextYear: \"<span class='fc-text-arrow'>«</span>\"","\t},","\tbuttonIcons: {","\t\tprev: 'circle-triangle-e',","\t\tnext: 'circle-triangle-w'","\t}","};","","","",";;","","var fc = $.fullCalendar = { version: \"1.6.4\" };","var fcViews = fc.views = {};","","","$.fn.fullCalendar = function(options) {","","","\t// method calling","\tif (typeof options == 'string') {","\t\tvar args = Array.prototype.slice.call(arguments, 1);","\t\tvar res;","\t\tthis.each(function() {","\t\t\tvar calendar = $.data(this, 'fullCalendar');","\t\t\tif (calendar && $.isFunction(calendar[options])) {","\t\t\t\tvar r = calendar[options].apply(calendar, args);","\t\t\t\tif (res === undefined) {","\t\t\t\t\tres = r;","\t\t\t\t}","\t\t\t\tif (options == 'destroy') {","\t\t\t\t\t$.removeData(this, 'fullCalendar');","\t\t\t\t}","\t\t\t}","\t\t});","\t\tif (res !== undefined) {","\t\t\treturn res;","\t\t}","\t\treturn this;","\t}","","\toptions = options || {};","\t","\t// would like to have this logic in EventManager, but needs to happen before options are recursively extended","\tvar eventSources = options.eventSources || [];","\tdelete options.eventSources;","\tif (options.events) {","\t\teventSources.push(options.events);","\t\tdelete options.events;","\t}","\t","","\toptions = $.extend(true, {},","\t\tdefaults,","\t\t(options.isRTL || options.isRTL===undefined && defaults.isRTL) ? rtlDefaults : {},","\t\toptions","\t);","\t","\t","\tthis.each(function(i, _element) {","\t\tvar element = $(_element);","\t\tvar calendar = new Calendar(element, options, eventSources);","\t\telement.data('fullCalendar', calendar); // TODO: look into memory leak implications","\t\tcalendar.render();","\t});","\t","\t","\treturn this;","\t","};","","","// function for adding/overriding defaults","function setDefaults(d) {","\t$.extend(true, defaults, d);","}","","","",";;",""," ","function Calendar(element, options, eventSources) {","\tvar t = this;","\t","\t","\t// exports","\tt.options = options;","\tt.render = render;","\tt.destroy = destroy;","\tt.refetchEvents = refetchEvents;","\tt.reportEvents = reportEvents;","\tt.reportEventChange = reportEventChange;","\tt.rerenderEvents = rerenderEvents;","\tt.changeView = changeView;","\tt.select = select;","\tt.unselect = unselect;","\tt.prev = prev;","\tt.next = next;","\tt.prevYear = prevYear;","\tt.nextYear = nextYear;","\tt.today = today;","\tt.gotoDate = gotoDate;","\tt.incrementDate = incrementDate;","\tt.formatDate = function(format, date) { return formatDate(format, date, options) };","\tt.formatDates = function(format, date1, date2) { return formatDates(format, date1, date2, options) };","\tt.getDate = getDate;","\tt.getView = getView;","\tt.option = option;","\tt.trigger = trigger;","\t","\t","\t// imports","\tEventManager.call(t, options, eventSources);","\tvar isFetchNeeded = t.isFetchNeeded;","\tvar fetchEvents = t.fetchEvents;","\t","\t","\t// locals","\tvar _element = element[0];","\tvar header;","\tvar headerElement;","\tvar content;","\tvar tm; // for making theme classes","\tvar currentView;","\tvar elementOuterWidth;","\tvar suggestedViewHeight;","\tvar resizeUID = 0;","\tvar ignoreWindowResize = 0;","\tvar date = new Date();","\tvar events = [];","\tvar _dragElement;","\t","\t","\t","\t/* Main Rendering","\t-----------------------------------------------------------------------------*/","\t","\t","\tsetYMD(date, options.year, options.month, options.date);","\t","\t","\tfunction render(inc) {","\t\tif (!content) {","\t\t\tinitialRender();","\t\t}","\t\telse if (elementVisible()) {","\t\t\t// mainly for the public API","\t\t\tcalcSize();","\t\t\t_renderView(inc);","\t\t}","\t}","\t","\t","\tfunction initialRender() {","\t\ttm = options.theme ? 'ui' : 'fc';","\t\telement.addClass('fc');","\t\tif (options.isRTL) {","\t\t\telement.addClass('fc-rtl');","\t\t}","\t\telse {","\t\t\telement.addClass('fc-ltr');","\t\t}","\t\tif (options.theme) {","\t\t\telement.addClass('ui-widget');","\t\t}","","\t\tcontent = $(\"<div class='fc-content' style='position:relative'/>\")","\t\t\t.prependTo(element);","","\t\theader = new Header(t, options);","\t\theaderElement = header.render();","\t\tif (headerElement) {","\t\t\telement.prepend(headerElement);","\t\t}","","\t\tchangeView(options.defaultView);","","\t\tif (options.handleWindowResize) {","\t\t\t$(window).resize(windowResize);","\t\t}","","\t\t// needed for IE in a 0x0 iframe, b/c when it is resized, never triggers a windowResize","\t\tif (!bodyVisible()) {","\t\t\tlateRender();","\t\t}","\t}","\t","\t","\t// called when we know the calendar couldn't be rendered when it was initialized,","\t// but we think it's ready now","\tfunction lateRender() {","\t\tsetTimeout(function() { // IE7 needs this so dimensions are calculated correctly","\t\t\tif (!currentView.start && bodyVisible()) { // !currentView.start makes sure this never happens more than once","\t\t\t\trenderView();","\t\t\t}","\t\t},0);","\t}","\t","\t","\tfunction destroy() {","","\t\tif (currentView) {","\t\t\ttrigger('viewDestroy', currentView, currentView, currentView.element);","\t\t\tcurrentView.triggerEventDestroy();","\t\t}","","\t\t$(window).unbind('resize', windowResize);","","\t\theader.destroy();","\t\tcontent.remove();","\t\telement.removeClass('fc fc-rtl ui-widget');","\t}","\t","\t","\tfunction elementVisible() {","\t\treturn element.is(':visible');","\t}","\t","\t","\tfunction bodyVisible() {","\t\treturn $('body').is(':visible');","\t}","\t","\t","\t","\t/* View Rendering","\t-----------------------------------------------------------------------------*/","\t","","\tfunction changeView(newViewName) {","\t\tif (!currentView || newViewName != currentView.name) {","\t\t\t_changeView(newViewName);","\t\t}","\t}","","","\tfunction _changeView(newViewName) {","\t\tignoreWindowResize++;","","\t\tif (currentView) {","\t\t\ttrigger('viewDestroy', currentView, currentView, currentView.element);","\t\t\tunselect();","\t\t\tcurrentView.triggerEventDestroy(); // trigger 'eventDestroy' for each event","\t\t\tfreezeContentHeight();","\t\t\tcurrentView.element.remove();","\t\t\theader.deactivateButton(currentView.name);","\t\t}","","\t\theader.activateButton(newViewName);","","\t\tcurrentView = new fcViews[newViewName](","\t\t\t$(\"<div class='fc-view fc-view-\" + newViewName + \"' style='position:relative'/>\")","\t\t\t\t.appendTo(content),","\t\t\tt // the calendar object","\t\t);","","\t\trenderView();","\t\tunfreezeContentHeight();","","\t\tignoreWindowResize--;","\t}","","","\tfunction renderView(inc) {","\t\tif (","\t\t\t!currentView.start || // never rendered before","\t\t\tinc || date < currentView.start || date >= currentView.end // or new date range","\t\t) {","\t\t\tif (elementVisible()) {","\t\t\t\t_renderView(inc);","\t\t\t}","\t\t}","\t}","","","\tfunction _renderView(inc) { // assumes elementVisible","\t\tignoreWindowResize++;","","\t\tif (currentView.start) { // already been rendered?","\t\t\ttrigger('viewDestroy', currentView, currentView, currentView.element);","\t\t\tunselect();","\t\t\tclearEvents();","\t\t}","","\t\tfreezeContentHeight();","\t\tcurrentView.render(date, inc || 0); // the view's render method ONLY renders the skeleton, nothing else","\t\tsetSize();","\t\tunfreezeContentHeight();","\t\t(currentView.afterRender || noop)();","","\t\tupdateTitle();","\t\tupdateTodayButton();","","\t\ttrigger('viewRender', currentView, currentView, currentView.element);","\t\tcurrentView.trigger('viewDisplay', _element); // deprecated","","\t\tignoreWindowResize--;","","\t\tgetAndRenderEvents();","\t}","\t","\t","","\t/* Resizing","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction updateSize() {","\t\tif (elementVisible()) {","\t\t\tunselect();","\t\t\tclearEvents();","\t\t\tcalcSize();","\t\t\tsetSize();","\t\t\trenderEvents();","\t\t}","\t}","\t","\t","\tfunction calcSize() { // assumes elementVisible","\t\tif (options.contentHeight) {","\t\t\tsuggestedViewHeight = options.contentHeight;","\t\t}","\t\telse if (options.height) {","\t\t\tsuggestedViewHeight = options.height - (headerElement ? headerElement.height() : 0) - vsides(content);","\t\t}","\t\telse {","\t\t\tsuggestedViewHeight = Math.round(content.width() / Math.max(options.aspectRatio, .5));","\t\t}","\t}","\t","\t","\tfunction setSize() { // assumes elementVisible","","\t\tif (suggestedViewHeight === undefined) {","\t\t\tcalcSize(); // for first time","\t\t\t\t// NOTE: we don't want to recalculate on every renderView because","\t\t\t\t// it could result in oscillating heights due to scrollbars.","\t\t}","","\t\tignoreWindowResize++;","\t\tcurrentView.setHeight(suggestedViewHeight);","\t\tcurrentView.setWidth(content.width());","\t\tignoreWindowResize--;","","\t\telementOuterWidth = element.outerWidth();","\t}","\t","\t","\tfunction windowResize() {","\t\tif (!ignoreWindowResize) {","\t\t\tif (currentView.start) { // view has already been rendered","\t\t\t\tvar uid = ++resizeUID;","\t\t\t\tsetTimeout(function() { // add a delay","\t\t\t\t\tif (uid == resizeUID && !ignoreWindowResize && elementVisible()) {","\t\t\t\t\t\tif (elementOuterWidth != (elementOuterWidth = element.outerWidth())) {","\t\t\t\t\t\t\tignoreWindowResize++; // in case the windowResize callback changes the height","\t\t\t\t\t\t\tupdateSize();","\t\t\t\t\t\t\tcurrentView.trigger('windowResize', _element);","\t\t\t\t\t\t\tignoreWindowResize--;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}, 200);","\t\t\t}else{","\t\t\t\t// calendar must have been initialized in a 0x0 iframe that has just been resized","\t\t\t\tlateRender();","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Event Fetching/Rendering","\t-----------------------------------------------------------------------------*/","\t// TODO: going forward, most of this stuff should be directly handled by the view","","","\tfunction refetchEvents() { // can be called as an API method","\t\tclearEvents();","\t\tfetchAndRenderEvents();","\t}","","","\tfunction rerenderEvents(modifiedEventID) { // can be called as an API method","\t\tclearEvents();","\t\trenderEvents(modifiedEventID);","\t}","","","\tfunction renderEvents(modifiedEventID) { // TODO: remove modifiedEventID hack","\t\tif (elementVisible()) {","\t\t\tcurrentView.setEventData(events); // for View.js, TODO: unify with renderEvents","\t\t\tcurrentView.renderEvents(events, modifiedEventID); // actually render the DOM elements","\t\t\tcurrentView.trigger('eventAfterAllRender');","\t\t}","\t}","","","\tfunction clearEvents() {","\t\tcurrentView.triggerEventDestroy(); // trigger 'eventDestroy' for each event","\t\tcurrentView.clearEvents(); // actually remove the DOM elements","\t\tcurrentView.clearEventData(); // for View.js, TODO: unify with clearEvents","\t}","\t","","\tfunction getAndRenderEvents() {","\t\tif (!options.lazyFetching || isFetchNeeded(currentView.visStart, currentView.visEnd)) {","\t\t\tfetchAndRenderEvents();","\t\t}","\t\telse {","\t\t\trenderEvents();","\t\t}","\t}","","","\tfunction fetchAndRenderEvents() {","\t\tfetchEvents(currentView.visStart, currentView.visEnd);","\t\t\t// ... will call reportEvents","\t\t\t// ... which will call renderEvents","\t}","","\t","\t// called when event data arrives","\tfunction reportEvents(_events) {","\t\tevents = _events;","\t\trenderEvents();","\t}","","","\t// called when a single event's data has been changed","\tfunction reportEventChange(eventID) {","\t\trerenderEvents(eventID);","\t}","","","","\t/* Header Updating","\t-----------------------------------------------------------------------------*/","","","\tfunction updateTitle() {","\t\theader.updateTitle(currentView.title);","\t}","","","\tfunction updateTodayButton() {","\t\tvar today = new Date();","\t\tif (today >= currentView.start && today < currentView.end) {","\t\t\theader.disableButton('today');","\t\t}","\t\telse {","\t\t\theader.enableButton('today');","\t\t}","\t}","\t","","","\t/* Selection","\t-----------------------------------------------------------------------------*/","\t","","\tfunction select(start, end, allDay) {","\t\tcurrentView.select(start, end, allDay===undefined ? true : allDay);","\t}","\t","","\tfunction unselect() { // safe to be called before renderView","\t\tif (currentView) {","\t\t\tcurrentView.unselect();","\t\t}","\t}","\t","\t","\t","\t/* Date","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction prev() {","\t\trenderView(-1);","\t}","\t","\t","\tfunction next() {","\t\trenderView(1);","\t}","\t","\t","\tfunction prevYear() {","\t\taddYears(date, -1);","\t\trenderView();","\t}","\t","\t","\tfunction nextYear() {","\t\taddYears(date, 1);","\t\trenderView();","\t}","\t","\t","\tfunction today() {","\t\tdate = new Date();","\t\trenderView();","\t}","\t","\t","\tfunction gotoDate(year, month, dateOfMonth) {","\t\tif (year instanceof Date) {","\t\t\tdate = cloneDate(year); // provided 1 argument, a Date","\t\t}else{","\t\t\tsetYMD(date, year, month, dateOfMonth);","\t\t}","\t\trenderView();","\t}","\t","\t","\tfunction incrementDate(years, months, days) {","\t\tif (years !== undefined) {","\t\t\taddYears(date, years);","\t\t}","\t\tif (months !== undefined) {","\t\t\taddMonths(date, months);","\t\t}","\t\tif (days !== undefined) {","\t\t\taddDays(date, days);","\t\t}","\t\trenderView();","\t}","\t","\t","\tfunction getDate() {","\t\treturn cloneDate(date);","\t}","","","","\t/* Height \"Freezing\"","\t-----------------------------------------------------------------------------*/","","","\tfunction freezeContentHeight() {","\t\tcontent.css({","\t\t\twidth: '100%',","\t\t\theight: content.height(),","\t\t\toverflow: 'hidden'","\t\t});","\t}","","","\tfunction unfreezeContentHeight() {","\t\tcontent.css({","\t\t\twidth: '',","\t\t\theight: '',","\t\t\toverflow: ''","\t\t});","\t}","\t","\t","\t","\t/* Misc","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction getView() {","\t\treturn currentView;","\t}","\t","\t","\tfunction option(name, value) {","\t\tif (value === undefined) {","\t\t\treturn options[name];","\t\t}","\t\tif (name == 'height' || name == 'contentHeight' || name == 'aspectRatio') {","\t\t\toptions[name] = value;","\t\t\tupdateSize();","\t\t}","\t}","\t","\t","\tfunction trigger(name, thisObj) {","\t\tif (options[name]) {","\t\t\treturn options[name].apply(","\t\t\t\tthisObj || _element,","\t\t\t\tArray.prototype.slice.call(arguments, 2)","\t\t\t);","\t\t}","\t}","\t","\t","\t","\t/* External Dragging","\t------------------------------------------------------------------------*/","\t","\tif (options.droppable) {","\t\t$(document)","\t\t\t.bind('dragstart', function(ev, ui) {","\t\t\t\tvar _e = ev.target;","\t\t\t\tvar e = $(_e);","\t\t\t\tif (!e.parents('.fc').length) { // not already inside a calendar","\t\t\t\t\tvar accept = options.dropAccept;","\t\t\t\t\tif ($.isFunction(accept) ? accept.call(_e, e) : e.is(accept)) {","\t\t\t\t\t\t_dragElement = _e;","\t\t\t\t\t\tcurrentView.dragStart(_dragElement, ev, ui);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t})","\t\t\t.bind('dragstop', function(ev, ui) {","\t\t\t\tif (_dragElement) {","\t\t\t\t\tcurrentView.dragStop(_dragElement, ev, ui);","\t\t\t\t\t_dragElement = null;","\t\t\t\t}","\t\t\t});","\t}","\t","","}","",";;","","function Header(calendar, options) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\tt.destroy = destroy;","\tt.updateTitle = updateTitle;","\tt.activateButton = activateButton;","\tt.deactivateButton = deactivateButton;","\tt.disableButton = disableButton;","\tt.enableButton = enableButton;","\t","\t","\t// locals","\tvar element = $([]);","\tvar tm;","\t","","","\tfunction render() {","\t\ttm = options.theme ? 'ui' : 'fc';","\t\tvar sections = options.header;","\t\tif (sections) {","\t\t\telement = $(\"<table class='fc-header' style='width:100%'/>\")","\t\t\t\t.append(","\t\t\t\t\t$(\"<tr/>\")","\t\t\t\t\t\t.append(renderSection('left'))","\t\t\t\t\t\t.append(renderSection('center'))","\t\t\t\t\t\t.append(renderSection('right'))","\t\t\t\t);","\t\t\treturn element;","\t\t}","\t}","\t","\t","\tfunction destroy() {","\t\telement.remove();","\t}","\t","\t","\tfunction renderSection(position) {","\t\tvar e = $(\"<td class='fc-header-\" + position + \"'/>\");","\t\tvar buttonStr = options.header[position];","\t\tif (buttonStr) {","\t\t\t$.each(buttonStr.split(' '), function(i) {","\t\t\t\tif (i > 0) {","\t\t\t\t\te.append(\"<span class='fc-header-space'/>\");","\t\t\t\t}","\t\t\t\tvar prevButton;","\t\t\t\t$.each(this.split(','), function(j, buttonName) {","\t\t\t\t\tif (buttonName == 'title') {","\t\t\t\t\t\te.append(\"<span class='fc-header-title'><h2> </h2></span>\");","\t\t\t\t\t\tif (prevButton) {","\t\t\t\t\t\t\tprevButton.addClass(tm + '-corner-right');","\t\t\t\t\t\t}","\t\t\t\t\t\tprevButton = null;","\t\t\t\t\t}else{","\t\t\t\t\t\tvar buttonClick;","\t\t\t\t\t\tif (calendar[buttonName]) {","\t\t\t\t\t\t\tbuttonClick = calendar[buttonName]; // calendar method","\t\t\t\t\t\t}","\t\t\t\t\t\telse if (fcViews[buttonName]) {","\t\t\t\t\t\t\tbuttonClick = function() {","\t\t\t\t\t\t\t\tbutton.removeClass(tm + '-state-hover'); // forget why","\t\t\t\t\t\t\t\tcalendar.changeView(buttonName);","\t\t\t\t\t\t\t};","\t\t\t\t\t\t}","\t\t\t\t\t\tif (buttonClick) {","\t\t\t\t\t\t\tvar icon = options.theme ? smartProperty(options.buttonIcons, buttonName) : null; // why are we using smartProperty here?","\t\t\t\t\t\t\tvar text = smartProperty(options.buttonText, buttonName); // why are we using smartProperty here?","\t\t\t\t\t\t\tvar button = $(","\t\t\t\t\t\t\t\t\"<span class='fc-button fc-button-\" + buttonName + \" \" + tm + \"-state-default'>\" +","\t\t\t\t\t\t\t\t\t(icon ?","\t\t\t\t\t\t\t\t\t\t\"<span class='fc-icon-wrap'>\" +","\t\t\t\t\t\t\t\t\t\t\t\"<span class='ui-icon ui-icon-\" + icon + \"'/>\" +","\t\t\t\t\t\t\t\t\t\t\"</span>\" :","\t\t\t\t\t\t\t\t\t\ttext","\t\t\t\t\t\t\t\t\t\t) +","\t\t\t\t\t\t\t\t\"</span>\"","\t\t\t\t\t\t\t\t)","\t\t\t\t\t\t\t\t.click(function() {","\t\t\t\t\t\t\t\t\tif (!button.hasClass(tm + '-state-disabled')) {","\t\t\t\t\t\t\t\t\t\tbuttonClick();","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t})","\t\t\t\t\t\t\t\t.mousedown(function() {","\t\t\t\t\t\t\t\t\tbutton","\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-active')","\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-disabled')","\t\t\t\t\t\t\t\t\t\t.addClass(tm + '-state-down');","\t\t\t\t\t\t\t\t})","\t\t\t\t\t\t\t\t.mouseup(function() {","\t\t\t\t\t\t\t\t\tbutton.removeClass(tm + '-state-down');","\t\t\t\t\t\t\t\t})","\t\t\t\t\t\t\t\t.hover(","\t\t\t\t\t\t\t\t\tfunction() {","\t\t\t\t\t\t\t\t\t\tbutton","\t\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-active')","\t\t\t\t\t\t\t\t\t\t\t.not('.' + tm + '-state-disabled')","\t\t\t\t\t\t\t\t\t\t\t.addClass(tm + '-state-hover');","\t\t\t\t\t\t\t\t\t},","\t\t\t\t\t\t\t\t\tfunction() {","\t\t\t\t\t\t\t\t\t\tbutton","\t\t\t\t\t\t\t\t\t\t\t.removeClass(tm + '-state-hover')","\t\t\t\t\t\t\t\t\t\t\t.removeClass(tm + '-state-down');","\t\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t\t)","\t\t\t\t\t\t\t\t.appendTo(e);","\t\t\t\t\t\t\tdisableTextSelection(button);","\t\t\t\t\t\t\tif (!prevButton) {","\t\t\t\t\t\t\t\tbutton.addClass(tm + '-corner-left');","\t\t\t\t\t\t\t}","\t\t\t\t\t\t\tprevButton = button;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t});","\t\t\t\tif (prevButton) {","\t\t\t\t\tprevButton.addClass(tm + '-corner-right');","\t\t\t\t}","\t\t\t});","\t\t}","\t\treturn e;","\t}","\t","\t","\tfunction updateTitle(html) {","\t\telement.find('h2')","\t\t\t.html(html);","\t}","\t","\t","\tfunction activateButton(buttonName) {","\t\telement.find('span.fc-button-' + buttonName)","\t\t\t.addClass(tm + '-state-active');","\t}","\t","\t","\tfunction deactivateButton(buttonName) {","\t\telement.find('span.fc-button-' + buttonName)","\t\t\t.removeClass(tm + '-state-active');","\t}","\t","\t","\tfunction disableButton(buttonName) {","\t\telement.find('span.fc-button-' + buttonName)","\t\t\t.addClass(tm + '-state-disabled');","\t}","\t","\t","\tfunction enableButton(buttonName) {","\t\telement.find('span.fc-button-' + buttonName)","\t\t\t.removeClass(tm + '-state-disabled');","\t}","","","}","",";;","","fc.sourceNormalizers = [];","fc.sourceFetchers = [];","","var ajaxDefaults = {","\tdataType: 'json',","\tcache: false","};","","var eventGUID = 1;","","","function EventManager(options, _sources) {","\tvar t = this;","\t","\t","\t// exports","\tt.isFetchNeeded = isFetchNeeded;","\tt.fetchEvents = fetchEvents;","\tt.addEventSource = addEventSource;","\tt.removeEventSource = removeEventSource;","\tt.updateEvent = updateEvent;","\tt.renderEvent = renderEvent;","\tt.removeEvents = removeEvents;","\tt.clientEvents = clientEvents;","\tt.normalizeEvent = normalizeEvent;","\t","\t","\t// imports","\tvar trigger = t.trigger;","\tvar getView = t.getView;","\tvar reportEvents = t.reportEvents;","\t","\t","\t// locals","\tvar stickySource = { events: [] };","\tvar sources = [ stickySource ];","\tvar rangeStart, rangeEnd;","\tvar currentFetchID = 0;","\tvar pendingSourceCnt = 0;","\tvar loadingLevel = 0;","\tvar cache = [];","\t","\t","\tfor (var i=0; i<_sources.length; i++) {","\t\t_addEventSource(_sources[i]);","\t}","\t","\t","\t","\t/* Fetching","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction isFetchNeeded(start, end) {","\t\treturn !rangeStart || start < rangeStart || end > rangeEnd;","\t}","\t","\t","\tfunction fetchEvents(start, end) {","\t\trangeStart = start;","\t\trangeEnd = end;","\t\tcache = [];","\t\tvar fetchID = ++currentFetchID;","\t\tvar len = sources.length;","\t\tpendingSourceCnt = len;","\t\tfor (var i=0; i<len; i++) {","\t\t\tfetchEventSource(sources[i], fetchID);","\t\t}","\t}","\t","\t","\tfunction fetchEventSource(source, fetchID) {","\t\t_fetchEventSource(source, function(events) {","\t\t\tif (fetchID == currentFetchID) {","\t\t\t\tif (events) {","","\t\t\t\t\tif (options.eventDataTransform) {","\t\t\t\t\t\tevents = $.map(events, options.eventDataTransform);","\t\t\t\t\t}","\t\t\t\t\tif (source.eventDataTransform) {","\t\t\t\t\t\tevents = $.map(events, source.eventDataTransform);","\t\t\t\t\t}","\t\t\t\t\t// TODO: this technique is not ideal for static array event sources.","\t\t\t\t\t//  For arrays, we'll want to process all events right in the beginning, then never again.","\t\t\t\t","\t\t\t\t\tfor (var i=0; i<events.length; i++) {","\t\t\t\t\t\tevents[i].source = source;","\t\t\t\t\t\tnormalizeEvent(events[i]);","\t\t\t\t\t}","\t\t\t\t\tcache = cache.concat(events);","\t\t\t\t}","\t\t\t\tpendingSourceCnt--;","\t\t\t\tif (!pendingSourceCnt) {","\t\t\t\t\treportEvents(cache);","\t\t\t\t}","\t\t\t}","\t\t});","\t}","\t","\t","\tfunction _fetchEventSource(source, callback) {","\t\tvar i;","\t\tvar fetchers = fc.sourceFetchers;","\t\tvar res;","\t\tfor (i=0; i<fetchers.length; i++) {","\t\t\tres = fetchers[i](source, rangeStart, rangeEnd, callback);","\t\t\tif (res === true) {","\t\t\t\t// the fetcher is in charge. made its own async request","\t\t\t\treturn;","\t\t\t}","\t\t\telse if (typeof res == 'object') {","\t\t\t\t// the fetcher returned a new source. process it","\t\t\t\t_fetchEventSource(res, callback);","\t\t\t\treturn;","\t\t\t}","\t\t}","\t\tvar events = source.events;","\t\tif (events) {","\t\t\tif ($.isFunction(events)) {","\t\t\t\tpushLoading();","\t\t\t\tevents(cloneDate(rangeStart), cloneDate(rangeEnd), function(events) {","\t\t\t\t\tcallback(events);","\t\t\t\t\tpopLoading();","\t\t\t\t});","\t\t\t}","\t\t\telse if ($.isArray(events)) {","\t\t\t\tcallback(events);","\t\t\t}","\t\t\telse {","\t\t\t\tcallback();","\t\t\t}","\t\t}else{","\t\t\tvar url = source.url;","\t\t\tif (url) {","\t\t\t\tvar success = source.success;","\t\t\t\tvar error = source.error;","\t\t\t\tvar complete = source.complete;","","\t\t\t\t// retrieve any outbound GET/POST $.ajax data from the options","\t\t\t\tvar customData;","\t\t\t\tif ($.isFunction(source.data)) {","\t\t\t\t\t// supplied as a function that returns a key/value object","\t\t\t\t\tcustomData = source.data();","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\t// supplied as a straight key/value object","\t\t\t\t\tcustomData = source.data;","\t\t\t\t}","","\t\t\t\t// use a copy of the custom data so we can modify the parameters","\t\t\t\t// and not affect the passed-in object.","\t\t\t\tvar data = $.extend({}, customData || {});","","\t\t\t\tvar startParam = firstDefined(source.startParam, options.startParam);","\t\t\t\tvar endParam = firstDefined(source.endParam, options.endParam);","\t\t\t\tif (startParam) {","\t\t\t\t\tdata[startParam] = Math.round(+rangeStart / 1000);","\t\t\t\t}","\t\t\t\tif (endParam) {","\t\t\t\t\tdata[endParam] = Math.round(+rangeEnd / 1000);","\t\t\t\t}","","\t\t\t\tpushLoading();","\t\t\t\t$.ajax($.extend({}, ajaxDefaults, source, {","\t\t\t\t\tdata: data,","\t\t\t\t\tsuccess: function(events) {","\t\t\t\t\t\tevents = events || [];","\t\t\t\t\t\tvar res = applyAll(success, this, arguments);","\t\t\t\t\t\tif ($.isArray(res)) {","\t\t\t\t\t\t\tevents = res;","\t\t\t\t\t\t}","\t\t\t\t\t\tcallback(events);","\t\t\t\t\t},","\t\t\t\t\terror: function() {","\t\t\t\t\t\tapplyAll(error, this, arguments);","\t\t\t\t\t\tcallback();","\t\t\t\t\t},","\t\t\t\t\tcomplete: function() {","\t\t\t\t\t\tapplyAll(complete, this, arguments);","\t\t\t\t\t\tpopLoading();","\t\t\t\t\t}","\t\t\t\t}));","\t\t\t}else{","\t\t\t\tcallback();","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Sources","\t-----------------------------------------------------------------------------*/","\t","","\tfunction addEventSource(source) {","\t\tsource = _addEventSource(source);","\t\tif (source) {","\t\t\tpendingSourceCnt++;","\t\t\tfetchEventSource(source, currentFetchID); // will eventually call reportEvents","\t\t}","\t}","\t","\t","\tfunction _addEventSource(source) {","\t\tif ($.isFunction(source) || $.isArray(source)) {","\t\t\tsource = { events: source };","\t\t}","\t\telse if (typeof source == 'string') {","\t\t\tsource = { url: source };","\t\t}","\t\tif (typeof source == 'object') {","\t\t\tnormalizeSource(source);","\t\t\tsources.push(source);","\t\t\treturn source;","\t\t}","\t}","\t","","\tfunction removeEventSource(source) {","\t\tsources = $.grep(sources, function(src) {","\t\t\treturn !isSourcesEqual(src, source);","\t\t});","\t\t// remove all client events from that source","\t\tcache = $.grep(cache, function(e) {","\t\t\treturn !isSourcesEqual(e.source, source);","\t\t});","\t\treportEvents(cache);","\t}","\t","\t","\t","\t/* Manipulation","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction updateEvent(event) { // update an existing event","\t\tvar i, len = cache.length, e,","\t\t\tdefaultEventEnd = getView().defaultEventEnd, // getView???","\t\t\tstartDelta = event.start - event._start,","\t\t\tendDelta = event.end ?","\t\t\t\t(event.end - (event._end || defaultEventEnd(event))) // event._end would be null if event.end","\t\t\t\t: 0;                                                      // was null and event was just resized","\t\tfor (i=0; i<len; i++) {","\t\t\te = cache[i];","\t\t\tif (e._id == event._id && e != event) {","\t\t\t\te.start = new Date(+e.start + startDelta);","\t\t\t\tif (event.end) {","\t\t\t\t\tif (e.end) {","\t\t\t\t\t\te.end = new Date(+e.end + endDelta);","\t\t\t\t\t}else{","\t\t\t\t\t\te.end = new Date(+defaultEventEnd(e) + endDelta);","\t\t\t\t\t}","\t\t\t\t}else{","\t\t\t\t\te.end = null;","\t\t\t\t}","\t\t\t\te.title = event.title;","\t\t\t\te.url = event.url;","\t\t\t\te.allDay = event.allDay;","\t\t\t\te.className = event.className;","\t\t\t\te.editable = event.editable;","\t\t\t\te.color = event.color;","\t\t\t\te.backgroundColor = event.backgroundColor;","\t\t\t\te.borderColor = event.borderColor;","\t\t\t\te.textColor = event.textColor;","\t\t\t\tnormalizeEvent(e);","\t\t\t}","\t\t}","\t\tnormalizeEvent(event);","\t\treportEvents(cache);","\t}","\t","\t","\tfunction renderEvent(event, stick) {","\t\tnormalizeEvent(event);","\t\tif (!event.source) {","\t\t\tif (stick) {","\t\t\t\tstickySource.events.push(event);","\t\t\t\tevent.source = stickySource;","\t\t\t}","\t\t\tcache.push(event);","\t\t}","\t\treportEvents(cache);","\t}","\t","\t","\tfunction removeEvents(filter) {","\t\tif (!filter) { // remove all","\t\t\tcache = [];","\t\t\t// clear all array sources","\t\t\tfor (var i=0; i<sources.length; i++) {","\t\t\t\tif ($.isArray(sources[i].events)) {","\t\t\t\t\tsources[i].events = [];","\t\t\t\t}","\t\t\t}","\t\t}else{","\t\t\tif (!$.isFunction(filter)) { // an event ID","\t\t\t\tvar id = filter + '';","\t\t\t\tfilter = function(e) {","\t\t\t\t\treturn e._id == id;","\t\t\t\t};","\t\t\t}","\t\t\tcache = $.grep(cache, filter, true);","\t\t\t// remove events from array sources","\t\t\tfor (var i=0; i<sources.length; i++) {","\t\t\t\tif ($.isArray(sources[i].events)) {","\t\t\t\t\tsources[i].events = $.grep(sources[i].events, filter, true);","\t\t\t\t}","\t\t\t}","\t\t}","\t\treportEvents(cache);","\t}","\t","\t","\tfunction clientEvents(filter) {","\t\tif ($.isFunction(filter)) {","\t\t\treturn $.grep(cache, filter);","\t\t}","\t\telse if (filter) { // an event ID","\t\t\tfilter += '';","\t\t\treturn $.grep(cache, function(e) {","\t\t\t\treturn e._id == filter;","\t\t\t});","\t\t}","\t\treturn cache; // else, return all","\t}","\t","\t","\t","\t/* Loading State","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction pushLoading() {","\t\tif (!loadingLevel++) {","\t\t\ttrigger('loading', null, true, getView());","\t\t}","\t}","\t","\t","\tfunction popLoading() {","\t\tif (!--loadingLevel) {","\t\t\ttrigger('loading', null, false, getView());","\t\t}","\t}","\t","\t","\t","\t/* Event Normalization","\t-----------------------------------------------------------------------------*/","\t","\t","\tfunction normalizeEvent(event) {","\t\tvar source = event.source || {};","\t\tvar ignoreTimezone = firstDefined(source.ignoreTimezone, options.ignoreTimezone);","\t\tevent._id = event._id || (event.id === undefined ? '_fc' + eventGUID++ : event.id + '');","\t\tif (event.date) {","\t\t\tif (!event.start) {","\t\t\t\tevent.start = event.date;","\t\t\t}","\t\t\tdelete event.date;","\t\t}","\t\tevent._start = cloneDate(event.start = parseDate(event.start, ignoreTimezone));","\t\tevent.end = parseDate(event.end, ignoreTimezone);","\t\tif (event.end && event.end <= event.start) {","\t\t\tevent.end = null;","\t\t}","\t\tevent._end = event.end ? cloneDate(event.end) : null;","\t\tif (event.allDay === undefined) {","\t\t\tevent.allDay = firstDefined(source.allDayDefault, options.allDayDefault);","\t\t}","\t\tif (event.className) {","\t\t\tif (typeof event.className == 'string') {","\t\t\t\tevent.className = event.className.split(/\\s+/);","\t\t\t}","\t\t}else{","\t\t\tevent.className = [];","\t\t}","\t\t// TODO: if there is no start date, return false to indicate an invalid event","\t}","\t","\t","\t","\t/* Utils","\t------------------------------------------------------------------------------*/","\t","\t","\tfunction normalizeSource(source) {","\t\tif (source.className) {","\t\t\t// TODO: repeat code, same code for event classNames","\t\t\tif (typeof source.className == 'string') {","\t\t\t\tsource.className = source.className.split(/\\s+/);","\t\t\t}","\t\t}else{","\t\t\tsource.className = [];","\t\t}","\t\tvar normalizers = fc.sourceNormalizers;","\t\tfor (var i=0; i<normalizers.length; i++) {","\t\t\tnormalizers[i](source);","\t\t}","\t}","\t","\t","\tfunction isSourcesEqual(source1, source2) {","\t\treturn source1 && source2 && getSourcePrimitive(source1) == getSourcePrimitive(source2);","\t}","\t","\t","\tfunction getSourcePrimitive(source) {","\t\treturn ((typeof source == 'object') ? (source.events || source.url) : '') || source;","\t}","","","}","",";;","","","fc.addDays = addDays;","fc.cloneDate = cloneDate;","fc.parseDate = parseDate;","fc.parseISO8601 = parseISO8601;","fc.parseTime = parseTime;","fc.formatDate = formatDate;","fc.formatDates = formatDates;","","","","/* Date Math","-----------------------------------------------------------------------------*/","","var dayIDs = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'],","\tDAY_MS = 86400000,","\tHOUR_MS = 3600000,","\tMINUTE_MS = 60000;","\t","","function addYears(d, n, keepTime) {","\td.setFullYear(d.getFullYear() + n);","\tif (!keepTime) {","\t\tclearTime(d);","\t}","\treturn d;","}","","","function addMonths(d, n, keepTime) { // prevents day overflow/underflow","\tif (+d) { // prevent infinite looping on invalid dates","\t\tvar m = d.getMonth() + n,","\t\t\tcheck = cloneDate(d);","\t\tcheck.setDate(1);","\t\tcheck.setMonth(m);","\t\td.setMonth(m);","\t\tif (!keepTime) {","\t\t\tclearTime(d);","\t\t}","\t\twhile (d.getMonth() != check.getMonth()) {","\t\t\td.setDate(d.getDate() + (d < check ? 1 : -1));","\t\t}","\t}","\treturn d;","}","","","function addDays(d, n, keepTime) { // deals with daylight savings","\tif (+d) {","\t\tvar dd = d.getDate() + n,","\t\t\tcheck = cloneDate(d);","\t\tcheck.setHours(9); // set to middle of day","\t\tcheck.setDate(dd);","\t\td.setDate(dd);","\t\tif (!keepTime) {","\t\t\tclearTime(d);","\t\t}","\t\tfixDate(d, check);","\t}","\treturn d;","}","","","function fixDate(d, check) { // force d to be on check's YMD, for daylight savings purposes","\tif (+d) { // prevent infinite looping on invalid dates","\t\twhile (d.getDate() != check.getDate()) {","\t\t\td.setTime(+d + (d < check ? 1 : -1) * HOUR_MS);","\t\t}","\t}","}","","","function addMinutes(d, n) {","\td.setMinutes(d.getMinutes() + n);","\treturn d;","}","","","function clearTime(d) {","\td.setHours(0);","\td.setMinutes(0);","\td.setSeconds(0); ","\td.setMilliseconds(0);","\treturn d;","}","","","function cloneDate(d, dontKeepTime) {","\tif (dontKeepTime) {","\t\treturn clearTime(new Date(+d));","\t}","\treturn new Date(+d);","}","","","function zeroDate() { // returns a Date with time 00:00:00 and dateOfMonth=1","\tvar i=0, d;","\tdo {","\t\td = new Date(1970, i++, 1);","\t} while (d.getHours()); // != 0","\treturn d;","}","","","function dayDiff(d1, d2) { // d1 - d2","\treturn Math.round((cloneDate(d1, true) - cloneDate(d2, true)) / DAY_MS);","}","","","function setYMD(date, y, m, d) {","\tif (y !== undefined && y != date.getFullYear()) {","\t\tdate.setDate(1);","\t\tdate.setMonth(0);","\t\tdate.setFullYear(y);","\t}","\tif (m !== undefined && m != date.getMonth()) {","\t\tdate.setDate(1);","\t\tdate.setMonth(m);","\t}","\tif (d !== undefined) {","\t\tdate.setDate(d);","\t}","}","","","","/* Date Parsing","-----------------------------------------------------------------------------*/","","","function parseDate(s, ignoreTimezone) { // ignoreTimezone defaults to true","\tif (typeof s == 'object') { // already a Date object","\t\treturn s;","\t}","\tif (typeof s == 'number') { // a UNIX timestamp","\t\treturn new Date(s * 1000);","\t}","\tif (typeof s == 'string') {","\t\tif (s.match(/^\\d+(\\.\\d+)?$/)) { // a UNIX timestamp","\t\t\treturn new Date(parseFloat(s) * 1000);","\t\t}","\t\tif (ignoreTimezone === undefined) {","\t\t\tignoreTimezone = true;","\t\t}","\t\treturn parseISO8601(s, ignoreTimezone) || (s ? new Date(s) : null);","\t}","\t// TODO: never return invalid dates (like from new Date(<string>)), return null instead","\treturn null;","}","","","function parseISO8601(s, ignoreTimezone) { // ignoreTimezone defaults to false","\t// derived from http://delete.me.uk/2005/03/iso8601.html","\t// TODO: for a know glitch/feature, read tests/issue_206_parseDate_dst.html","\tvar m = s.match(/^([0-9]{4})(-([0-9]{2})(-([0-9]{2})([T ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(\\.([0-9]+))?)?(Z|(([-+])([0-9]{2})(:?([0-9]{2}))?))?)?)?)?$/);","\tif (!m) {","\t\treturn null;","\t}","\tvar date = new Date(m[1], 0, 1);","\tif (ignoreTimezone || !m[13]) {","\t\tvar check = new Date(m[1], 0, 1, 9, 0);","\t\tif (m[3]) {","\t\t\tdate.setMonth(m[3] - 1);","\t\t\tcheck.setMonth(m[3] - 1);","\t\t}","\t\tif (m[5]) {","\t\t\tdate.setDate(m[5]);","\t\t\tcheck.setDate(m[5]);","\t\t}","\t\tfixDate(date, check);","\t\tif (m[7]) {","\t\t\tdate.setHours(m[7]);","\t\t}","\t\tif (m[8]) {","\t\t\tdate.setMinutes(m[8]);","\t\t}","\t\tif (m[10]) {","\t\t\tdate.setSeconds(m[10]);","\t\t}","\t\tif (m[12]) {","\t\t\tdate.setMilliseconds(Number(\"0.\" + m[12]) * 1000);","\t\t}","\t\tfixDate(date, check);","\t}else{","\t\tdate.setUTCFullYear(","\t\t\tm[1],","\t\t\tm[3] ? m[3] - 1 : 0,","\t\t\tm[5] || 1","\t\t);","\t\tdate.setUTCHours(","\t\t\tm[7] || 0,","\t\t\tm[8] || 0,","\t\t\tm[10] || 0,","\t\t\tm[12] ? Number(\"0.\" + m[12]) * 1000 : 0","\t\t);","\t\tif (m[14]) {","\t\t\tvar offset = Number(m[16]) * 60 + (m[18] ? Number(m[18]) : 0);","\t\t\toffset *= m[15] == '-' ? 1 : -1;","\t\t\tdate = new Date(+date + (offset * 60 * 1000));","\t\t}","\t}","\treturn date;","}","","","function parseTime(s) { // returns minutes since start of day","\tif (typeof s == 'number') { // an hour","\t\treturn s * 60;","\t}","\tif (typeof s == 'object') { // a Date object","\t\treturn s.getHours() * 60 + s.getMinutes();","\t}","\tvar m = s.match(/(\\d+)(?::(\\d+))?\\s*(\\w+)?/);","\tif (m) {","\t\tvar h = parseInt(m[1], 10);","\t\tif (m[3]) {","\t\t\th %= 12;","\t\t\tif (m[3].toLowerCase().charAt(0) == 'p') {","\t\t\t\th += 12;","\t\t\t}","\t\t}","\t\treturn h * 60 + (m[2] ? parseInt(m[2], 10) : 0);","\t}","}","","","","/* Date Formatting","-----------------------------------------------------------------------------*/","// TODO: use same function formatDate(date, [date2], format, [options])","","","function formatDate(date, format, options) {","\treturn formatDates(date, null, format, options);","}","","","function formatDates(date1, date2, format, options) {","\toptions = options || defaults;","\tvar date = date1,","\t\totherDate = date2,","\t\ti, len = format.length, c,","\t\ti2, formatter,","\t\tres = '';","\tfor (i=0; i<len; i++) {","\t\tc = format.charAt(i);","\t\tif (c == \"'\") {","\t\t\tfor (i2=i+1; i2<len; i2++) {","\t\t\t\tif (format.charAt(i2) == \"'\") {","\t\t\t\t\tif (date) {","\t\t\t\t\t\tif (i2 == i+1) {","\t\t\t\t\t\t\tres += \"'\";","\t\t\t\t\t\t}else{","\t\t\t\t\t\t\tres += format.substring(i+1, i2);","\t\t\t\t\t\t}","\t\t\t\t\t\ti = i2;","\t\t\t\t\t}","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if (c == '(') {","\t\t\tfor (i2=i+1; i2<len; i2++) {","\t\t\t\tif (format.charAt(i2) == ')') {","\t\t\t\t\tvar subres = formatDate(date, format.substring(i+1, i2), options);","\t\t\t\t\tif (parseInt(subres.replace(/\\D/, ''), 10)) {","\t\t\t\t\t\tres += subres;","\t\t\t\t\t}","\t\t\t\t\ti = i2;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if (c == '[') {","\t\t\tfor (i2=i+1; i2<len; i2++) {","\t\t\t\tif (format.charAt(i2) == ']') {","\t\t\t\t\tvar subformat = format.substring(i+1, i2);","\t\t\t\t\tvar subres = formatDate(date, subformat, options);","\t\t\t\t\tif (subres != formatDate(otherDate, subformat, options)) {","\t\t\t\t\t\tres += subres;","\t\t\t\t\t}","\t\t\t\t\ti = i2;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t}","\t\telse if (c == '{') {","\t\t\tdate = date2;","\t\t\totherDate = date1;","\t\t}","\t\telse if (c == '}') {","\t\t\tdate = date1;","\t\t\totherDate = date2;","\t\t}","\t\telse {","\t\t\tfor (i2=len; i2>i; i2--) {","\t\t\t\tif (formatter = dateFormatters[format.substring(i, i2)]) {","\t\t\t\t\tif (date) {","\t\t\t\t\t\tres += formatter(date, options);","\t\t\t\t\t}","\t\t\t\t\ti = i2 - 1;","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t\tif (i2 == i) {","\t\t\t\tif (date) {","\t\t\t\t\tres += c;","\t\t\t\t}","\t\t\t}","\t\t}","\t}","\treturn res;","};","","","var dateFormatters = {","\ts\t: function(d)\t{ return d.getSeconds() },","\tss\t: function(d)\t{ return zeroPad(d.getSeconds()) },","\tm\t: function(d)\t{ return d.getMinutes() },","\tmm\t: function(d)\t{ return zeroPad(d.getMinutes()) },","\th\t: function(d)\t{ return d.getHours() % 12 || 12 },","\thh\t: function(d)\t{ return zeroPad(d.getHours() % 12 || 12) },","\tH\t: function(d)\t{ return d.getHours() },","\tHH\t: function(d)\t{ return zeroPad(d.getHours()) },","\td\t: function(d)\t{ return d.getDate() },","\tdd\t: function(d)\t{ return zeroPad(d.getDate()) },","\tddd\t: function(d,o)\t{ return o.dayNamesShort[d.getDay()] },","\tdddd: function(d,o)\t{ return o.dayNames[d.getDay()] },","\tM\t: function(d)\t{ return d.getMonth() + 1 },","\tMM\t: function(d)\t{ return zeroPad(d.getMonth() + 1) },","\tMMM\t: function(d,o)\t{ return o.monthNamesShort[d.getMonth()] },","\tMMMM: function(d,o)\t{ return o.monthNames[d.getMonth()] },","\tyy\t: function(d)\t{ return (d.getFullYear()+'').substring(2) },","\tyyyy: function(d)\t{ return d.getFullYear() },","\tt\t: function(d)\t{ return d.getHours() < 12 ? 'a' : 'p' },","\ttt\t: function(d)\t{ return d.getHours() < 12 ? 'am' : 'pm' },","\tT\t: function(d)\t{ return d.getHours() < 12 ? 'A' : 'P' },","\tTT\t: function(d)\t{ return d.getHours() < 12 ? 'AM' : 'PM' },","\tu\t: function(d)\t{ return formatDate(d, \"yyyy-MM-dd'T'HH:mm:ss'Z'\") },","\tS\t: function(d)\t{","\t\tvar date = d.getDate();","\t\tif (date > 10 && date < 20) {","\t\t\treturn 'th';","\t\t}","\t\treturn ['st', 'nd', 'rd'][date%10-1] || 'th';","\t},","\tw   : function(d, o) { // local","\t\treturn o.weekNumberCalculation(d);","\t},","\tW   : function(d) { // ISO","\t\treturn iso8601Week(d);","\t}","};","fc.dateFormatters = dateFormatters;","","","/* thanks jQuery UI (https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.datepicker.js)"," * "," * Set as calculateWeek to determine the week of the year based on the ISO 8601 definition."," * `date` - the date to get the week for"," * `number` - the number of the week within the year that contains this date"," */","function iso8601Week(date) {","\tvar time;","\tvar checkDate = new Date(date.getTime());","","\t// Find Thursday of this week starting on Monday","\tcheckDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));","","\ttime = checkDate.getTime();","\tcheckDate.setMonth(0); // Compare with Jan 1","\tcheckDate.setDate(1);","\treturn Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;","}","","",";;","","fc.applyAll = applyAll;","","","/* Event Date Math","-----------------------------------------------------------------------------*/","","","function exclEndDay(event) {","\tif (event.end) {","\t\treturn _exclEndDay(event.end, event.allDay);","\t}else{","\t\treturn addDays(cloneDate(event.start), 1);","\t}","}","","","function _exclEndDay(end, allDay) {","\tend = cloneDate(end);","\treturn allDay || end.getHours() || end.getMinutes() ? addDays(end, 1) : clearTime(end);","\t// why don't we check for seconds/ms too?","}","","","","/* Event Element Binding","-----------------------------------------------------------------------------*/","","","function lazySegBind(container, segs, bindHandlers) {","\tcontainer.unbind('mouseover').mouseover(function(ev) {","\t\tvar parent=ev.target, e,","\t\t\ti, seg;","\t\twhile (parent != this) {","\t\t\te = parent;","\t\t\tparent = parent.parentNode;","\t\t}","\t\tif ((i = e._fci) !== undefined) {","\t\t\te._fci = undefined;","\t\t\tseg = segs[i];","\t\t\tbindHandlers(seg.event, seg.element, seg);","\t\t\t$(ev.target).trigger(ev);","\t\t}","\t\tev.stopPropagation();","\t});","}","","","","/* Element Dimensions","-----------------------------------------------------------------------------*/","","","function setOuterWidth(element, width, includeMargins) {","\tfor (var i=0, e; i<element.length; i++) {","\t\te = $(element[i]);","\t\te.width(Math.max(0, width - hsides(e, includeMargins)));","\t}","}","","","function setOuterHeight(element, height, includeMargins) {","\tfor (var i=0, e; i<element.length; i++) {","\t\te = $(element[i]);","\t\te.height(Math.max(0, height - vsides(e, includeMargins)));","\t}","}","","","function hsides(element, includeMargins) {","\treturn hpadding(element) + hborders(element) + (includeMargins ? hmargins(element) : 0);","}","","","function hpadding(element) {","\treturn (parseFloat($.css(element[0], 'paddingLeft', true)) || 0) +","\t       (parseFloat($.css(element[0], 'paddingRight', true)) || 0);","}","","","function hmargins(element) {","\treturn (parseFloat($.css(element[0], 'marginLeft', true)) || 0) +","\t       (parseFloat($.css(element[0], 'marginRight', true)) || 0);","}","","","function hborders(element) {","\treturn (parseFloat($.css(element[0], 'borderLeftWidth', true)) || 0) +","\t       (parseFloat($.css(element[0], 'borderRightWidth', true)) || 0);","}","","","function vsides(element, includeMargins) {","\treturn vpadding(element) +  vborders(element) + (includeMargins ? vmargins(element) : 0);","}","","","function vpadding(element) {","\treturn (parseFloat($.css(element[0], 'paddingTop', true)) || 0) +","\t       (parseFloat($.css(element[0], 'paddingBottom', true)) || 0);","}","","","function vmargins(element) {","\treturn (parseFloat($.css(element[0], 'marginTop', true)) || 0) +","\t       (parseFloat($.css(element[0], 'marginBottom', true)) || 0);","}","","","function vborders(element) {","\treturn (parseFloat($.css(element[0], 'borderTopWidth', true)) || 0) +","\t       (parseFloat($.css(element[0], 'borderBottomWidth', true)) || 0);","}","","","","/* Misc Utils","-----------------------------------------------------------------------------*/","","","//TODO: arraySlice","//TODO: isFunction, grep ?","","","function noop() { }","","","function dateCompare(a, b) {","\treturn a - b;","}","","","function arrayMax(a) {","\treturn Math.max.apply(Math, a);","}","","","function zeroPad(n) {","\treturn (n < 10 ? '0' : '') + n;","}","","","function smartProperty(obj, name) { // get a camel-cased/namespaced property of an object","\tif (obj[name] !== undefined) {","\t\treturn obj[name];","\t}","\tvar parts = name.split(/(?=[A-Z])/),","\t\ti=parts.length-1, res;","\tfor (; i>=0; i--) {","\t\tres = obj[parts[i].toLowerCase()];","\t\tif (res !== undefined) {","\t\t\treturn res;","\t\t}","\t}","\treturn obj[''];","}","","","function htmlEscape(s) {","\treturn s.replace(/&/g, '&')","\t\t.replace(/</g, '<')","\t\t.replace(/>/g, '>')","\t\t.replace(/'/g, '\\'')","\t\t.replace(/\"/g, '\"')","\t\t.replace(/\\n/g, '<br />');","}","","","function disableTextSelection(element) {","\telement","\t\t.attr('unselectable', 'on')","\t\t.css('MozUserSelect', 'none')","\t\t.bind('selectstart.ui', function() { return false; });","}","","","/*","function enableTextSelection(element) {","\telement","\t\t.attr('unselectable', 'off')","\t\t.css('MozUserSelect', '')","\t\t.unbind('selectstart.ui');","}","*/","","","function markFirstLast(e) {","\te.children()","\t\t.removeClass('fc-first fc-last')","\t\t.filter(':first-child')","\t\t\t.addClass('fc-first')","\t\t.end()","\t\t.filter(':last-child')","\t\t\t.addClass('fc-last');","}","","","function setDayID(cell, date) {","\tcell.each(function(i, _cell) {","\t\t_cell.className = _cell.className.replace(/^fc-\\w*/, 'fc-' + dayIDs[date.getDay()]);","\t\t// TODO: make a way that doesn't rely on order of classes","\t});","}","","","function getSkinCss(event, opt) {","\tvar source = event.source || {};","\tvar eventColor = event.color;","\tvar sourceColor = source.color;","\tvar optionColor = opt('eventColor');","\tvar backgroundColor =","\t\tevent.backgroundColor ||","\t\teventColor ||","\t\tsource.backgroundColor ||","\t\tsourceColor ||","\t\topt('eventBackgroundColor') ||","\t\toptionColor;","\tvar borderColor =","\t\tevent.borderColor ||","\t\teventColor ||","\t\tsource.borderColor ||","\t\tsourceColor ||","\t\topt('eventBorderColor') ||","\t\toptionColor;","\tvar textColor =","\t\tevent.textColor ||","\t\tsource.textColor ||","\t\topt('eventTextColor');","\tvar statements = [];","\tif (backgroundColor) {","\t\tstatements.push('background-color:' + backgroundColor);","\t}","\tif (borderColor) {","\t\tstatements.push('border-color:' + borderColor);","\t}","\tif (textColor) {","\t\tstatements.push('color:' + textColor);","\t}","\treturn statements.join(';');","}","","","function applyAll(functions, thisObj, args) {","\tif ($.isFunction(functions)) {","\t\tfunctions = [ functions ];","\t}","\tif (functions) {","\t\tvar i;","\t\tvar ret;","\t\tfor (i=0; i<functions.length; i++) {","\t\t\tret = functions[i].apply(thisObj, args) || ret;","\t\t}","\t\treturn ret;","\t}","}","","","function firstDefined() {","\tfor (var i=0; i<arguments.length; i++) {","\t\tif (arguments[i] !== undefined) {","\t\t\treturn arguments[i];","\t\t}","\t}","}","","",";;","","fcViews.month = MonthView;","","function MonthView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tBasicView.call(t, element, calendar, 'month');","\tvar opt = t.opt;","\tvar renderBasic = t.renderBasic;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar getCellsPerWeek = t.getCellsPerWeek;","\tvar formatDate = calendar.formatDate;","\t","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddMonths(date, delta);","\t\t\tdate.setDate(1);","\t\t}","","\t\tvar firstDay = opt('firstDay');","","\t\tvar start = cloneDate(date, true);","\t\tstart.setDate(1);","","\t\tvar end = addMonths(cloneDate(start), 1);","","\t\tvar visStart = cloneDate(start);","\t\taddDays(visStart, -((visStart.getDay() - firstDay + 7) % 7));","\t\tskipHiddenDays(visStart);","","\t\tvar visEnd = cloneDate(end);","\t\taddDays(visEnd, (7 - visEnd.getDay() + firstDay) % 7);","\t\tskipHiddenDays(visEnd, -1, true);","","\t\tvar colCnt = getCellsPerWeek();","\t\tvar rowCnt = Math.round(dayDiff(visEnd, visStart) / 7); // should be no need for Math.round","","\t\tif (opt('weekMode') == 'fixed') {","\t\t\taddDays(visEnd, (6 - rowCnt) * 7); // add weeks to make up for it","\t\t\trowCnt = 6;","\t\t}","","\t\tt.title = formatDate(start, opt('titleFormat'));","","\t\tt.start = start;","\t\tt.end = end;","\t\tt.visStart = visStart;","\t\tt.visEnd = visEnd;","","\t\trenderBasic(rowCnt, colCnt, true);","\t}","\t","\t","}","",";;","","fcViews.basicWeek = BasicWeekView;","","function BasicWeekView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tBasicView.call(t, element, calendar, 'basicWeek');","\tvar opt = t.opt;","\tvar renderBasic = t.renderBasic;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar getCellsPerWeek = t.getCellsPerWeek;","\tvar formatDates = calendar.formatDates;","\t","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddDays(date, delta * 7);","\t\t}","","\t\tvar start = addDays(cloneDate(date), -((date.getDay() - opt('firstDay') + 7) % 7));","\t\tvar end = addDays(cloneDate(start), 7);","","\t\tvar visStart = cloneDate(start);","\t\tskipHiddenDays(visStart);","","\t\tvar visEnd = cloneDate(end);","\t\tskipHiddenDays(visEnd, -1, true);","","\t\tvar colCnt = getCellsPerWeek();","","\t\tt.start = start;","\t\tt.end = end;","\t\tt.visStart = visStart;","\t\tt.visEnd = visEnd;","","\t\tt.title = formatDates(","\t\t\tvisStart,","\t\t\taddDays(cloneDate(visEnd), -1),","\t\t\topt('titleFormat')","\t\t);","","\t\trenderBasic(1, colCnt, false);","\t}","\t","\t","}","",";;","","fcViews.basicDay = BasicDayView;","","","function BasicDayView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tBasicView.call(t, element, calendar, 'basicDay');","\tvar opt = t.opt;","\tvar renderBasic = t.renderBasic;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar formatDate = calendar.formatDate;","\t","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddDays(date, delta);","\t\t}","\t\tskipHiddenDays(date, delta < 0 ? -1 : 1);","","\t\tvar start = cloneDate(date, true);","\t\tvar end = addDays(cloneDate(start), 1);","","\t\tt.title = formatDate(date, opt('titleFormat'));","","\t\tt.start = t.visStart = start;","\t\tt.end = t.visEnd = end;","","\t\trenderBasic(1, 1, false);","\t}","\t","\t","}","",";;","","setDefaults({","\tweekMode: 'fixed'","});","","","function BasicView(element, calendar, viewName) {","\tvar t = this;","\t","\t","\t// exports","\tt.renderBasic = renderBasic;","\tt.setHeight = setHeight;","\tt.setWidth = setWidth;","\tt.renderDayOverlay = renderDayOverlay;","\tt.defaultSelectionEnd = defaultSelectionEnd;","\tt.renderSelection = renderSelection;","\tt.clearSelection = clearSelection;","\tt.reportDayClick = reportDayClick; // for selection (kinda hacky)","\tt.dragStart = dragStart;","\tt.dragStop = dragStop;","\tt.defaultEventEnd = defaultEventEnd;","\tt.getHoverListener = function() { return hoverListener };","\tt.colLeft = colLeft;","\tt.colRight = colRight;","\tt.colContentLeft = colContentLeft;","\tt.colContentRight = colContentRight;","\tt.getIsCellAllDay = function() { return true };","\tt.allDayRow = allDayRow;","\tt.getRowCnt = function() { return rowCnt };","\tt.getColCnt = function() { return colCnt };","\tt.getColWidth = function() { return colWidth };","\tt.getDaySegmentContainer = function() { return daySegmentContainer };","\t","\t","\t// imports","\tView.call(t, element, calendar, viewName);","\tOverlayManager.call(t);","\tSelectionManager.call(t);","\tBasicEventRenderer.call(t);","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar renderOverlay = t.renderOverlay;","\tvar clearOverlays = t.clearOverlays;","\tvar daySelectionMousedown = t.daySelectionMousedown;","\tvar cellToDate = t.cellToDate;","\tvar dateToCell = t.dateToCell;","\tvar rangeToSegments = t.rangeToSegments;","\tvar formatDate = calendar.formatDate;","\t","\t","\t// locals","\t","\tvar table;","\tvar head;","\tvar headCells;","\tvar body;","\tvar bodyRows;","\tvar bodyCells;","\tvar bodyFirstCells;","\tvar firstRowCellInners;","\tvar firstRowCellContentInners;","\tvar daySegmentContainer;","\t","\tvar viewWidth;","\tvar viewHeight;","\tvar colWidth;","\tvar weekNumberWidth;","\t","\tvar rowCnt, colCnt;","\tvar showNumbers;","\tvar coordinateGrid;","\tvar hoverListener;","\tvar colPositions;","\tvar colContentPositions;","\t","\tvar tm;","\tvar colFormat;","\tvar showWeekNumbers;","\tvar weekNumberTitle;","\tvar weekNumberFormat;","\t","\t","\t","\t/* Rendering","\t------------------------------------------------------------*/","\t","\t","\tdisableTextSelection(element.addClass('fc-grid'));","\t","\t","\tfunction renderBasic(_rowCnt, _colCnt, _showNumbers) {","\t\trowCnt = _rowCnt;","\t\tcolCnt = _colCnt;","\t\tshowNumbers = _showNumbers;","\t\tupdateOptions();","","\t\tif (!body) {","\t\t\tbuildEventContainer();","\t\t}","","\t\tbuildTable();","\t}","\t","\t","\tfunction updateOptions() {","\t\ttm = opt('theme') ? 'ui' : 'fc';","\t\tcolFormat = opt('columnFormat');","","\t\t// week # options. (TODO: bad, logic also in other views)","\t\tshowWeekNumbers = opt('weekNumbers');","\t\tweekNumberTitle = opt('weekNumberTitle');","\t\tif (opt('weekNumberCalculation') != 'iso') {","\t\t\tweekNumberFormat = \"w\";","\t\t}","\t\telse {","\t\t\tweekNumberFormat = \"W\";","\t\t}","\t}","\t","\t","\tfunction buildEventContainer() {","\t\tdaySegmentContainer =","\t\t\t$(\"<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>\")","\t\t\t\t.appendTo(element);","\t}","\t","\t","\tfunction buildTable() {","\t\tvar html = buildTableHTML();","","\t\tif (table) {","\t\t\ttable.remove();","\t\t}","\t\ttable = $(html).appendTo(element);","","\t\thead = table.find('thead');","\t\theadCells = head.find('.fc-day-header');","\t\tbody = table.find('tbody');","\t\tbodyRows = body.find('tr');","\t\tbodyCells = body.find('.fc-day');","\t\tbodyFirstCells = bodyRows.find('td:first-child');","","\t\tfirstRowCellInners = bodyRows.eq(0).find('.fc-day > div');","\t\tfirstRowCellContentInners = bodyRows.eq(0).find('.fc-day-content > div');","\t\t","\t\tmarkFirstLast(head.add(head.find('tr'))); // marks first+last tr/th's","\t\tmarkFirstLast(bodyRows); // marks first+last td's","\t\tbodyRows.eq(0).addClass('fc-first');","\t\tbodyRows.filter(':last').addClass('fc-last');","","\t\tbodyCells.each(function(i, _cell) {","\t\t\tvar date = cellToDate(","\t\t\t\tMath.floor(i / colCnt),","\t\t\t\ti % colCnt","\t\t\t);","\t\t\ttrigger('dayRender', t, date, $(_cell));","\t\t});","","\t\tdayBind(bodyCells);","\t}","","","","\t/* HTML Building","\t-----------------------------------------------------------*/","","","\tfunction buildTableHTML() {","\t\tvar html =","\t\t\t\"<table class='fc-border-separate' style='width:100%' cellspacing='0'>\" +","\t\t\tbuildHeadHTML() +","\t\t\tbuildBodyHTML() +","\t\t\t\"</table>\";","","\t\treturn html;","\t}","","","\tfunction buildHeadHTML() {","\t\tvar headerClass = tm + \"-widget-header\";","\t\tvar html = '';","\t\tvar col;","\t\tvar date;","","\t\thtml += \"<thead><tr>\";","","\t\tif (showWeekNumbers) {","\t\t\thtml +=","\t\t\t\t\"<th class='fc-week-number \" + headerClass + \"'>\" +","\t\t\t\thtmlEscape(weekNumberTitle) +","\t\t\t\t\"</th>\";","\t\t}","","\t\tfor (col=0; col<colCnt; col++) {","\t\t\tdate = cellToDate(0, col);","\t\t\thtml +=","\t\t\t\t\"<th class='fc-day-header fc-\" + dayIDs[date.getDay()] + \" \" + headerClass + \"'>\" +","\t\t\t\thtmlEscape(formatDate(date, colFormat)) +","\t\t\t\t\"</th>\";","\t\t}","","\t\thtml += \"</tr></thead>\";","","\t\treturn html;","\t}","","","\tfunction buildBodyHTML() {","\t\tvar contentClass = tm + \"-widget-content\";","\t\tvar html = '';","\t\tvar row;","\t\tvar col;","\t\tvar date;","","\t\thtml += \"<tbody>\";","","\t\tfor (row=0; row<rowCnt; row++) {","","\t\t\thtml += \"<tr class='fc-week'>\";","","\t\t\tif (showWeekNumbers) {","\t\t\t\tdate = cellToDate(row, 0);","\t\t\t\thtml +=","\t\t\t\t\t\"<td class='fc-week-number \" + contentClass + \"'>\" +","\t\t\t\t\t\"<div>\" +","\t\t\t\t\thtmlEscape(formatDate(date, weekNumberFormat)) +","\t\t\t\t\t\"</div>\" +","\t\t\t\t\t\"</td>\";","\t\t\t}","","\t\t\tfor (col=0; col<colCnt; col++) {","\t\t\t\tdate = cellToDate(row, col);","\t\t\t\thtml += buildCellHTML(date);","\t\t\t}","","\t\t\thtml += \"</tr>\";","\t\t}","","\t\thtml += \"</tbody>\";","","\t\treturn html;","\t}","","","\tfunction buildCellHTML(date) {","\t\tvar contentClass = tm + \"-widget-content\";","\t\tvar month = t.start.getMonth();","\t\tvar today = clearTime(new Date());","\t\tvar html = '';","\t\tvar classNames = [","\t\t\t'fc-day',","\t\t\t'fc-' + dayIDs[date.getDay()],","\t\t\tcontentClass","\t\t];","","\t\tif (date.getMonth() != month) {","\t\t\tclassNames.push('fc-other-month');","\t\t}","\t\tif (+date == +today) {","\t\t\tclassNames.push(","\t\t\t\t'fc-today',","\t\t\t\ttm + '-state-highlight'","\t\t\t);","\t\t}","\t\telse if (date < today) {","\t\t\tclassNames.push('fc-past');","\t\t}","\t\telse {","\t\t\tclassNames.push('fc-future');","\t\t}","","\t\thtml +=","\t\t\t\"<td\" +","\t\t\t\" class='\" + classNames.join(' ') + \"'\" +","\t\t\t\" data-date='\" + formatDate(date, 'yyyy-MM-dd') + \"'\" +","\t\t\t\">\" +","\t\t\t\"<div>\";","","\t\tif (showNumbers) {","\t\t\thtml += \"<div class='fc-day-number'>\" + date.getDate() + \"</div>\";","\t\t}","","\t\thtml +=","\t\t\t\"<div class='fc-day-content'>\" +","\t\t\t\"<div style='position:relative'> </div>\" +","\t\t\t\"</div>\" +","\t\t\t\"</div>\" +","\t\t\t\"</td>\";","","\t\treturn html;","\t}","","","","\t/* Dimensions","\t-----------------------------------------------------------*/","\t","\t","\tfunction setHeight(height) {","\t\tviewHeight = height;","\t\t","\t\tvar bodyHeight = viewHeight - head.height();","\t\tvar rowHeight;","\t\tvar rowHeightLast;","\t\tvar cell;","\t\t\t","\t\tif (opt('weekMode') == 'variable') {","\t\t\trowHeight = rowHeightLast = Math.floor(bodyHeight / (rowCnt==1 ? 2 : 6));","\t\t}else{","\t\t\trowHeight = Math.floor(bodyHeight / rowCnt);","\t\t\trowHeightLast = bodyHeight - rowHeight * (rowCnt-1);","\t\t}","\t\t","\t\tbodyFirstCells.each(function(i, _cell) {","\t\t\tif (i < rowCnt) {","\t\t\t\tcell = $(_cell);","\t\t\t\tcell.find('> div').css(","\t\t\t\t\t'min-height',","\t\t\t\t\t(i==rowCnt-1 ? rowHeightLast : rowHeight) - vsides(cell)","\t\t\t\t);","\t\t\t}","\t\t});","\t\t","\t}","\t","\t","\tfunction setWidth(width) {","\t\tviewWidth = width;","\t\tcolPositions.clear();","\t\tcolContentPositions.clear();","","\t\tweekNumberWidth = 0;","\t\tif (showWeekNumbers) {","\t\t\tweekNumberWidth = head.find('th.fc-week-number').outerWidth();","\t\t}","","\t\tcolWidth = Math.floor((viewWidth - weekNumberWidth) / colCnt);","\t\tsetOuterWidth(headCells.slice(0, -1), colWidth);","\t}","\t","\t","\t","\t/* Day clicking and binding","\t-----------------------------------------------------------*/","\t","\t","\tfunction dayBind(days) {","\t\tdays.click(dayClick)","\t\t\t.mousedown(daySelectionMousedown);","\t}","\t","\t","\tfunction dayClick(ev) {","\t\tif (!opt('selectable')) { // if selectable, SelectionManager will worry about dayClick","\t\t\tvar date = parseISO8601($(this).data('date'));","\t\t\ttrigger('dayClick', this, date, true, ev);","\t\t}","\t}","\t","\t","\t","\t/* Semi-transparent Overlay Helpers","\t------------------------------------------------------*/","\t// TODO: should be consolidated with AgendaView's methods","","","\tfunction renderDayOverlay(overlayStart, overlayEnd, refreshCoordinateGrid) { // overlayEnd is exclusive","","\t\tif (refreshCoordinateGrid) {","\t\t\tcoordinateGrid.build();","\t\t}","","\t\tvar segments = rangeToSegments(overlayStart, overlayEnd);","","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","\t\t\tdayBind(","\t\t\t\trenderCellOverlay(","\t\t\t\t\tsegment.row,","\t\t\t\t\tsegment.leftCol,","\t\t\t\t\tsegment.row,","\t\t\t\t\tsegment.rightCol","\t\t\t\t)","\t\t\t);","\t\t}","\t}","","\t","\tfunction renderCellOverlay(row0, col0, row1, col1) { // row1,col1 is inclusive","\t\tvar rect = coordinateGrid.rect(row0, col0, row1, col1, element);","\t\treturn renderOverlay(rect, element);","\t}","\t","\t","\t","\t/* Selection","\t-----------------------------------------------------------------------*/","\t","\t","\tfunction defaultSelectionEnd(startDate, allDay) {","\t\treturn cloneDate(startDate);","\t}","\t","\t","\tfunction renderSelection(startDate, endDate, allDay) {","\t\trenderDayOverlay(startDate, addDays(cloneDate(endDate), 1), true); // rebuild every time???","\t}","\t","\t","\tfunction clearSelection() {","\t\tclearOverlays();","\t}","\t","\t","\tfunction reportDayClick(date, allDay, ev) {","\t\tvar cell = dateToCell(date);","\t\tvar _element = bodyCells[cell.row*colCnt + cell.col];","\t\ttrigger('dayClick', _element, date, allDay, ev);","\t}","\t","\t","\t","\t/* External Dragging","\t-----------------------------------------------------------------------*/","\t","\t","\tfunction dragStart(_dragElement, ev, ui) {","\t\thoverListener.start(function(cell) {","\t\t\tclearOverlays();","\t\t\tif (cell) {","\t\t\t\trenderCellOverlay(cell.row, cell.col, cell.row, cell.col);","\t\t\t}","\t\t}, ev);","\t}","\t","\t","\tfunction dragStop(_dragElement, ev, ui) {","\t\tvar cell = hoverListener.stop();","\t\tclearOverlays();","\t\tif (cell) {","\t\t\tvar d = cellToDate(cell);","\t\t\ttrigger('drop', _dragElement, d, true, ev, ui);","\t\t}","\t}","\t","\t","\t","\t/* Utilities","\t--------------------------------------------------------*/","\t","\t","\tfunction defaultEventEnd(event) {","\t\treturn cloneDate(event.start);","\t}","\t","\t","\tcoordinateGrid = new CoordinateGrid(function(rows, cols) {","\t\tvar e, n, p;","\t\theadCells.each(function(i, _e) {","\t\t\te = $(_e);","\t\t\tn = e.offset().left;","\t\t\tif (i) {","\t\t\t\tp[1] = n;","\t\t\t}","\t\t\tp = [n];","\t\t\tcols[i] = p;","\t\t});","\t\tp[1] = n + e.outerWidth();","\t\tbodyRows.each(function(i, _e) {","\t\t\tif (i < rowCnt) {","\t\t\t\te = $(_e);","\t\t\t\tn = e.offset().top;","\t\t\t\tif (i) {","\t\t\t\t\tp[1] = n;","\t\t\t\t}","\t\t\t\tp = [n];","\t\t\t\trows[i] = p;","\t\t\t}","\t\t});","\t\tp[1] = n + e.outerHeight();","\t});","\t","\t","\thoverListener = new HoverListener(coordinateGrid);","\t","\tcolPositions = new HorizontalPositionCache(function(col) {","\t\treturn firstRowCellInners.eq(col);","\t});","","\tcolContentPositions = new HorizontalPositionCache(function(col) {","\t\treturn firstRowCellContentInners.eq(col);","\t});","","","\tfunction colLeft(col) {","\t\treturn colPositions.left(col);","\t}","","","\tfunction colRight(col) {","\t\treturn colPositions.right(col);","\t}","\t","\t","\tfunction colContentLeft(col) {","\t\treturn colContentPositions.left(col);","\t}","\t","\t","\tfunction colContentRight(col) {","\t\treturn colContentPositions.right(col);","\t}","\t","\t","\tfunction allDayRow(i) {","\t\treturn bodyRows.eq(i);","\t}","\t","}","",";;","","function BasicEventRenderer() {","\tvar t = this;","\t","\t","\t// exports","\tt.renderEvents = renderEvents;","\tt.clearEvents = clearEvents;","\t","","\t// imports","\tDayEventRenderer.call(t);","","\t","\tfunction renderEvents(events, modifiedEventId) {","\t\tt.renderDayEvents(events, modifiedEventId);","\t}","\t","\t","\tfunction clearEvents() {","\t\tt.getDaySegmentContainer().empty();","\t}","","","\t// TODO: have this class (and AgendaEventRenderer) be responsible for creating the event container div","","}","",";;","","fcViews.agendaWeek = AgendaWeekView;","","function AgendaWeekView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tAgendaView.call(t, element, calendar, 'agendaWeek');","\tvar opt = t.opt;","\tvar renderAgenda = t.renderAgenda;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar getCellsPerWeek = t.getCellsPerWeek;","\tvar formatDates = calendar.formatDates;","","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddDays(date, delta * 7);","\t\t}","","\t\tvar start = addDays(cloneDate(date), -((date.getDay() - opt('firstDay') + 7) % 7));","\t\tvar end = addDays(cloneDate(start), 7);","","\t\tvar visStart = cloneDate(start);","\t\tskipHiddenDays(visStart);","","\t\tvar visEnd = cloneDate(end);","\t\tskipHiddenDays(visEnd, -1, true);","","\t\tvar colCnt = getCellsPerWeek();","","\t\tt.title = formatDates(","\t\t\tvisStart,","\t\t\taddDays(cloneDate(visEnd), -1),","\t\t\topt('titleFormat')","\t\t);","","\t\tt.start = start;","\t\tt.end = end;","\t\tt.visStart = visStart;","\t\tt.visEnd = visEnd;","","\t\trenderAgenda(colCnt);","\t}","","}","",";;","","fcViews.agendaDay = AgendaDayView;","","","function AgendaDayView(element, calendar) {","\tvar t = this;","\t","\t","\t// exports","\tt.render = render;","\t","\t","\t// imports","\tAgendaView.call(t, element, calendar, 'agendaDay');","\tvar opt = t.opt;","\tvar renderAgenda = t.renderAgenda;","\tvar skipHiddenDays = t.skipHiddenDays;","\tvar formatDate = calendar.formatDate;","\t","\t","\tfunction render(date, delta) {","","\t\tif (delta) {","\t\t\taddDays(date, delta);","\t\t}","\t\tskipHiddenDays(date, delta < 0 ? -1 : 1);","","\t\tvar start = cloneDate(date, true);","\t\tvar end = addDays(cloneDate(start), 1);","","\t\tt.title = formatDate(date, opt('titleFormat'));","","\t\tt.start = t.visStart = start;","\t\tt.end = t.visEnd = end;","","\t\trenderAgenda(1);","\t}","\t","","}","",";;","","setDefaults({","\tallDaySlot: true,","\tallDayText: 'all-day',","\tfirstHour: 6,","\tslotMinutes: 30,","\tdefaultEventMinutes: 120,","\taxisFormat: 'h(:mm)tt',","\ttimeFormat: {","\t\tagenda: 'h:mm{ - h:mm}'","\t},","\tdragOpacity: {","\t\tagenda: .5","\t},","\tminTime: 0,","\tmaxTime: 24,","\tslotEventOverlap: true","});","","","// TODO: make it work in quirks mode (event corners, all-day height)","// TODO: test liquid width, especially in IE6","","","function AgendaView(element, calendar, viewName) {","\tvar t = this;","\t","\t","\t// exports","\tt.renderAgenda = renderAgenda;","\tt.setWidth = setWidth;","\tt.setHeight = setHeight;","\tt.afterRender = afterRender;","\tt.defaultEventEnd = defaultEventEnd;","\tt.timePosition = timePosition;","\tt.getIsCellAllDay = getIsCellAllDay;","\tt.allDayRow = getAllDayRow;","\tt.getCoordinateGrid = function() { return coordinateGrid }; // specifically for AgendaEventRenderer","\tt.getHoverListener = function() { return hoverListener };","\tt.colLeft = colLeft;","\tt.colRight = colRight;","\tt.colContentLeft = colContentLeft;","\tt.colContentRight = colContentRight;","\tt.getDaySegmentContainer = function() { return daySegmentContainer };","\tt.getSlotSegmentContainer = function() { return slotSegmentContainer };","\tt.getMinMinute = function() { return minMinute };","\tt.getMaxMinute = function() { return maxMinute };","\tt.getSlotContainer = function() { return slotContainer };","\tt.getRowCnt = function() { return 1 };","\tt.getColCnt = function() { return colCnt };","\tt.getColWidth = function() { return colWidth };","\tt.getSnapHeight = function() { return snapHeight };","\tt.getSnapMinutes = function() { return snapMinutes };","\tt.defaultSelectionEnd = defaultSelectionEnd;","\tt.renderDayOverlay = renderDayOverlay;","\tt.renderSelection = renderSelection;","\tt.clearSelection = clearSelection;","\tt.reportDayClick = reportDayClick; // selection mousedown hack","\tt.dragStart = dragStart;","\tt.dragStop = dragStop;","\t","\t","\t// imports","\tView.call(t, element, calendar, viewName);","\tOverlayManager.call(t);","\tSelectionManager.call(t);","\tAgendaEventRenderer.call(t);","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar renderOverlay = t.renderOverlay;","\tvar clearOverlays = t.clearOverlays;","\tvar reportSelection = t.reportSelection;","\tvar unselect = t.unselect;","\tvar daySelectionMousedown = t.daySelectionMousedown;","\tvar slotSegHtml = t.slotSegHtml;","\tvar cellToDate = t.cellToDate;","\tvar dateToCell = t.dateToCell;","\tvar rangeToSegments = t.rangeToSegments;","\tvar formatDate = calendar.formatDate;","\t","\t","\t// locals","\t","\tvar dayTable;","\tvar dayHead;","\tvar dayHeadCells;","\tvar dayBody;","\tvar dayBodyCells;","\tvar dayBodyCellInners;","\tvar dayBodyCellContentInners;","\tvar dayBodyFirstCell;","\tvar dayBodyFirstCellStretcher;","\tvar slotLayer;","\tvar daySegmentContainer;","\tvar allDayTable;","\tvar allDayRow;","\tvar slotScroller;","\tvar slotContainer;","\tvar slotSegmentContainer;","\tvar slotTable;","\tvar selectionHelper;","\t","\tvar viewWidth;","\tvar viewHeight;","\tvar axisWidth;","\tvar colWidth;","\tvar gutterWidth;","\tvar slotHeight; // TODO: what if slotHeight changes? (see issue 650)","","\tvar snapMinutes;","\tvar snapRatio; // ratio of number of \"selection\" slots to normal slots. (ex: 1, 2, 4)","\tvar snapHeight; // holds the pixel hight of a \"selection\" slot","\t","\tvar colCnt;","\tvar slotCnt;","\tvar coordinateGrid;","\tvar hoverListener;","\tvar colPositions;","\tvar colContentPositions;","\tvar slotTopCache = {};","\t","\tvar tm;","\tvar rtl;","\tvar minMinute, maxMinute;","\tvar colFormat;","\tvar showWeekNumbers;","\tvar weekNumberTitle;","\tvar weekNumberFormat;","\t","","\t","\t/* Rendering","\t-----------------------------------------------------------------------------*/","\t","\t","\tdisableTextSelection(element.addClass('fc-agenda'));","\t","\t","\tfunction renderAgenda(c) {","\t\tcolCnt = c;","\t\tupdateOptions();","","\t\tif (!dayTable) { // first time rendering?","\t\t\tbuildSkeleton(); // builds day table, slot area, events containers","\t\t}","\t\telse {","\t\t\tbuildDayTable(); // rebuilds day table","\t\t}","\t}","\t","\t","\tfunction updateOptions() {","","\t\ttm = opt('theme') ? 'ui' : 'fc';","\t\trtl = opt('isRTL')","\t\tminMinute = parseTime(opt('minTime'));","\t\tmaxMinute = parseTime(opt('maxTime'));","\t\tcolFormat = opt('columnFormat');","","\t\t// week # options. (TODO: bad, logic also in other views)","\t\tshowWeekNumbers = opt('weekNumbers');","\t\tweekNumberTitle = opt('weekNumberTitle');","\t\tif (opt('weekNumberCalculation') != 'iso') {","\t\t\tweekNumberFormat = \"w\";","\t\t}","\t\telse {","\t\t\tweekNumberFormat = \"W\";","\t\t}","","\t\tsnapMinutes = opt('snapMinutes') || opt('slotMinutes');","\t}","","","","\t/* Build DOM","\t-----------------------------------------------------------------------*/","","","\tfunction buildSkeleton() {","\t\tvar headerClass = tm + \"-widget-header\";","\t\tvar contentClass = tm + \"-widget-content\";","\t\tvar s;","\t\tvar d;","\t\tvar i;","\t\tvar maxd;","\t\tvar minutes;","\t\tvar slotNormal = opt('slotMinutes') % 15 == 0;","\t\t","\t\tbuildDayTable();","\t\t","\t\tslotLayer =","\t\t\t$(\"<div style='position:absolute;z-index:2;left:0;width:100%'/>\")","\t\t\t\t.appendTo(element);","\t\t\t\t","\t\tif (opt('allDaySlot')) {","\t\t","\t\t\tdaySegmentContainer =","\t\t\t\t$(\"<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>\")","\t\t\t\t\t.appendTo(slotLayer);","\t\t","\t\t\ts =","\t\t\t\t\"<table style='width:100%' class='fc-agenda-allday' cellspacing='0'>\" +","\t\t\t\t\"<tr>\" +","\t\t\t\t\"<th class='\" + headerClass + \" fc-agenda-axis'>\" + opt('allDayText') + \"</th>\" +","\t\t\t\t\"<td>\" +","\t\t\t\t\"<div class='fc-day-content'><div style='position:relative'/></div>\" +","\t\t\t\t\"</td>\" +","\t\t\t\t\"<th class='\" + headerClass + \" fc-agenda-gutter'> </th>\" +","\t\t\t\t\"</tr>\" +","\t\t\t\t\"</table>\";","\t\t\tallDayTable = $(s).appendTo(slotLayer);","\t\t\tallDayRow = allDayTable.find('tr');","\t\t\t","\t\t\tdayBind(allDayRow.find('td'));","\t\t\t","\t\t\tslotLayer.append(","\t\t\t\t\"<div class='fc-agenda-divider \" + headerClass + \"'>\" +","\t\t\t\t\"<div class='fc-agenda-divider-inner'/>\" +","\t\t\t\t\"</div>\"","\t\t\t);","\t\t\t","\t\t}else{","\t\t","\t\t\tdaySegmentContainer = $([]); // in jQuery 1.4, we can just do $()","\t\t","\t\t}","\t\t","\t\tslotScroller =","\t\t\t$(\"<div style='position:absolute;width:100%;overflow-x:hidden;overflow-y:auto'/>\")","\t\t\t\t.appendTo(slotLayer);","\t\t\t\t","\t\tslotContainer =","\t\t\t$(\"<div style='position:relative;width:100%;overflow:hidden'/>\")","\t\t\t\t.appendTo(slotScroller);","\t\t\t\t","\t\tslotSegmentContainer =","\t\t\t$(\"<div class='fc-event-container' style='position:absolute;z-index:8;top:0;left:0'/>\")","\t\t\t\t.appendTo(slotContainer);","\t\t","\t\ts =","\t\t\t\"<table class='fc-agenda-slots' style='width:100%' cellspacing='0'>\" +","\t\t\t\"<tbody>\";","\t\td = zeroDate();","\t\tmaxd = addMinutes(cloneDate(d), maxMinute);","\t\taddMinutes(d, minMinute);","\t\tslotCnt = 0;","\t\tfor (i=0; d < maxd; i++) {","\t\t\tminutes = d.getMinutes();","\t\t\ts +=","\t\t\t\t\"<tr class='fc-slot\" + i + ' ' + (!minutes ? '' : 'fc-minor') + \"'>\" +","\t\t\t\t\"<th class='fc-agenda-axis \" + headerClass + \"'>\" +","\t\t\t\t((!slotNormal || !minutes) ? formatDate(d, opt('axisFormat')) : ' ') +","\t\t\t\t\"</th>\" +","\t\t\t\t\"<td class='\" + contentClass + \"'>\" +","\t\t\t\t\"<div style='position:relative'> </div>\" +","\t\t\t\t\"</td>\" +","\t\t\t\t\"</tr>\";","\t\t\taddMinutes(d, opt('slotMinutes'));","\t\t\tslotCnt++;","\t\t}","\t\ts +=","\t\t\t\"</tbody>\" +","\t\t\t\"</table>\";","\t\tslotTable = $(s).appendTo(slotContainer);","\t\t","\t\tslotBind(slotTable.find('td'));","\t}","","","","\t/* Build Day Table","\t-----------------------------------------------------------------------*/","","","\tfunction buildDayTable() {","\t\tvar html = buildDayTableHTML();","","\t\tif (dayTable) {","\t\t\tdayTable.remove();","\t\t}","\t\tdayTable = $(html).appendTo(element);","","\t\tdayHead = dayTable.find('thead');","\t\tdayHeadCells = dayHead.find('th').slice(1, -1); // exclude gutter","\t\tdayBody = dayTable.find('tbody');","\t\tdayBodyCells = dayBody.find('td').slice(0, -1); // exclude gutter","\t\tdayBodyCellInners = dayBodyCells.find('> div');","\t\tdayBodyCellContentInners = dayBodyCells.find('.fc-day-content > div');","","\t\tdayBodyFirstCell = dayBodyCells.eq(0);","\t\tdayBodyFirstCellStretcher = dayBodyCellInners.eq(0);","\t\t","\t\tmarkFirstLast(dayHead.add(dayHead.find('tr')));","\t\tmarkFirstLast(dayBody.add(dayBody.find('tr')));","","\t\t// TODO: now that we rebuild the cells every time, we should call dayRender","\t}","","","\tfunction buildDayTableHTML() {","\t\tvar html =","\t\t\t\"<table style='width:100%' class='fc-agenda-days fc-border-separate' cellspacing='0'>\" +","\t\t\tbuildDayTableHeadHTML() +","\t\t\tbuildDayTableBodyHTML() +","\t\t\t\"</table>\";","","\t\treturn html;","\t}","","","\tfunction buildDayTableHeadHTML() {","\t\tvar headerClass = tm + \"-widget-header\";","\t\tvar date;","\t\tvar html = '';","\t\tvar weekText;","\t\tvar col;","","\t\thtml +=","\t\t\t\"<thead>\" +","\t\t\t\"<tr>\";","","\t\tif (showWeekNumbers) {","\t\t\tdate = cellToDate(0, 0);","\t\t\tweekText = formatDate(date, weekNumberFormat);","\t\t\tif (rtl) {","\t\t\t\tweekText += weekNumberTitle;","\t\t\t}","\t\t\telse {","\t\t\t\tweekText = weekNumberTitle + weekText;","\t\t\t}","\t\t\thtml +=","\t\t\t\t\"<th class='fc-agenda-axis fc-week-number \" + headerClass + \"'>\" +","\t\t\t\thtmlEscape(weekText) +","\t\t\t\t\"</th>\";","\t\t}","\t\telse {","\t\t\thtml += \"<th class='fc-agenda-axis \" + headerClass + \"'> </th>\";","\t\t}","","\t\tfor (col=0; col<colCnt; col++) {","\t\t\tdate = cellToDate(0, col);","\t\t\thtml +=","\t\t\t\t\"<th class='fc-\" + dayIDs[date.getDay()] + \" fc-col\" + col + ' ' + headerClass + \"'>\" +","\t\t\t\thtmlEscape(formatDate(date, colFormat)) +","\t\t\t\t\"</th>\";","\t\t}","","\t\thtml +=","\t\t\t\"<th class='fc-agenda-gutter \" + headerClass + \"'> </th>\" +","\t\t\t\"</tr>\" +","\t\t\t\"</thead>\";","","\t\treturn html;","\t}","","","\tfunction buildDayTableBodyHTML() {","\t\tvar headerClass = tm + \"-widget-header\"; // TODO: make these when updateOptions() called","\t\tvar contentClass = tm + \"-widget-content\";","\t\tvar date;","\t\tvar today = clearTime(new Date());","\t\tvar col;","\t\tvar cellsHTML;","\t\tvar cellHTML;","\t\tvar classNames;","\t\tvar html = '';","","\t\thtml +=","\t\t\t\"<tbody>\" +","\t\t\t\"<tr>\" +","\t\t\t\"<th class='fc-agenda-axis \" + headerClass + \"'> </th>\";","","\t\tcellsHTML = '';","","\t\tfor (col=0; col<colCnt; col++) {","","\t\t\tdate = cellToDate(0, col);","","\t\t\tclassNames = [","\t\t\t\t'fc-col' + col,","\t\t\t\t'fc-' + dayIDs[date.getDay()],","\t\t\t\tcontentClass","\t\t\t];","\t\t\tif (+date == +today) {","\t\t\t\tclassNames.push(","\t\t\t\t\ttm + '-state-highlight',","\t\t\t\t\t'fc-today'","\t\t\t\t);","\t\t\t}","\t\t\telse if (date < today) {","\t\t\t\tclassNames.push('fc-past');","\t\t\t}","\t\t\telse {","\t\t\t\tclassNames.push('fc-future');","\t\t\t}","","\t\t\tcellHTML =","\t\t\t\t\"<td class='\" + classNames.join(' ') + \"'>\" +","\t\t\t\t\"<div>\" +","\t\t\t\t\"<div class='fc-day-content'>\" +","\t\t\t\t\"<div style='position:relative'> </div>\" +","\t\t\t\t\"</div>\" +","\t\t\t\t\"</div>\" +","\t\t\t\t\"</td>\";","","\t\t\tcellsHTML += cellHTML;","\t\t}","","\t\thtml += cellsHTML;","\t\thtml +=","\t\t\t\"<td class='fc-agenda-gutter \" + contentClass + \"'> </td>\" +","\t\t\t\"</tr>\" +","\t\t\t\"</tbody>\";","","\t\treturn html;","\t}","","","\t// TODO: data-date on the cells","","\t","\t","\t/* Dimensions","\t-----------------------------------------------------------------------*/","","\t","\tfunction setHeight(height) {","\t\tif (height === undefined) {","\t\t\theight = viewHeight;","\t\t}","\t\tviewHeight = height;","\t\tslotTopCache = {};","\t","\t\tvar headHeight = dayBody.position().top;","\t\tvar allDayHeight = slotScroller.position().top; // including divider","\t\tvar bodyHeight = Math.min( // total body height, including borders","\t\t\theight - headHeight,   // when scrollbars","\t\t\tslotTable.height() + allDayHeight + 1 // when no scrollbars. +1 for bottom border","\t\t);","","\t\tdayBodyFirstCellStretcher","\t\t\t.height(bodyHeight - vsides(dayBodyFirstCell));","\t\t","\t\tslotLayer.css('top', headHeight);","\t\t","\t\tslotScroller.height(bodyHeight - allDayHeight - 1);","\t\t","\t\t// the stylesheet guarantees that the first row has no border.","\t\t// this allows .height() to work well cross-browser.","\t\tslotHeight = slotTable.find('tr:first').height() + 1; // +1 for bottom border","","\t\tsnapRatio = opt('slotMinutes') / snapMinutes;","\t\tsnapHeight = slotHeight / snapRatio;","\t}","\t","\t","\tfunction setWidth(width) {","\t\tviewWidth = width;","\t\tcolPositions.clear();","\t\tcolContentPositions.clear();","","\t\tvar axisFirstCells = dayHead.find('th:first');","\t\tif (allDayTable) {","\t\t\taxisFirstCells = axisFirstCells.add(allDayTable.find('th:first'));","\t\t}","\t\taxisFirstCells = axisFirstCells.add(slotTable.find('th:first'));","\t\t","\t\taxisWidth = 0;","\t\tsetOuterWidth(","\t\t\taxisFirstCells","\t\t\t\t.width('')","\t\t\t\t.each(function(i, _cell) {","\t\t\t\t\taxisWidth = Math.max(axisWidth, $(_cell).outerWidth());","\t\t\t\t}),","\t\t\taxisWidth","\t\t);","\t\t","\t\tvar gutterCells = dayTable.find('.fc-agenda-gutter');","\t\tif (allDayTable) {","\t\t\tgutterCells = gutterCells.add(allDayTable.find('th.fc-agenda-gutter'));","\t\t}","","\t\tvar slotTableWidth = slotScroller[0].clientWidth; // needs to be done after axisWidth (for IE7)","\t\t","\t\tgutterWidth = slotScroller.width() - slotTableWidth;","\t\tif (gutterWidth) {","\t\t\tsetOuterWidth(gutterCells, gutterWidth);","\t\t\tgutterCells","\t\t\t\t.show()","\t\t\t\t.prev()","\t\t\t\t.removeClass('fc-last');","\t\t}else{","\t\t\tgutterCells","\t\t\t\t.hide()","\t\t\t\t.prev()","\t\t\t\t.addClass('fc-last');","\t\t}","\t\t","\t\tcolWidth = Math.floor((slotTableWidth - axisWidth) / colCnt);","\t\tsetOuterWidth(dayHeadCells.slice(0, -1), colWidth);","\t}","\t","","","\t/* Scrolling","\t-----------------------------------------------------------------------*/","","","\tfunction resetScroll() {","\t\tvar d0 = zeroDate();","\t\tvar scrollDate = cloneDate(d0);","\t\tscrollDate.setHours(opt('firstHour'));","\t\tvar top = timePosition(d0, scrollDate) + 1; // +1 for the border","\t\tfunction scroll() {","\t\t\tslotScroller.scrollTop(top);","\t\t}","\t\tscroll();","\t\tsetTimeout(scroll, 0); // overrides any previous scroll state made by the browser","\t}","","","\tfunction afterRender() { // after the view has been freshly rendered and sized","\t\tresetScroll();","\t}","\t","\t","\t","\t/* Slot/Day clicking and binding","\t-----------------------------------------------------------------------*/","\t","","\tfunction dayBind(cells) {","\t\tcells.click(slotClick)","\t\t\t.mousedown(daySelectionMousedown);","\t}","","","\tfunction slotBind(cells) {","\t\tcells.click(slotClick)","\t\t\t.mousedown(slotSelectionMousedown);","\t}","\t","\t","\tfunction slotClick(ev) {","\t\tif (!opt('selectable')) { // if selectable, SelectionManager will worry about dayClick","\t\t\tvar col = Math.min(colCnt-1, Math.floor((ev.pageX - dayTable.offset().left - axisWidth) / colWidth));","\t\t\tvar date = cellToDate(0, col);","\t\t\tvar rowMatch = this.parentNode.className.match(/fc-slot(\\d+)/); // TODO: maybe use data","\t\t\tif (rowMatch) {","\t\t\t\tvar mins = parseInt(rowMatch[1]) * opt('slotMinutes');","\t\t\t\tvar hours = Math.floor(mins/60);","\t\t\t\tdate.setHours(hours);","\t\t\t\tdate.setMinutes(mins%60 + minMinute);","\t\t\t\ttrigger('dayClick', dayBodyCells[col], date, false, ev);","\t\t\t}else{","\t\t\t\ttrigger('dayClick', dayBodyCells[col], date, true, ev);","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Semi-transparent Overlay Helpers","\t-----------------------------------------------------*/","\t// TODO: should be consolidated with BasicView's methods","","","\tfunction renderDayOverlay(overlayStart, overlayEnd, refreshCoordinateGrid) { // overlayEnd is exclusive","","\t\tif (refreshCoordinateGrid) {","\t\t\tcoordinateGrid.build();","\t\t}","","\t\tvar segments = rangeToSegments(overlayStart, overlayEnd);","","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","\t\t\tdayBind(","\t\t\t\trenderCellOverlay(","\t\t\t\t\tsegment.row,","\t\t\t\t\tsegment.leftCol,","\t\t\t\t\tsegment.row,","\t\t\t\t\tsegment.rightCol","\t\t\t\t)","\t\t\t);","\t\t}","\t}","\t","\t","\tfunction renderCellOverlay(row0, col0, row1, col1) { // only for all-day?","\t\tvar rect = coordinateGrid.rect(row0, col0, row1, col1, slotLayer);","\t\treturn renderOverlay(rect, slotLayer);","\t}","\t","","\tfunction renderSlotOverlay(overlayStart, overlayEnd) {","\t\tfor (var i=0; i<colCnt; i++) {","\t\t\tvar dayStart = cellToDate(0, i);","\t\t\tvar dayEnd = addDays(cloneDate(dayStart), 1);","\t\t\tvar stretchStart = new Date(Math.max(dayStart, overlayStart));","\t\t\tvar stretchEnd = new Date(Math.min(dayEnd, overlayEnd));","\t\t\tif (stretchStart < stretchEnd) {","\t\t\t\tvar rect = coordinateGrid.rect(0, i, 0, i, slotContainer); // only use it for horizontal coords","\t\t\t\tvar top = timePosition(dayStart, stretchStart);","\t\t\t\tvar bottom = timePosition(dayStart, stretchEnd);","\t\t\t\trect.top = top;","\t\t\t\trect.height = bottom - top;","\t\t\t\tslotBind(","\t\t\t\t\trenderOverlay(rect, slotContainer)","\t\t\t\t);","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Coordinate Utilities","\t-----------------------------------------------------------------------------*/","\t","\t","\tcoordinateGrid = new CoordinateGrid(function(rows, cols) {","\t\tvar e, n, p;","\t\tdayHeadCells.each(function(i, _e) {","\t\t\te = $(_e);","\t\t\tn = e.offset().left;","\t\t\tif (i) {","\t\t\t\tp[1] = n;","\t\t\t}","\t\t\tp = [n];","\t\t\tcols[i] = p;","\t\t});","\t\tp[1] = n + e.outerWidth();","\t\tif (opt('allDaySlot')) {","\t\t\te = allDayRow;","\t\t\tn = e.offset().top;","\t\t\trows[0] = [n, n+e.outerHeight()];","\t\t}","\t\tvar slotTableTop = slotContainer.offset().top;","\t\tvar slotScrollerTop = slotScroller.offset().top;","\t\tvar slotScrollerBottom = slotScrollerTop + slotScroller.outerHeight();","\t\tfunction constrain(n) {","\t\t\treturn Math.max(slotScrollerTop, Math.min(slotScrollerBottom, n));","\t\t}","\t\tfor (var i=0; i<slotCnt*snapRatio; i++) { // adapt slot count to increased/decreased selection slot count","\t\t\trows.push([","\t\t\t\tconstrain(slotTableTop + snapHeight*i),","\t\t\t\tconstrain(slotTableTop + snapHeight*(i+1))","\t\t\t]);","\t\t}","\t});","\t","\t","\thoverListener = new HoverListener(coordinateGrid);","\t","\tcolPositions = new HorizontalPositionCache(function(col) {","\t\treturn dayBodyCellInners.eq(col);","\t});","\t","\tcolContentPositions = new HorizontalPositionCache(function(col) {","\t\treturn dayBodyCellContentInners.eq(col);","\t});","\t","\t","\tfunction colLeft(col) {","\t\treturn colPositions.left(col);","\t}","","","\tfunction colContentLeft(col) {","\t\treturn colContentPositions.left(col);","\t}","","","\tfunction colRight(col) {","\t\treturn colPositions.right(col);","\t}","\t","\t","\tfunction colContentRight(col) {","\t\treturn colContentPositions.right(col);","\t}","","","\tfunction getIsCellAllDay(cell) {","\t\treturn opt('allDaySlot') && !cell.row;","\t}","","","\tfunction realCellToDate(cell) { // ugh \"real\" ... but blame it on our abuse of the \"cell\" system","\t\tvar d = cellToDate(0, cell.col);","\t\tvar slotIndex = cell.row;","\t\tif (opt('allDaySlot')) {","\t\t\tslotIndex--;","\t\t}","\t\tif (slotIndex >= 0) {","\t\t\taddMinutes(d, minMinute + slotIndex * snapMinutes);","\t\t}","\t\treturn d;","\t}","\t","\t","\t// get the Y coordinate of the given time on the given day (both Date objects)","\tfunction timePosition(day, time) { // both date objects. day holds 00:00 of current day","\t\tday = cloneDate(day, true);","\t\tif (time < addMinutes(cloneDate(day), minMinute)) {","\t\t\treturn 0;","\t\t}","\t\tif (time >= addMinutes(cloneDate(day), maxMinute)) {","\t\t\treturn slotTable.height();","\t\t}","\t\tvar slotMinutes = opt('slotMinutes'),","\t\t\tminutes = time.getHours()*60 + time.getMinutes() - minMinute,","\t\t\tslotI = Math.floor(minutes / slotMinutes),","\t\t\tslotTop = slotTopCache[slotI];","\t\tif (slotTop === undefined) {","\t\t\tslotTop = slotTopCache[slotI] =","\t\t\t\tslotTable.find('tr').eq(slotI).find('td div')[0].offsetTop;","\t\t\t\t// .eq() is faster than \":eq()\" selector","\t\t\t\t// [0].offsetTop is faster than .position().top (do we really need this optimization?)","\t\t\t\t// a better optimization would be to cache all these divs","\t\t}","\t\treturn Math.max(0, Math.round(","\t\t\tslotTop - 1 + slotHeight * ((minutes % slotMinutes) / slotMinutes)","\t\t));","\t}","\t","\t","\tfunction getAllDayRow(index) {","\t\treturn allDayRow;","\t}","\t","\t","\tfunction defaultEventEnd(event) {","\t\tvar start = cloneDate(event.start);","\t\tif (event.allDay) {","\t\t\treturn start;","\t\t}","\t\treturn addMinutes(start, opt('defaultEventMinutes'));","\t}","\t","\t","\t","\t/* Selection","\t---------------------------------------------------------------------------------*/","\t","\t","\tfunction defaultSelectionEnd(startDate, allDay) {","\t\tif (allDay) {","\t\t\treturn cloneDate(startDate);","\t\t}","\t\treturn addMinutes(cloneDate(startDate), opt('slotMinutes'));","\t}","\t","\t","\tfunction renderSelection(startDate, endDate, allDay) { // only for all-day","\t\tif (allDay) {","\t\t\tif (opt('allDaySlot')) {","\t\t\t\trenderDayOverlay(startDate, addDays(cloneDate(endDate), 1), true);","\t\t\t}","\t\t}else{","\t\t\trenderSlotSelection(startDate, endDate);","\t\t}","\t}","\t","\t","\tfunction renderSlotSelection(startDate, endDate) {","\t\tvar helperOption = opt('selectHelper');","\t\tcoordinateGrid.build();","\t\tif (helperOption) {","\t\t\tvar col = dateToCell(startDate).col;","\t\t\tif (col >= 0 && col < colCnt) { // only works when times are on same day","\t\t\t\tvar rect = coordinateGrid.rect(0, col, 0, col, slotContainer); // only for horizontal coords","\t\t\t\tvar top = timePosition(startDate, startDate);","\t\t\t\tvar bottom = timePosition(startDate, endDate);","\t\t\t\tif (bottom > top) { // protect against selections that are entirely before or after visible range","\t\t\t\t\trect.top = top;","\t\t\t\t\trect.height = bottom - top;","\t\t\t\t\trect.left += 2;","\t\t\t\t\trect.width -= 5;","\t\t\t\t\tif ($.isFunction(helperOption)) {","\t\t\t\t\t\tvar helperRes = helperOption(startDate, endDate);","\t\t\t\t\t\tif (helperRes) {","\t\t\t\t\t\t\trect.position = 'absolute';","\t\t\t\t\t\t\tselectionHelper = $(helperRes)","\t\t\t\t\t\t\t\t.css(rect)","\t\t\t\t\t\t\t\t.appendTo(slotContainer);","\t\t\t\t\t\t}","\t\t\t\t\t}else{","\t\t\t\t\t\trect.isStart = true; // conside rect a \"seg\" now","\t\t\t\t\t\trect.isEnd = true;   //","\t\t\t\t\t\tselectionHelper = $(slotSegHtml(","\t\t\t\t\t\t\t{","\t\t\t\t\t\t\t\ttitle: '',","\t\t\t\t\t\t\t\tstart: startDate,","\t\t\t\t\t\t\t\tend: endDate,","\t\t\t\t\t\t\t\tclassName: ['fc-select-helper'],","\t\t\t\t\t\t\t\teditable: false","\t\t\t\t\t\t\t},","\t\t\t\t\t\t\trect","\t\t\t\t\t\t));","\t\t\t\t\t\tselectionHelper.css('opacity', opt('dragOpacity'));","\t\t\t\t\t}","\t\t\t\t\tif (selectionHelper) {","\t\t\t\t\t\tslotBind(selectionHelper);","\t\t\t\t\t\tslotContainer.append(selectionHelper);","\t\t\t\t\t\tsetOuterWidth(selectionHelper, rect.width, true); // needs to be after appended","\t\t\t\t\t\tsetOuterHeight(selectionHelper, rect.height, true);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}else{","\t\t\trenderSlotOverlay(startDate, endDate);","\t\t}","\t}","\t","\t","\tfunction clearSelection() {","\t\tclearOverlays();","\t\tif (selectionHelper) {","\t\t\tselectionHelper.remove();","\t\t\tselectionHelper = null;","\t\t}","\t}","\t","\t","\tfunction slotSelectionMousedown(ev) {","\t\tif (ev.which == 1 && opt('selectable')) { // ev.which==1 means left mouse button","\t\t\tunselect(ev);","\t\t\tvar dates;","\t\t\thoverListener.start(function(cell, origCell) {","\t\t\t\tclearSelection();","\t\t\t\tif (cell && cell.col == origCell.col && !getIsCellAllDay(cell)) {","\t\t\t\t\tvar d1 = realCellToDate(origCell);","\t\t\t\t\tvar d2 = realCellToDate(cell);","\t\t\t\t\tdates = [","\t\t\t\t\t\td1,","\t\t\t\t\t\taddMinutes(cloneDate(d1), snapMinutes), // calculate minutes depending on selection slot minutes ","\t\t\t\t\t\td2,","\t\t\t\t\t\taddMinutes(cloneDate(d2), snapMinutes)","\t\t\t\t\t].sort(dateCompare);","\t\t\t\t\trenderSlotSelection(dates[0], dates[3]);","\t\t\t\t}else{","\t\t\t\t\tdates = null;","\t\t\t\t}","\t\t\t}, ev);","\t\t\t$(document).one('mouseup', function(ev) {","\t\t\t\thoverListener.stop();","\t\t\t\tif (dates) {","\t\t\t\t\tif (+dates[0] == +dates[1]) {","\t\t\t\t\t\treportDayClick(dates[0], false, ev);","\t\t\t\t\t}","\t\t\t\t\treportSelection(dates[0], dates[3], false, ev);","\t\t\t\t}","\t\t\t});","\t\t}","\t}","","","\tfunction reportDayClick(date, allDay, ev) {","\t\ttrigger('dayClick', dayBodyCells[dateToCell(date).col], date, allDay, ev);","\t}","\t","\t","\t","\t/* External Dragging","\t--------------------------------------------------------------------------------*/","\t","\t","\tfunction dragStart(_dragElement, ev, ui) {","\t\thoverListener.start(function(cell) {","\t\t\tclearOverlays();","\t\t\tif (cell) {","\t\t\t\tif (getIsCellAllDay(cell)) {","\t\t\t\t\trenderCellOverlay(cell.row, cell.col, cell.row, cell.col);","\t\t\t\t}else{","\t\t\t\t\tvar d1 = realCellToDate(cell);","\t\t\t\t\tvar d2 = addMinutes(cloneDate(d1), opt('defaultEventMinutes'));","\t\t\t\t\trenderSlotOverlay(d1, d2);","\t\t\t\t}","\t\t\t}","\t\t}, ev);","\t}","\t","\t","\tfunction dragStop(_dragElement, ev, ui) {","\t\tvar cell = hoverListener.stop();","\t\tclearOverlays();","\t\tif (cell) {","\t\t\ttrigger('drop', _dragElement, realCellToDate(cell), getIsCellAllDay(cell), ev, ui);","\t\t}","\t}","\t","","}","",";;","","function AgendaEventRenderer() {","\tvar t = this;","\t","\t","\t// exports","\tt.renderEvents = renderEvents;","\tt.clearEvents = clearEvents;","\tt.slotSegHtml = slotSegHtml;","\t","\t","\t// imports","\tDayEventRenderer.call(t);","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar isEventDraggable = t.isEventDraggable;","\tvar isEventResizable = t.isEventResizable;","\tvar eventEnd = t.eventEnd;","\tvar eventElementHandlers = t.eventElementHandlers;","\tvar setHeight = t.setHeight;","\tvar getDaySegmentContainer = t.getDaySegmentContainer;","\tvar getSlotSegmentContainer = t.getSlotSegmentContainer;","\tvar getHoverListener = t.getHoverListener;","\tvar getMaxMinute = t.getMaxMinute;","\tvar getMinMinute = t.getMinMinute;","\tvar timePosition = t.timePosition;","\tvar getIsCellAllDay = t.getIsCellAllDay;","\tvar colContentLeft = t.colContentLeft;","\tvar colContentRight = t.colContentRight;","\tvar cellToDate = t.cellToDate;","\tvar getColCnt = t.getColCnt;","\tvar getColWidth = t.getColWidth;","\tvar getSnapHeight = t.getSnapHeight;","\tvar getSnapMinutes = t.getSnapMinutes;","\tvar getSlotContainer = t.getSlotContainer;","\tvar reportEventElement = t.reportEventElement;","\tvar showEvents = t.showEvents;","\tvar hideEvents = t.hideEvents;","\tvar eventDrop = t.eventDrop;","\tvar eventResize = t.eventResize;","\tvar renderDayOverlay = t.renderDayOverlay;","\tvar clearOverlays = t.clearOverlays;","\tvar renderDayEvents = t.renderDayEvents;","\tvar calendar = t.calendar;","\tvar formatDate = calendar.formatDate;","\tvar formatDates = calendar.formatDates;","","","\t// overrides","\tt.draggableDayEvent = draggableDayEvent;","","\t","\t","\t/* Rendering","\t----------------------------------------------------------------------------*/","\t","","\tfunction renderEvents(events, modifiedEventId) {","\t\tvar i, len=events.length,","\t\t\tdayEvents=[],","\t\t\tslotEvents=[];","\t\tfor (i=0; i<len; i++) {","\t\t\tif (events[i].allDay) {","\t\t\t\tdayEvents.push(events[i]);","\t\t\t}else{","\t\t\t\tslotEvents.push(events[i]);","\t\t\t}","\t\t}","","\t\tif (opt('allDaySlot')) {","\t\t\trenderDayEvents(dayEvents, modifiedEventId);","\t\t\tsetHeight(); // no params means set to viewHeight","\t\t}","","\t\trenderSlotSegs(compileSlotSegs(slotEvents), modifiedEventId);","\t}","\t","\t","\tfunction clearEvents() {","\t\tgetDaySegmentContainer().empty();","\t\tgetSlotSegmentContainer().empty();","\t}","","\t","\tfunction compileSlotSegs(events) {","\t\tvar colCnt = getColCnt(),","\t\t\tminMinute = getMinMinute(),","\t\t\tmaxMinute = getMaxMinute(),","\t\t\td,","\t\t\tvisEventEnds = $.map(events, slotEventEnd),","\t\t\ti,","\t\t\tj, seg,","\t\t\tcolSegs,","\t\t\tsegs = [];","","\t\tfor (i=0; i<colCnt; i++) {","","\t\t\td = cellToDate(0, i);","\t\t\taddMinutes(d, minMinute);","","\t\t\tcolSegs = sliceSegs(","\t\t\t\tevents,","\t\t\t\tvisEventEnds,","\t\t\t\td,","\t\t\t\taddMinutes(cloneDate(d), maxMinute-minMinute)","\t\t\t);","","\t\t\tcolSegs = placeSlotSegs(colSegs); // returns a new order","","\t\t\tfor (j=0; j<colSegs.length; j++) {","\t\t\t\tseg = colSegs[j];","\t\t\t\tseg.col = i;","\t\t\t\tsegs.push(seg);","\t\t\t}","\t\t}","","\t\treturn segs;","\t}","","","\tfunction sliceSegs(events, visEventEnds, start, end) {","\t\tvar segs = [],","\t\t\ti, len=events.length, event,","\t\t\teventStart, eventEnd,","\t\t\tsegStart, segEnd,","\t\t\tisStart, isEnd;","\t\tfor (i=0; i<len; i++) {","\t\t\tevent = events[i];","\t\t\teventStart = event.start;","\t\t\teventEnd = visEventEnds[i];","\t\t\tif (eventEnd > start && eventStart < end) {","\t\t\t\tif (eventStart < start) {","\t\t\t\t\tsegStart = cloneDate(start);","\t\t\t\t\tisStart = false;","\t\t\t\t}else{","\t\t\t\t\tsegStart = eventStart;","\t\t\t\t\tisStart = true;","\t\t\t\t}","\t\t\t\tif (eventEnd > end) {","\t\t\t\t\tsegEnd = cloneDate(end);","\t\t\t\t\tisEnd = false;","\t\t\t\t}else{","\t\t\t\t\tsegEnd = eventEnd;","\t\t\t\t\tisEnd = true;","\t\t\t\t}","\t\t\t\tsegs.push({","\t\t\t\t\tevent: event,","\t\t\t\t\tstart: segStart,","\t\t\t\t\tend: segEnd,","\t\t\t\t\tisStart: isStart,","\t\t\t\t\tisEnd: isEnd","\t\t\t\t});","\t\t\t}","\t\t}","\t\treturn segs.sort(compareSlotSegs);","\t}","","","\tfunction slotEventEnd(event) {","\t\tif (event.end) {","\t\t\treturn cloneDate(event.end);","\t\t}else{","\t\t\treturn addMinutes(cloneDate(event.start), opt('defaultEventMinutes'));","\t\t}","\t}","\t","\t","\t// renders events in the 'time slots' at the bottom","\t// TODO: when we refactor this, when user returns `false` eventRender, don't have empty space","\t// TODO: refactor will include using pixels to detect collisions instead of dates (handy for seg cmp)","\t","\tfunction renderSlotSegs(segs, modifiedEventId) {","\t","\t\tvar i, segCnt=segs.length, seg,","\t\t\tevent,","\t\t\ttop,","\t\t\tbottom,","\t\t\tcolumnLeft,","\t\t\tcolumnRight,","\t\t\tcolumnWidth,","\t\t\twidth,","\t\t\tleft,","\t\t\tright,","\t\t\thtml = '',","\t\t\teventElements,","\t\t\teventElement,","\t\t\ttriggerRes,","\t\t\ttitleElement,","\t\t\theight,","\t\t\tslotSegmentContainer = getSlotSegmentContainer(),","\t\t\tisRTL = opt('isRTL');","\t\t\t","\t\t// calculate position/dimensions, create html","\t\tfor (i=0; i<segCnt; i++) {","\t\t\tseg = segs[i];","\t\t\tevent = seg.event;","\t\t\ttop = timePosition(seg.start, seg.start);","\t\t\tbottom = timePosition(seg.start, seg.end);","\t\t\tcolumnLeft = colContentLeft(seg.col);","\t\t\tcolumnRight = colContentRight(seg.col);","\t\t\tcolumnWidth = columnRight - columnLeft;","","\t\t\t// shave off space on right near scrollbars (2.5%)","\t\t\t// TODO: move this to CSS somehow","\t\t\tcolumnRight -= columnWidth * .025;","\t\t\tcolumnWidth = columnRight - columnLeft;","","\t\t\twidth = columnWidth * (seg.forwardCoord - seg.backwardCoord);","","\t\t\tif (opt('slotEventOverlap')) {","\t\t\t\t// double the width while making sure resize handle is visible","\t\t\t\t// (assumed to be 20px wide)","\t\t\t\twidth = Math.max(","\t\t\t\t\t(width - (20/2)) * 2,","\t\t\t\t\twidth // narrow columns will want to make the segment smaller than","\t\t\t\t\t\t// the natural width. don't allow it","\t\t\t\t);","\t\t\t}","","\t\t\tif (isRTL) {","\t\t\t\tright = columnRight - seg.backwardCoord * columnWidth;","\t\t\t\tleft = right - width;","\t\t\t}","\t\t\telse {","\t\t\t\tleft = columnLeft + seg.backwardCoord * columnWidth;","\t\t\t\tright = left + width;","\t\t\t}","","\t\t\t// make sure horizontal coordinates are in bounds","\t\t\tleft = Math.max(left, columnLeft);","\t\t\tright = Math.min(right, columnRight);","\t\t\twidth = right - left;","","\t\t\tseg.top = top;","\t\t\tseg.left = left;","\t\t\tseg.outerWidth = width;","\t\t\tseg.outerHeight = bottom - top;","\t\t\thtml += slotSegHtml(event, seg);","\t\t}","","\t\tslotSegmentContainer[0].innerHTML = html; // faster than html()","\t\teventElements = slotSegmentContainer.children();","\t\t","\t\t// retrieve elements, run through eventRender callback, bind event handlers","\t\tfor (i=0; i<segCnt; i++) {","\t\t\tseg = segs[i];","\t\t\tevent = seg.event;","\t\t\teventElement = $(eventElements[i]); // faster than eq()","\t\t\ttriggerRes = trigger('eventRender', event, event, eventElement);","\t\t\tif (triggerRes === false) {","\t\t\t\teventElement.remove();","\t\t\t}else{","\t\t\t\tif (triggerRes && triggerRes !== true) {","\t\t\t\t\teventElement.remove();","\t\t\t\t\teventElement = $(triggerRes)","\t\t\t\t\t\t.css({","\t\t\t\t\t\t\tposition: 'absolute',","\t\t\t\t\t\t\ttop: seg.top,","\t\t\t\t\t\t\tleft: seg.left","\t\t\t\t\t\t})","\t\t\t\t\t\t.appendTo(slotSegmentContainer);","\t\t\t\t}","\t\t\t\tseg.element = eventElement;","\t\t\t\tif (event._id === modifiedEventId) {","\t\t\t\t\tbindSlotSeg(event, eventElement, seg);","\t\t\t\t}else{","\t\t\t\t\teventElement[0]._fci = i; // for lazySegBind","\t\t\t\t}","\t\t\t\treportEventElement(event, eventElement);","\t\t\t}","\t\t}","\t\t","\t\tlazySegBind(slotSegmentContainer, segs, bindSlotSeg);","\t\t","\t\t// record event sides and title positions","\t\tfor (i=0; i<segCnt; i++) {","\t\t\tseg = segs[i];","\t\t\tif (eventElement = seg.element) {","\t\t\t\tseg.vsides = vsides(eventElement, true);","\t\t\t\tseg.hsides = hsides(eventElement, true);","\t\t\t\ttitleElement = eventElement.find('.fc-event-title');","\t\t\t\tif (titleElement.length) {","\t\t\t\t\tseg.contentTop = titleElement[0].offsetTop;","\t\t\t\t}","\t\t\t}","\t\t}","\t\t","\t\t// set all positions/dimensions at once","\t\tfor (i=0; i<segCnt; i++) {","\t\t\tseg = segs[i];","\t\t\tif (eventElement = seg.element) {","\t\t\t\teventElement[0].style.width = Math.max(0, seg.outerWidth - seg.hsides) + 'px';","\t\t\t\theight = Math.max(0, seg.outerHeight - seg.vsides);","\t\t\t\teventElement[0].style.height = height + 'px';","\t\t\t\tevent = seg.event;","\t\t\t\tif (seg.contentTop !== undefined && height - seg.contentTop < 10) {","\t\t\t\t\t// not enough room for title, put it in the time (TODO: maybe make both display:inline instead)","\t\t\t\t\teventElement.find('div.fc-event-time')","\t\t\t\t\t\t.text(formatDate(event.start, opt('timeFormat')) + ' - ' + event.title);","\t\t\t\t\teventElement.find('div.fc-event-title')","\t\t\t\t\t\t.remove();","\t\t\t\t}","\t\t\t\ttrigger('eventAfterRender', event, event, eventElement);","\t\t\t}","\t\t}","\t\t\t\t\t","\t}","\t","\t","\tfunction slotSegHtml(event, seg) {","\t\tvar html = \"<\";","\t\tvar url = event.url;","\t\tvar skinCss = getSkinCss(event, opt);","\t\tvar classes = ['fc-event', 'fc-event-vert'];","\t\tif (isEventDraggable(event)) {","\t\t\tclasses.push('fc-event-draggable');","\t\t}","\t\tif (seg.isStart) {","\t\t\tclasses.push('fc-event-start');","\t\t}","\t\tif (seg.isEnd) {","\t\t\tclasses.push('fc-event-end');","\t\t}","\t\tclasses = classes.concat(event.className);","\t\tif (event.source) {","\t\t\tclasses = classes.concat(event.source.className || []);","\t\t}","\t\tif (url) {","\t\t\thtml += \"a href='\" + htmlEscape(event.url) + \"'\";","\t\t}else{","\t\t\thtml += \"div\";","\t\t}","\t\thtml +=","\t\t\t\" class='\" + classes.join(' ') + \"'\" +","\t\t\t\" style=\" +","\t\t\t\t\"'\" +","\t\t\t\t\"position:absolute;\" +","\t\t\t\t\"top:\" + seg.top + \"px;\" +","\t\t\t\t\"left:\" + seg.left + \"px;\" +","\t\t\t\tskinCss +","\t\t\t\t\"'\" +","\t\t\t\">\" +","\t\t\t\"<div class='fc-event-inner'>\" +","\t\t\t\"<div class='fc-event-time'>\" +","\t\t\thtmlEscape(formatDates(event.start, event.end, opt('timeFormat'))) +","\t\t\t\"</div>\" +","\t\t\t\"<div class='fc-event-title'>\" +","\t\t\thtmlEscape(event.title || '') +","\t\t\t\"</div>\" +","\t\t\t\"</div>\" +","\t\t\t\"<div class='fc-event-bg'></div>\";","\t\tif (seg.isEnd && isEventResizable(event)) {","\t\t\thtml +=","\t\t\t\t\"<div class='ui-resizable-handle ui-resizable-s'>=</div>\";","\t\t}","\t\thtml +=","\t\t\t\"</\" + (url ? \"a\" : \"div\") + \">\";","\t\treturn html;","\t}","\t","\t","\tfunction bindSlotSeg(event, eventElement, seg) {","\t\tvar timeElement = eventElement.find('div.fc-event-time');","\t\tif (isEventDraggable(event)) {","\t\t\tdraggableSlotEvent(event, eventElement, timeElement);","\t\t}","\t\tif (seg.isEnd && isEventResizable(event)) {","\t\t\tresizableSlotEvent(event, eventElement, timeElement);","\t\t}","\t\teventElementHandlers(event, eventElement);","\t}","\t","\t","\t","\t/* Dragging","\t-----------------------------------------------------------------------------------*/","\t","\t","\t// when event starts out FULL-DAY","\t// overrides DayEventRenderer's version because it needs to account for dragging elements","\t// to and from the slot area.","\t","\tfunction draggableDayEvent(event, eventElement, seg) {","\t\tvar isStart = seg.isStart;","\t\tvar origWidth;","\t\tvar revert;","\t\tvar allDay = true;","\t\tvar dayDelta;","\t\tvar hoverListener = getHoverListener();","\t\tvar colWidth = getColWidth();","\t\tvar snapHeight = getSnapHeight();","\t\tvar snapMinutes = getSnapMinutes();","\t\tvar minMinute = getMinMinute();","\t\teventElement.draggable({","\t\t\topacity: opt('dragOpacity', 'month'), // use whatever the month view was using","\t\t\trevertDuration: opt('dragRevertDuration'),","\t\t\tstart: function(ev, ui) {","\t\t\t\ttrigger('eventDragStart', eventElement, event, ev, ui);","\t\t\t\thideEvents(event, eventElement);","\t\t\t\torigWidth = eventElement.width();","\t\t\t\thoverListener.start(function(cell, origCell) {","\t\t\t\t\tclearOverlays();","\t\t\t\t\tif (cell) {","\t\t\t\t\t\trevert = false;","\t\t\t\t\t\tvar origDate = cellToDate(0, origCell.col);","\t\t\t\t\t\tvar date = cellToDate(0, cell.col);","\t\t\t\t\t\tdayDelta = dayDiff(date, origDate);","\t\t\t\t\t\tif (!cell.row) {","\t\t\t\t\t\t\t// on full-days","\t\t\t\t\t\t\trenderDayOverlay(","\t\t\t\t\t\t\t\taddDays(cloneDate(event.start), dayDelta),","\t\t\t\t\t\t\t\taddDays(exclEndDay(event), dayDelta)","\t\t\t\t\t\t\t);","\t\t\t\t\t\t\tresetElement();","\t\t\t\t\t\t}else{","\t\t\t\t\t\t\t// mouse is over bottom slots","\t\t\t\t\t\t\tif (isStart) {","\t\t\t\t\t\t\t\tif (allDay) {","\t\t\t\t\t\t\t\t\t// convert event to temporary slot-event","\t\t\t\t\t\t\t\t\teventElement.width(colWidth - 10); // don't use entire width","\t\t\t\t\t\t\t\t\tsetOuterHeight(","\t\t\t\t\t\t\t\t\t\teventElement,","\t\t\t\t\t\t\t\t\t\tsnapHeight * Math.round(","\t\t\t\t\t\t\t\t\t\t\t(event.end ? ((event.end - event.start) / MINUTE_MS) : opt('defaultEventMinutes')) /","\t\t\t\t\t\t\t\t\t\t\t\tsnapMinutes","\t\t\t\t\t\t\t\t\t\t)","\t\t\t\t\t\t\t\t\t);","\t\t\t\t\t\t\t\t\teventElement.draggable('option', 'grid', [colWidth, 1]);","\t\t\t\t\t\t\t\t\tallDay = false;","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t}else{","\t\t\t\t\t\t\t\trevert = true;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t\trevert = revert || (allDay && !dayDelta);","\t\t\t\t\t}else{","\t\t\t\t\t\tresetElement();","\t\t\t\t\t\trevert = true;","\t\t\t\t\t}","\t\t\t\t\teventElement.draggable('option', 'revert', revert);","\t\t\t\t}, ev, 'drag');","\t\t\t},","\t\t\tstop: function(ev, ui) {","\t\t\t\thoverListener.stop();","\t\t\t\tclearOverlays();","\t\t\t\ttrigger('eventDragStop', eventElement, event, ev, ui);","\t\t\t\tif (revert) {","\t\t\t\t\t// hasn't moved or is out of bounds (draggable has already reverted)","\t\t\t\t\tresetElement();","\t\t\t\t\teventElement.css('filter', ''); // clear IE opacity side-effects","\t\t\t\t\tshowEvents(event, eventElement);","\t\t\t\t}else{","\t\t\t\t\t// changed!","\t\t\t\t\tvar minuteDelta = 0;","\t\t\t\t\tif (!allDay) {","\t\t\t\t\t\tminuteDelta = Math.round((eventElement.offset().top - getSlotContainer().offset().top) / snapHeight)","\t\t\t\t\t\t\t* snapMinutes","\t\t\t\t\t\t\t+ minMinute","\t\t\t\t\t\t\t- (event.start.getHours() * 60 + event.start.getMinutes());","\t\t\t\t\t}","\t\t\t\t\teventDrop(this, event, dayDelta, minuteDelta, allDay, ev, ui);","\t\t\t\t}","\t\t\t}","\t\t});","\t\tfunction resetElement() {","\t\t\tif (!allDay) {","\t\t\t\teventElement","\t\t\t\t\t.width(origWidth)","\t\t\t\t\t.height('')","\t\t\t\t\t.draggable('option', 'grid', null);","\t\t\t\tallDay = true;","\t\t\t}","\t\t}","\t}","\t","\t","\t// when event starts out IN TIMESLOTS","\t","\tfunction draggableSlotEvent(event, eventElement, timeElement) {","\t\tvar coordinateGrid = t.getCoordinateGrid();","\t\tvar colCnt = getColCnt();","\t\tvar colWidth = getColWidth();","\t\tvar snapHeight = getSnapHeight();","\t\tvar snapMinutes = getSnapMinutes();","","\t\t// states","\t\tvar origPosition; // original position of the element, not the mouse","\t\tvar origCell;","\t\tvar isInBounds, prevIsInBounds;","\t\tvar isAllDay, prevIsAllDay;","\t\tvar colDelta, prevColDelta;","\t\tvar dayDelta; // derived from colDelta","\t\tvar minuteDelta, prevMinuteDelta;","","\t\teventElement.draggable({","\t\t\tscroll: false,","\t\t\tgrid: [ colWidth, snapHeight ],","\t\t\taxis: colCnt==1 ? 'y' : false,","\t\t\topacity: opt('dragOpacity'),","\t\t\trevertDuration: opt('dragRevertDuration'),","\t\t\tstart: function(ev, ui) {","","\t\t\t\ttrigger('eventDragStart', eventElement, event, ev, ui);","\t\t\t\thideEvents(event, eventElement);","","\t\t\t\tcoordinateGrid.build();","","\t\t\t\t// initialize states","\t\t\t\torigPosition = eventElement.position();","\t\t\t\torigCell = coordinateGrid.cell(ev.pageX, ev.pageY);","\t\t\t\tisInBounds = prevIsInBounds = true;","\t\t\t\tisAllDay = prevIsAllDay = getIsCellAllDay(origCell);","\t\t\t\tcolDelta = prevColDelta = 0;","\t\t\t\tdayDelta = 0;","\t\t\t\tminuteDelta = prevMinuteDelta = 0;","","\t\t\t},","\t\t\tdrag: function(ev, ui) {","","\t\t\t\t// NOTE: this `cell` value is only useful for determining in-bounds and all-day.","\t\t\t\t// Bad for anything else due to the discrepancy between the mouse position and the","\t\t\t\t// element position while snapping. (problem revealed in PR #55)","\t\t\t\t//","\t\t\t\t// PS- the problem exists for draggableDayEvent() when dragging an all-day event to a slot event.","\t\t\t\t// We should overhaul the dragging system and stop relying on jQuery UI.","\t\t\t\tvar cell = coordinateGrid.cell(ev.pageX, ev.pageY);","","\t\t\t\t// update states","\t\t\t\tisInBounds = !!cell;","\t\t\t\tif (isInBounds) {","\t\t\t\t\tisAllDay = getIsCellAllDay(cell);","","\t\t\t\t\t// calculate column delta","\t\t\t\t\tcolDelta = Math.round((ui.position.left - origPosition.left) / colWidth);","\t\t\t\t\tif (colDelta != prevColDelta) {","\t\t\t\t\t\t// calculate the day delta based off of the original clicked column and the column delta","\t\t\t\t\t\tvar origDate = cellToDate(0, origCell.col);","\t\t\t\t\t\tvar col = origCell.col + colDelta;","\t\t\t\t\t\tcol = Math.max(0, col);","\t\t\t\t\t\tcol = Math.min(colCnt-1, col);","\t\t\t\t\t\tvar date = cellToDate(0, col);","\t\t\t\t\t\tdayDelta = dayDiff(date, origDate);","\t\t\t\t\t}","","\t\t\t\t\t// calculate minute delta (only if over slots)","\t\t\t\t\tif (!isAllDay) {","\t\t\t\t\t\tminuteDelta = Math.round((ui.position.top - origPosition.top) / snapHeight) * snapMinutes;","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\t// any state changes?","\t\t\t\tif (","\t\t\t\t\tisInBounds != prevIsInBounds ||","\t\t\t\t\tisAllDay != prevIsAllDay ||","\t\t\t\t\tcolDelta != prevColDelta ||","\t\t\t\t\tminuteDelta != prevMinuteDelta","\t\t\t\t) {","","\t\t\t\t\tupdateUI();","","\t\t\t\t\t// update previous states for next time","\t\t\t\t\tprevIsInBounds = isInBounds;","\t\t\t\t\tprevIsAllDay = isAllDay;","\t\t\t\t\tprevColDelta = colDelta;","\t\t\t\t\tprevMinuteDelta = minuteDelta;","\t\t\t\t}","","\t\t\t\t// if out-of-bounds, revert when done, and vice versa.","\t\t\t\teventElement.draggable('option', 'revert', !isInBounds);","","\t\t\t},","\t\t\tstop: function(ev, ui) {","","\t\t\t\tclearOverlays();","\t\t\t\ttrigger('eventDragStop', eventElement, event, ev, ui);","","\t\t\t\tif (isInBounds && (isAllDay || dayDelta || minuteDelta)) { // changed!","\t\t\t\t\teventDrop(this, event, dayDelta, isAllDay ? 0 : minuteDelta, isAllDay, ev, ui);","\t\t\t\t}","\t\t\t\telse { // either no change or out-of-bounds (draggable has already reverted)","","\t\t\t\t\t// reset states for next time, and for updateUI()","\t\t\t\t\tisInBounds = true;","\t\t\t\t\tisAllDay = false;","\t\t\t\t\tcolDelta = 0;","\t\t\t\t\tdayDelta = 0;","\t\t\t\t\tminuteDelta = 0;","","\t\t\t\t\tupdateUI();","\t\t\t\t\teventElement.css('filter', ''); // clear IE opacity side-effects","","\t\t\t\t\t// sometimes fast drags make event revert to wrong position, so reset.","\t\t\t\t\t// also, if we dragged the element out of the area because of snapping,","\t\t\t\t\t// but the *mouse* is still in bounds, we need to reset the position.","\t\t\t\t\teventElement.css(origPosition);","","\t\t\t\t\tshowEvents(event, eventElement);","\t\t\t\t}","\t\t\t}","\t\t});","","\t\tfunction updateUI() {","\t\t\tclearOverlays();","\t\t\tif (isInBounds) {","\t\t\t\tif (isAllDay) {","\t\t\t\t\ttimeElement.hide();","\t\t\t\t\teventElement.draggable('option', 'grid', null); // disable grid snapping","\t\t\t\t\trenderDayOverlay(","\t\t\t\t\t\taddDays(cloneDate(event.start), dayDelta),","\t\t\t\t\t\taddDays(exclEndDay(event), dayDelta)","\t\t\t\t\t);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tupdateTimeText(minuteDelta);","\t\t\t\t\ttimeElement.css('display', ''); // show() was causing display=inline","\t\t\t\t\teventElement.draggable('option', 'grid', [colWidth, snapHeight]); // re-enable grid snapping","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tfunction updateTimeText(minuteDelta) {","\t\t\tvar newStart = addMinutes(cloneDate(event.start), minuteDelta);","\t\t\tvar newEnd;","\t\t\tif (event.end) {","\t\t\t\tnewEnd = addMinutes(cloneDate(event.end), minuteDelta);","\t\t\t}","\t\t\ttimeElement.text(formatDates(newStart, newEnd, opt('timeFormat')));","\t\t}","","\t}","\t","\t","\t","\t/* Resizing","\t--------------------------------------------------------------------------------------*/","\t","\t","\tfunction resizableSlotEvent(event, eventElement, timeElement) {","\t\tvar snapDelta, prevSnapDelta;","\t\tvar snapHeight = getSnapHeight();","\t\tvar snapMinutes = getSnapMinutes();","\t\teventElement.resizable({","\t\t\thandles: {","\t\t\t\ts: '.ui-resizable-handle'","\t\t\t},","\t\t\tgrid: snapHeight,","\t\t\tstart: function(ev, ui) {","\t\t\t\tsnapDelta = prevSnapDelta = 0;","\t\t\t\thideEvents(event, eventElement);","\t\t\t\ttrigger('eventResizeStart', this, event, ev, ui);","\t\t\t},","\t\t\tresize: function(ev, ui) {","\t\t\t\t// don't rely on ui.size.height, doesn't take grid into account","\t\t\t\tsnapDelta = Math.round((Math.max(snapHeight, eventElement.height()) - ui.originalSize.height) / snapHeight);","\t\t\t\tif (snapDelta != prevSnapDelta) {","\t\t\t\t\ttimeElement.text(","\t\t\t\t\t\tformatDates(","\t\t\t\t\t\t\tevent.start,","\t\t\t\t\t\t\t(!snapDelta && !event.end) ? null : // no change, so don't display time range","\t\t\t\t\t\t\t\taddMinutes(eventEnd(event), snapMinutes*snapDelta),","\t\t\t\t\t\t\topt('timeFormat')","\t\t\t\t\t\t)","\t\t\t\t\t);","\t\t\t\t\tprevSnapDelta = snapDelta;","\t\t\t\t}","\t\t\t},","\t\t\tstop: function(ev, ui) {","\t\t\t\ttrigger('eventResizeStop', this, event, ev, ui);","\t\t\t\tif (snapDelta) {","\t\t\t\t\teventResize(this, event, 0, snapMinutes*snapDelta, ev, ui);","\t\t\t\t}else{","\t\t\t\t\tshowEvents(event, eventElement);","\t\t\t\t\t// BUG: if event was really short, need to put title back in span","\t\t\t\t}","\t\t\t}","\t\t});","\t}","\t","","}","","","","/* Agenda Event Segment Utilities","-----------------------------------------------------------------------------*/","","","// Sets the seg.backwardCoord and seg.forwardCoord on each segment and returns a new","// list in the order they should be placed into the DOM (an implicit z-index).","function placeSlotSegs(segs) {","\tvar levels = buildSlotSegLevels(segs);","\tvar level0 = levels[0];","\tvar i;","","\tcomputeForwardSlotSegs(levels);","","\tif (level0) {","","\t\tfor (i=0; i<level0.length; i++) {","\t\t\tcomputeSlotSegPressures(level0[i]);","\t\t}","","\t\tfor (i=0; i<level0.length; i++) {","\t\t\tcomputeSlotSegCoords(level0[i], 0, 0);","\t\t}","\t}","","\treturn flattenSlotSegLevels(levels);","}","","","// Builds an array of segments \"levels\". The first level will be the leftmost tier of segments","// if the calendar is left-to-right, or the rightmost if the calendar is right-to-left.","function buildSlotSegLevels(segs) {","\tvar levels = [];","\tvar i, seg;","\tvar j;","","\tfor (i=0; i<segs.length; i++) {","\t\tseg = segs[i];","","\t\t// go through all the levels and stop on the first level where there are no collisions","\t\tfor (j=0; j<levels.length; j++) {","\t\t\tif (!computeSlotSegCollisions(seg, levels[j]).length) {","\t\t\t\tbreak;","\t\t\t}","\t\t}","","\t\t(levels[j] || (levels[j] = [])).push(seg);","\t}","","\treturn levels;","}","","","// For every segment, figure out the other segments that are in subsequent","// levels that also occupy the same vertical space. Accumulate in seg.forwardSegs","function computeForwardSlotSegs(levels) {","\tvar i, level;","\tvar j, seg;","\tvar k;","","\tfor (i=0; i<levels.length; i++) {","\t\tlevel = levels[i];","","\t\tfor (j=0; j<level.length; j++) {","\t\t\tseg = level[j];","","\t\t\tseg.forwardSegs = [];","\t\t\tfor (k=i+1; k<levels.length; k++) {","\t\t\t\tcomputeSlotSegCollisions(seg, levels[k], seg.forwardSegs);","\t\t\t}","\t\t}","\t}","}","","","// Figure out which path forward (via seg.forwardSegs) results in the longest path until","// the furthest edge is reached. The number of segments in this path will be seg.forwardPressure","function computeSlotSegPressures(seg) {","\tvar forwardSegs = seg.forwardSegs;","\tvar forwardPressure = 0;","\tvar i, forwardSeg;","","\tif (seg.forwardPressure === undefined) { // not already computed","","\t\tfor (i=0; i<forwardSegs.length; i++) {","\t\t\tforwardSeg = forwardSegs[i];","","\t\t\t// figure out the child's maximum forward path","\t\t\tcomputeSlotSegPressures(forwardSeg);","","\t\t\t// either use the existing maximum, or use the child's forward pressure","\t\t\t// plus one (for the forwardSeg itself)","\t\t\tforwardPressure = Math.max(","\t\t\t\tforwardPressure,","\t\t\t\t1 + forwardSeg.forwardPressure","\t\t\t);","\t\t}","","\t\tseg.forwardPressure = forwardPressure;","\t}","}","","","// Calculate seg.forwardCoord and seg.backwardCoord for the segment, where both values range","// from 0 to 1. If the calendar is left-to-right, the seg.backwardCoord maps to \"left\" and","// seg.forwardCoord maps to \"right\" (via percentage). Vice-versa if the calendar is right-to-left.","//","// The segment might be part of a \"series\", which means consecutive segments with the same pressure","// who's width is unknown until an edge has been hit. `seriesBackwardPressure` is the number of","// segments behind this one in the current series, and `seriesBackwardCoord` is the starting","// coordinate of the first segment in the series.","function computeSlotSegCoords(seg, seriesBackwardPressure, seriesBackwardCoord) {","\tvar forwardSegs = seg.forwardSegs;","\tvar i;","","\tif (seg.forwardCoord === undefined) { // not already computed","","\t\tif (!forwardSegs.length) {","","\t\t\t// if there are no forward segments, this segment should butt up against the edge","\t\t\tseg.forwardCoord = 1;","\t\t}","\t\telse {","","\t\t\t// sort highest pressure first","\t\t\tforwardSegs.sort(compareForwardSlotSegs);","","\t\t\t// this segment's forwardCoord will be calculated from the backwardCoord of the","\t\t\t// highest-pressure forward segment.","\t\t\tcomputeSlotSegCoords(forwardSegs[0], seriesBackwardPressure + 1, seriesBackwardCoord);","\t\t\tseg.forwardCoord = forwardSegs[0].backwardCoord;","\t\t}","","\t\t// calculate the backwardCoord from the forwardCoord. consider the series","\t\tseg.backwardCoord = seg.forwardCoord -","\t\t\t(seg.forwardCoord - seriesBackwardCoord) / // available width for series","\t\t\t(seriesBackwardPressure + 1); // # of segments in the series","","\t\t// use this segment's coordinates to computed the coordinates of the less-pressurized","\t\t// forward segments","\t\tfor (i=0; i<forwardSegs.length; i++) {","\t\t\tcomputeSlotSegCoords(forwardSegs[i], 0, seg.forwardCoord);","\t\t}","\t}","}","","","// Outputs a flat array of segments, from lowest to highest level","function flattenSlotSegLevels(levels) {","\tvar segs = [];","\tvar i, level;","\tvar j;","","\tfor (i=0; i<levels.length; i++) {","\t\tlevel = levels[i];","","\t\tfor (j=0; j<level.length; j++) {","\t\t\tsegs.push(level[j]);","\t\t}","\t}","","\treturn segs;","}","","","// Find all the segments in `otherSegs` that vertically collide with `seg`.","// Append into an optionally-supplied `results` array and return.","function computeSlotSegCollisions(seg, otherSegs, results) {","\tresults = results || [];","","\tfor (var i=0; i<otherSegs.length; i++) {","\t\tif (isSlotSegCollision(seg, otherSegs[i])) {","\t\t\tresults.push(otherSegs[i]);","\t\t}","\t}","","\treturn results;","}","","","// Do these segments occupy the same vertical space?","function isSlotSegCollision(seg1, seg2) {","\treturn seg1.end > seg2.start && seg1.start < seg2.end;","}","","","// A cmp function for determining which forward segment to rely on more when computing coordinates.","function compareForwardSlotSegs(seg1, seg2) {","\t// put higher-pressure first","\treturn seg2.forwardPressure - seg1.forwardPressure ||","\t\t// put segments that are closer to initial edge first (and favor ones with no coords yet)","\t\t(seg1.backwardCoord || 0) - (seg2.backwardCoord || 0) ||","\t\t// do normal sorting...","\t\tcompareSlotSegs(seg1, seg2);","}","","","// A cmp function for determining which segment should be closer to the initial edge","// (the left edge on a left-to-right calendar).","function compareSlotSegs(seg1, seg2) {","\treturn seg1.start - seg2.start || // earlier start time goes first","\t\t(seg2.end - seg2.start) - (seg1.end - seg1.start) || // tie? longer-duration goes first","\t\t(seg1.event.title || '').localeCompare(seg2.event.title); // tie? alphabetically by title","}","","",";;","","","function View(element, calendar, viewName) {","\tvar t = this;","\t","\t","\t// exports","\tt.element = element;","\tt.calendar = calendar;","\tt.name = viewName;","\tt.opt = opt;","\tt.trigger = trigger;","\tt.isEventDraggable = isEventDraggable;","\tt.isEventResizable = isEventResizable;","\tt.setEventData = setEventData;","\tt.clearEventData = clearEventData;","\tt.eventEnd = eventEnd;","\tt.reportEventElement = reportEventElement;","\tt.triggerEventDestroy = triggerEventDestroy;","\tt.eventElementHandlers = eventElementHandlers;","\tt.showEvents = showEvents;","\tt.hideEvents = hideEvents;","\tt.eventDrop = eventDrop;","\tt.eventResize = eventResize;","\t// t.title","\t// t.start, t.end","\t// t.visStart, t.visEnd","\t","\t","\t// imports","\tvar defaultEventEnd = t.defaultEventEnd;","\tvar normalizeEvent = calendar.normalizeEvent; // in EventManager","\tvar reportEventChange = calendar.reportEventChange;","\t","\t","\t// locals","\tvar eventsByID = {}; // eventID mapped to array of events (there can be multiple b/c of repeating events)","\tvar eventElementsByID = {}; // eventID mapped to array of jQuery elements","\tvar eventElementCouples = []; // array of objects, { event, element } // TODO: unify with segment system","\tvar options = calendar.options;","\t","\t","\t","\tfunction opt(name, viewNameOverride) {","\t\tvar v = options[name];","\t\tif ($.isPlainObject(v)) {","\t\t\treturn smartProperty(v, viewNameOverride || viewName);","\t\t}","\t\treturn v;","\t}","","\t","\tfunction trigger(name, thisObj) {","\t\treturn calendar.trigger.apply(","\t\t\tcalendar,","\t\t\t[name, thisObj || t].concat(Array.prototype.slice.call(arguments, 2), [t])","\t\t);","\t}","\t","","","\t/* Event Editable Boolean Calculations","\t------------------------------------------------------------------------------*/","","\t","\tfunction isEventDraggable(event) {","\t\tvar source = event.source || {};","\t\treturn firstDefined(","\t\t\t\tevent.startEditable,","\t\t\t\tsource.startEditable,","\t\t\t\topt('eventStartEditable'),","\t\t\t\tevent.editable,","\t\t\t\tsource.editable,","\t\t\t\topt('editable')","\t\t\t)","\t\t\t&& !opt('disableDragging'); // deprecated","\t}","\t","\t","\tfunction isEventResizable(event) { // but also need to make sure the seg.isEnd == true","\t\tvar source = event.source || {};","\t\treturn firstDefined(","\t\t\t\tevent.durationEditable,","\t\t\t\tsource.durationEditable,","\t\t\t\topt('eventDurationEditable'),","\t\t\t\tevent.editable,","\t\t\t\tsource.editable,","\t\t\t\topt('editable')","\t\t\t)","\t\t\t&& !opt('disableResizing'); // deprecated","\t}","\t","\t","\t","\t/* Event Data","\t------------------------------------------------------------------------------*/","\t","\t","\tfunction setEventData(events) { // events are already normalized at this point","\t\teventsByID = {};","\t\tvar i, len=events.length, event;","\t\tfor (i=0; i<len; i++) {","\t\t\tevent = events[i];","\t\t\tif (eventsByID[event._id]) {","\t\t\t\teventsByID[event._id].push(event);","\t\t\t}else{","\t\t\t\teventsByID[event._id] = [event];","\t\t\t}","\t\t}","\t}","","","\tfunction clearEventData() {","\t\teventsByID = {};","\t\teventElementsByID = {};","\t\teventElementCouples = [];","\t}","\t","\t","\t// returns a Date object for an event's end","\tfunction eventEnd(event) {","\t\treturn event.end ? cloneDate(event.end) : defaultEventEnd(event);","\t}","\t","\t","\t","\t/* Event Elements","\t------------------------------------------------------------------------------*/","\t","\t","\t// report when view creates an element for an event","\tfunction reportEventElement(event, element) {","\t\teventElementCouples.push({ event: event, element: element });","\t\tif (eventElementsByID[event._id]) {","\t\t\teventElementsByID[event._id].push(element);","\t\t}else{","\t\t\teventElementsByID[event._id] = [element];","\t\t}","\t}","","","\tfunction triggerEventDestroy() {","\t\t$.each(eventElementCouples, function(i, couple) {","\t\t\tt.trigger('eventDestroy', couple.event, couple.event, couple.element);","\t\t});","\t}","\t","\t","\t// attaches eventClick, eventMouseover, eventMouseout","\tfunction eventElementHandlers(event, eventElement) {","\t\teventElement","\t\t\t.click(function(ev) {","\t\t\t\tif (!eventElement.hasClass('ui-draggable-dragging') &&","\t\t\t\t\t!eventElement.hasClass('ui-resizable-resizing')) {","\t\t\t\t\t\treturn trigger('eventClick', this, event, ev);","\t\t\t\t\t}","\t\t\t})","\t\t\t.hover(","\t\t\t\tfunction(ev) {","\t\t\t\t\ttrigger('eventMouseover', this, event, ev);","\t\t\t\t},","\t\t\t\tfunction(ev) {","\t\t\t\t\ttrigger('eventMouseout', this, event, ev);","\t\t\t\t}","\t\t\t);","\t\t// TODO: don't fire eventMouseover/eventMouseout *while* dragging is occuring (on subject element)","\t\t// TODO: same for resizing","\t}","\t","\t","\tfunction showEvents(event, exceptElement) {","\t\teachEventElement(event, exceptElement, 'show');","\t}","\t","\t","\tfunction hideEvents(event, exceptElement) {","\t\teachEventElement(event, exceptElement, 'hide');","\t}","\t","\t","\tfunction eachEventElement(event, exceptElement, funcName) {","\t\t// NOTE: there may be multiple events per ID (repeating events)","\t\t// and multiple segments per event","\t\tvar elements = eventElementsByID[event._id],","\t\t\ti, len = elements.length;","\t\tfor (i=0; i<len; i++) {","\t\t\tif (!exceptElement || elements[i][0] != exceptElement[0]) {","\t\t\t\telements[i][funcName]();","\t\t\t}","\t\t}","\t}","\t","\t","\t","\t/* Event Modification Reporting","\t---------------------------------------------------------------------------------*/","\t","\t","\tfunction eventDrop(e, event, dayDelta, minuteDelta, allDay, ev, ui) {","\t\tvar oldAllDay = event.allDay;","\t\tvar eventId = event._id;","\t\tmoveEvents(eventsByID[eventId], dayDelta, minuteDelta, allDay);","\t\ttrigger(","\t\t\t'eventDrop',","\t\t\te,","\t\t\tevent,","\t\t\tdayDelta,","\t\t\tminuteDelta,","\t\t\tallDay,","\t\t\tfunction() {","\t\t\t\t// TODO: investigate cases where this inverse technique might not work","\t\t\t\tmoveEvents(eventsByID[eventId], -dayDelta, -minuteDelta, oldAllDay);","\t\t\t\treportEventChange(eventId);","\t\t\t},","\t\t\tev,","\t\t\tui","\t\t);","\t\treportEventChange(eventId);","\t}","\t","\t","\tfunction eventResize(e, event, dayDelta, minuteDelta, ev, ui) {","\t\tvar eventId = event._id;","\t\telongateEvents(eventsByID[eventId], dayDelta, minuteDelta);","\t\ttrigger(","\t\t\t'eventResize',","\t\t\te,","\t\t\tevent,","\t\t\tdayDelta,","\t\t\tminuteDelta,","\t\t\tfunction() {","\t\t\t\t// TODO: investigate cases where this inverse technique might not work","\t\t\t\telongateEvents(eventsByID[eventId], -dayDelta, -minuteDelta);","\t\t\t\treportEventChange(eventId);","\t\t\t},","\t\t\tev,","\t\t\tui","\t\t);","\t\treportEventChange(eventId);","\t}","\t","\t","\t","\t/* Event Modification Math","\t---------------------------------------------------------------------------------*/","\t","\t","\tfunction moveEvents(events, dayDelta, minuteDelta, allDay) {","\t\tminuteDelta = minuteDelta || 0;","\t\tfor (var e, len=events.length, i=0; i<len; i++) {","\t\t\te = events[i];","\t\t\tif (allDay !== undefined) {","\t\t\t\te.allDay = allDay;","\t\t\t}","\t\t\taddMinutes(addDays(e.start, dayDelta, true), minuteDelta);","\t\t\tif (e.end) {","\t\t\t\te.end = addMinutes(addDays(e.end, dayDelta, true), minuteDelta);","\t\t\t}","\t\t\tnormalizeEvent(e, options);","\t\t}","\t}","\t","\t","\tfunction elongateEvents(events, dayDelta, minuteDelta) {","\t\tminuteDelta = minuteDelta || 0;","\t\tfor (var e, len=events.length, i=0; i<len; i++) {","\t\t\te = events[i];","\t\t\te.end = addMinutes(addDays(eventEnd(e), dayDelta, true), minuteDelta);","\t\t\tnormalizeEvent(e, options);","\t\t}","\t}","","","","\t// ====================================================================================================","\t// Utilities for day \"cells\"","\t// ====================================================================================================","\t// The \"basic\" views are completely made up of day cells.","\t// The \"agenda\" views have day cells at the top \"all day\" slot.","\t// This was the obvious common place to put these utilities, but they should be abstracted out into","\t// a more meaningful class (like DayEventRenderer).","\t// ====================================================================================================","","","\t// For determining how a given \"cell\" translates into a \"date\":","\t//","\t// 1. Convert the \"cell\" (row and column) into a \"cell offset\" (the # of the cell, cronologically from the first).","\t//    Keep in mind that column indices are inverted with isRTL. This is taken into account.","\t//","\t// 2. Convert the \"cell offset\" to a \"day offset\" (the # of days since the first visible day in the view).","\t//","\t// 3. Convert the \"day offset\" into a \"date\" (a JavaScript Date object).","\t//","\t// The reverse transformation happens when transforming a date into a cell.","","","\t// exports","\tt.isHiddenDay = isHiddenDay;","\tt.skipHiddenDays = skipHiddenDays;","\tt.getCellsPerWeek = getCellsPerWeek;","\tt.dateToCell = dateToCell;","\tt.dateToDayOffset = dateToDayOffset;","\tt.dayOffsetToCellOffset = dayOffsetToCellOffset;","\tt.cellOffsetToCell = cellOffsetToCell;","\tt.cellToDate = cellToDate;","\tt.cellToCellOffset = cellToCellOffset;","\tt.cellOffsetToDayOffset = cellOffsetToDayOffset;","\tt.dayOffsetToDate = dayOffsetToDate;","\tt.rangeToSegments = rangeToSegments;","","","\t// internals","\tvar hiddenDays = opt('hiddenDays') || []; // array of day-of-week indices that are hidden","\tvar isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)","\tvar cellsPerWeek;","\tvar dayToCellMap = []; // hash from dayIndex -> cellIndex, for one week","\tvar cellToDayMap = []; // hash from cellIndex -> dayIndex, for one week","\tvar isRTL = opt('isRTL');","","","\t// initialize important internal variables","\t(function() {","","\t\tif (opt('weekends') === false) {","\t\t\thiddenDays.push(0, 6); // 0=sunday, 6=saturday","\t\t}","","\t\t// Loop through a hypothetical week and determine which","\t\t// days-of-week are hidden. Record in both hashes (one is the reverse of the other).","\t\tfor (var dayIndex=0, cellIndex=0; dayIndex<7; dayIndex++) {","\t\t\tdayToCellMap[dayIndex] = cellIndex;","\t\t\tisHiddenDayHash[dayIndex] = $.inArray(dayIndex, hiddenDays) != -1;","\t\t\tif (!isHiddenDayHash[dayIndex]) {","\t\t\t\tcellToDayMap[cellIndex] = dayIndex;","\t\t\t\tcellIndex++;","\t\t\t}","\t\t}","","\t\tcellsPerWeek = cellIndex;","\t\tif (!cellsPerWeek) {","\t\t\tthrow 'invalid hiddenDays'; // all days were hidden? bad.","\t\t}","","\t})();","","","\t// Is the current day hidden?","\t// `day` is a day-of-week index (0-6), or a Date object","\tfunction isHiddenDay(day) {","\t\tif (typeof day == 'object') {","\t\t\tday = day.getDay();","\t\t}","\t\treturn isHiddenDayHash[day];","\t}","","","\tfunction getCellsPerWeek() {","\t\treturn cellsPerWeek;","\t}","","","\t// Keep incrementing the current day until it is no longer a hidden day.","\t// If the initial value of `date` is not a hidden day, don't do anything.","\t// Pass `isExclusive` as `true` if you are dealing with an end date.","\t// `inc` defaults to `1` (increment one day forward each time)","\tfunction skipHiddenDays(date, inc, isExclusive) {","\t\tinc = inc || 1;","\t\twhile (","\t\t\tisHiddenDayHash[ ( date.getDay() + (isExclusive ? inc : 0) + 7 ) % 7 ]","\t\t) {","\t\t\taddDays(date, inc);","\t\t}","\t}","","","\t//","\t// TRANSFORMATIONS: cell -> cell offset -> day offset -> date","\t//","","\t// cell -> date (combines all transformations)","\t// Possible arguments:","\t// - row, col","\t// - { row:#, col: # }","\tfunction cellToDate() {","\t\tvar cellOffset = cellToCellOffset.apply(null, arguments);","\t\tvar dayOffset = cellOffsetToDayOffset(cellOffset);","\t\tvar date = dayOffsetToDate(dayOffset);","\t\treturn date;","\t}","","\t// cell -> cell offset","\t// Possible arguments:","\t// - row, col","\t// - { row:#, col:# }","\tfunction cellToCellOffset(row, col) {","\t\tvar colCnt = t.getColCnt();","","\t\t// rtl variables. wish we could pre-populate these. but where?","\t\tvar dis = isRTL ? -1 : 1;","\t\tvar dit = isRTL ? colCnt - 1 : 0;","","\t\tif (typeof row == 'object') {","\t\t\tcol = row.col;","\t\t\trow = row.row;","\t\t}","\t\tvar cellOffset = row * colCnt + (col * dis + dit); // column, adjusted for RTL (dis & dit)","","\t\treturn cellOffset;","\t}","","\t// cell offset -> day offset","\tfunction cellOffsetToDayOffset(cellOffset) {","\t\tvar day0 = t.visStart.getDay(); // first date's day of week","\t\tcellOffset += dayToCellMap[day0]; // normlize cellOffset to beginning-of-week","\t\treturn Math.floor(cellOffset / cellsPerWeek) * 7 // # of days from full weeks","\t\t\t+ cellToDayMap[ // # of days from partial last week","\t\t\t\t(cellOffset % cellsPerWeek + cellsPerWeek) % cellsPerWeek // crazy math to handle negative cellOffsets","\t\t\t]","\t\t\t- day0; // adjustment for beginning-of-week normalization","\t}","","\t// day offset -> date (JavaScript Date object)","\tfunction dayOffsetToDate(dayOffset) {","\t\tvar date = cloneDate(t.visStart);","\t\taddDays(date, dayOffset);","\t\treturn date;","\t}","","","\t//","\t// TRANSFORMATIONS: date -> day offset -> cell offset -> cell","\t//","","\t// date -> cell (combines all transformations)","\tfunction dateToCell(date) {","\t\tvar dayOffset = dateToDayOffset(date);","\t\tvar cellOffset = dayOffsetToCellOffset(dayOffset);","\t\tvar cell = cellOffsetToCell(cellOffset);","\t\treturn cell;","\t}","","\t// date -> day offset","\tfunction dateToDayOffset(date) {","\t\treturn dayDiff(date, t.visStart);","\t}","","\t// day offset -> cell offset","\tfunction dayOffsetToCellOffset(dayOffset) {","\t\tvar day0 = t.visStart.getDay(); // first date's day of week","\t\tdayOffset += day0; // normalize dayOffset to beginning-of-week","\t\treturn Math.floor(dayOffset / 7) * cellsPerWeek // # of cells from full weeks","\t\t\t+ dayToCellMap[ // # of cells from partial last week","\t\t\t\t(dayOffset % 7 + 7) % 7 // crazy math to handle negative dayOffsets","\t\t\t]","\t\t\t- dayToCellMap[day0]; // adjustment for beginning-of-week normalization","\t}","","\t// cell offset -> cell (object with row & col keys)","\tfunction cellOffsetToCell(cellOffset) {","\t\tvar colCnt = t.getColCnt();","","\t\t// rtl variables. wish we could pre-populate these. but where?","\t\tvar dis = isRTL ? -1 : 1;","\t\tvar dit = isRTL ? colCnt - 1 : 0;","","\t\tvar row = Math.floor(cellOffset / colCnt);","\t\tvar col = ((cellOffset % colCnt + colCnt) % colCnt) * dis + dit; // column, adjusted for RTL (dis & dit)","\t\treturn {","\t\t\trow: row,","\t\t\tcol: col","\t\t};","\t}","","","\t//","\t// Converts a date range into an array of segment objects.","\t// \"Segments\" are horizontal stretches of time, sliced up by row.","\t// A segment object has the following properties:","\t// - row","\t// - cols","\t// - isStart","\t// - isEnd","\t//","\tfunction rangeToSegments(startDate, endDate) {","\t\tvar rowCnt = t.getRowCnt();","\t\tvar colCnt = t.getColCnt();","\t\tvar segments = []; // array of segments to return","","\t\t// day offset for given date range","\t\tvar rangeDayOffsetStart = dateToDayOffset(startDate);","\t\tvar rangeDayOffsetEnd = dateToDayOffset(endDate); // exclusive","","\t\t// first and last cell offset for the given date range","\t\t// \"last\" implies inclusivity","\t\tvar rangeCellOffsetFirst = dayOffsetToCellOffset(rangeDayOffsetStart);","\t\tvar rangeCellOffsetLast = dayOffsetToCellOffset(rangeDayOffsetEnd) - 1;","","\t\t// loop through all the rows in the view","\t\tfor (var row=0; row<rowCnt; row++) {","","\t\t\t// first and last cell offset for the row","\t\t\tvar rowCellOffsetFirst = row * colCnt;","\t\t\tvar rowCellOffsetLast = rowCellOffsetFirst + colCnt - 1;","","\t\t\t// get the segment's cell offsets by constraining the range's cell offsets to the bounds of the row","\t\t\tvar segmentCellOffsetFirst = Math.max(rangeCellOffsetFirst, rowCellOffsetFirst);","\t\t\tvar segmentCellOffsetLast = Math.min(rangeCellOffsetLast, rowCellOffsetLast);","","\t\t\t// make sure segment's offsets are valid and in view","\t\t\tif (segmentCellOffsetFirst <= segmentCellOffsetLast) {","","\t\t\t\t// translate to cells","\t\t\t\tvar segmentCellFirst = cellOffsetToCell(segmentCellOffsetFirst);","\t\t\t\tvar segmentCellLast = cellOffsetToCell(segmentCellOffsetLast);","","\t\t\t\t// view might be RTL, so order by leftmost column","\t\t\t\tvar cols = [ segmentCellFirst.col, segmentCellLast.col ].sort();","","\t\t\t\t// Determine if segment's first/last cell is the beginning/end of the date range.","\t\t\t\t// We need to compare \"day offset\" because \"cell offsets\" are often ambiguous and","\t\t\t\t// can translate to multiple days, and an edge case reveals itself when we the","\t\t\t\t// range's first cell is hidden (we don't want isStart to be true).","\t\t\t\tvar isStart = cellOffsetToDayOffset(segmentCellOffsetFirst) == rangeDayOffsetStart;","\t\t\t\tvar isEnd = cellOffsetToDayOffset(segmentCellOffsetLast) + 1 == rangeDayOffsetEnd; // +1 for comparing exclusively","","\t\t\t\tsegments.push({","\t\t\t\t\trow: row,","\t\t\t\t\tleftCol: cols[0],","\t\t\t\t\trightCol: cols[1],","\t\t\t\t\tisStart: isStart,","\t\t\t\t\tisEnd: isEnd","\t\t\t\t});","\t\t\t}","\t\t}","","\t\treturn segments;","\t}","\t","","}","",";;","","function DayEventRenderer() {","\tvar t = this;","","\t","\t// exports","\tt.renderDayEvents = renderDayEvents;","\tt.draggableDayEvent = draggableDayEvent; // made public so that subclasses can override","\tt.resizableDayEvent = resizableDayEvent; // \"","\t","\t","\t// imports","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar isEventDraggable = t.isEventDraggable;","\tvar isEventResizable = t.isEventResizable;","\tvar eventEnd = t.eventEnd;","\tvar reportEventElement = t.reportEventElement;","\tvar eventElementHandlers = t.eventElementHandlers;","\tvar showEvents = t.showEvents;","\tvar hideEvents = t.hideEvents;","\tvar eventDrop = t.eventDrop;","\tvar eventResize = t.eventResize;","\tvar getRowCnt = t.getRowCnt;","\tvar getColCnt = t.getColCnt;","\tvar getColWidth = t.getColWidth;","\tvar allDayRow = t.allDayRow; // TODO: rename","\tvar colLeft = t.colLeft;","\tvar colRight = t.colRight;","\tvar colContentLeft = t.colContentLeft;","\tvar colContentRight = t.colContentRight;","\tvar dateToCell = t.dateToCell;","\tvar getDaySegmentContainer = t.getDaySegmentContainer;","\tvar formatDates = t.calendar.formatDates;","\tvar renderDayOverlay = t.renderDayOverlay;","\tvar clearOverlays = t.clearOverlays;","\tvar clearSelection = t.clearSelection;","\tvar getHoverListener = t.getHoverListener;","\tvar rangeToSegments = t.rangeToSegments;","\tvar cellToDate = t.cellToDate;","\tvar cellToCellOffset = t.cellToCellOffset;","\tvar cellOffsetToDayOffset = t.cellOffsetToDayOffset;","\tvar dateToDayOffset = t.dateToDayOffset;","\tvar dayOffsetToCellOffset = t.dayOffsetToCellOffset;","","","\t// Render `events` onto the calendar, attach mouse event handlers, and call the `eventAfterRender` callback for each.","\t// Mouse event will be lazily applied, except if the event has an ID of `modifiedEventId`.","\t// Can only be called when the event container is empty (because it wipes out all innerHTML).","\tfunction renderDayEvents(events, modifiedEventId) {","","\t\t// do the actual rendering. Receive the intermediate \"segment\" data structures.","\t\tvar segments = _renderDayEvents(","\t\t\tevents,","\t\t\tfalse, // don't append event elements","\t\t\ttrue // set the heights of the rows","\t\t);","","\t\t// report the elements to the View, for general drag/resize utilities","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\treportEventElement(segment.event, element);","\t\t});","","\t\t// attach mouse handlers","\t\tattachHandlers(segments, modifiedEventId);","","\t\t// call `eventAfterRender` callback for each event","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\ttrigger('eventAfterRender', segment.event, segment.event, element);","\t\t});","\t}","","","\t// Render an event on the calendar, but don't report them anywhere, and don't attach mouse handlers.","\t// Append this event element to the event container, which might already be populated with events.","\t// If an event's segment will have row equal to `adjustRow`, then explicitly set its top coordinate to `adjustTop`.","\t// This hack is used to maintain continuity when user is manually resizing an event.","\t// Returns an array of DOM elements for the event.","\tfunction renderTempDayEvent(event, adjustRow, adjustTop) {","","\t\t// actually render the event. `true` for appending element to container.","\t\t// Recieve the intermediate \"segment\" data structures.","\t\tvar segments = _renderDayEvents(","\t\t\t[ event ],","\t\t\ttrue, // append event elements","\t\t\tfalse // don't set the heights of the rows","\t\t);","","\t\tvar elements = [];","","\t\t// Adjust certain elements' top coordinates","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\tif (segment.row === adjustRow) {","\t\t\t\telement.css('top', adjustTop);","\t\t\t}","\t\t\telements.push(element[0]); // accumulate DOM nodes","\t\t});","","\t\treturn elements;","\t}","","","\t// Render events onto the calendar. Only responsible for the VISUAL aspect.","\t// Not responsible for attaching handlers or calling callbacks.","\t// Set `doAppend` to `true` for rendering elements without clearing the existing container.","\t// Set `doRowHeights` to allow setting the height of each row, to compensate for vertical event overflow.","\tfunction _renderDayEvents(events, doAppend, doRowHeights) {","","\t\t// where the DOM nodes will eventually end up","\t\tvar finalContainer = getDaySegmentContainer();","","\t\t// the container where the initial HTML will be rendered.","\t\t// If `doAppend`==true, uses a temporary container.","\t\tvar renderContainer = doAppend ? $(\"<div/>\") : finalContainer;","","\t\tvar segments = buildSegments(events);","\t\tvar html;","\t\tvar elements;","","\t\t// calculate the desired `left` and `width` properties on each segment object","\t\tcalculateHorizontals(segments);","","\t\t// build the HTML string. relies on `left` property","\t\thtml = buildHTML(segments);","","\t\t// render the HTML. innerHTML is considerably faster than jQuery's .html()","\t\trenderContainer[0].innerHTML = html;","","\t\t// retrieve the individual elements","\t\telements = renderContainer.children();","","\t\t// if we were appending, and thus using a temporary container,","\t\t// re-attach elements to the real container.","\t\tif (doAppend) {","\t\t\tfinalContainer.append(elements);","\t\t}","","\t\t// assigns each element to `segment.event`, after filtering them through user callbacks","\t\tresolveElements(segments, elements);","","\t\t// Calculate the left and right padding+margin for each element.","\t\t// We need this for setting each element's desired outer width, because of the W3C box model.","\t\t// It's important we do this in a separate pass from acually setting the width on the DOM elements","\t\t// because alternating reading/writing dimensions causes reflow for every iteration.","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\tsegment.hsides = hsides(element, true); // include margins = `true`","\t\t});","","\t\t// Set the width of each element","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\telement.width(","\t\t\t\tMath.max(0, segment.outerWidth - segment.hsides)","\t\t\t);","\t\t});","","\t\t// Grab each element's outerHeight (setVerticals uses this).","\t\t// To get an accurate reading, it's important to have each element's width explicitly set already.","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\tsegment.outerHeight = element.outerHeight(true); // include margins = `true`","\t\t});","","\t\t// Set the top coordinate on each element (requires segment.outerHeight)","\t\tsetVerticals(segments, doRowHeights);","","\t\treturn segments;","\t}","","","\t// Generate an array of \"segments\" for all events.","\tfunction buildSegments(events) {","\t\tvar segments = [];","\t\tfor (var i=0; i<events.length; i++) {","\t\t\tvar eventSegments = buildSegmentsForEvent(events[i]);","\t\t\tsegments.push.apply(segments, eventSegments); // append an array to an array","\t\t}","\t\treturn segments;","\t}","","","\t// Generate an array of segments for a single event.","\t// A \"segment\" is the same data structure that View.rangeToSegments produces,","\t// with the addition of the `event` property being set to reference the original event.","\tfunction buildSegmentsForEvent(event) {","\t\tvar startDate = event.start;","\t\tvar endDate = exclEndDay(event);","\t\tvar segments = rangeToSegments(startDate, endDate);","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tsegments[i].event = event;","\t\t}","\t\treturn segments;","\t}","","","\t// Sets the `left` and `outerWidth` property of each segment.","\t// These values are the desired dimensions for the eventual DOM elements.","\tfunction calculateHorizontals(segments) {","\t\tvar isRTL = opt('isRTL');","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","","\t\t\t// Determine functions used for calulating the elements left/right coordinates,","\t\t\t// depending on whether the view is RTL or not.","\t\t\t// NOTE:","\t\t\t// colLeft/colRight returns the coordinate butting up the edge of the cell.","\t\t\t// colContentLeft/colContentRight is indented a little bit from the edge.","\t\t\tvar leftFunc = (isRTL ? segment.isEnd : segment.isStart) ? colContentLeft : colLeft;","\t\t\tvar rightFunc = (isRTL ? segment.isStart : segment.isEnd) ? colContentRight : colRight;","","\t\t\tvar left = leftFunc(segment.leftCol);","\t\t\tvar right = rightFunc(segment.rightCol);","\t\t\tsegment.left = left;","\t\t\tsegment.outerWidth = right - left;","\t\t}","\t}","","","\t// Build a concatenated HTML string for an array of segments","\tfunction buildHTML(segments) {","\t\tvar html = '';","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\thtml += buildHTMLForSegment(segments[i]);","\t\t}","\t\treturn html;","\t}","","","\t// Build an HTML string for a single segment.","\t// Relies on the following properties:","\t// - `segment.event` (from `buildSegmentsForEvent`)","\t// - `segment.left` (from `calculateHorizontals`)","\tfunction buildHTMLForSegment(segment) {","\t\tvar html = '';","\t\tvar isRTL = opt('isRTL');","\t\tvar event = segment.event;","\t\tvar url = event.url;","","\t\t// generate the list of CSS classNames","\t\tvar classNames = [ 'fc-event', 'fc-event-hori' ];","\t\tif (isEventDraggable(event)) {","\t\t\tclassNames.push('fc-event-draggable');","\t\t}","\t\tif (segment.isStart) {","\t\t\tclassNames.push('fc-event-start');","\t\t}","\t\tif (segment.isEnd) {","\t\t\tclassNames.push('fc-event-end');","\t\t}","\t\t// use the event's configured classNames","\t\t// guaranteed to be an array via `normalizeEvent`","\t\tclassNames = classNames.concat(event.className);","\t\tif (event.source) {","\t\t\t// use the event's source's classNames, if specified","\t\t\tclassNames = classNames.concat(event.source.className || []);","\t\t}","","\t\t// generate a semicolon delimited CSS string for any of the \"skin\" properties","\t\t// of the event object (`backgroundColor`, `borderColor` and such)","\t\tvar skinCss = getSkinCss(event, opt);","","\t\tif (url) {","\t\t\thtml += \"<a href='\" + htmlEscape(url) + \"'\";","\t\t}else{","\t\t\thtml += \"<div\";","\t\t}","\t\thtml +=","\t\t\t\" class='\" + classNames.join(' ') + \"'\" +","\t\t\t\" style=\" +","\t\t\t\t\"'\" +","\t\t\t\t\"position:absolute;\" +","\t\t\t\t\"left:\" + segment.left + \"px;\" +","\t\t\t\tskinCss +","\t\t\t\t\"'\" +","\t\t\t\">\" +","\t\t\t\"<div class='fc-event-inner'>\";","\t\tif (!event.allDay && segment.isStart) {","\t\t\thtml +=","\t\t\t\t\"<span class='fc-event-time'>\" +","\t\t\t\thtmlEscape(","\t\t\t\t\tformatDates(event.start, event.end, opt('timeFormat'))","\t\t\t\t) +","\t\t\t\t\"</span>\";","\t\t}","\t\thtml +=","\t\t\t\"<span class='fc-event-title'>\" +","\t\t\thtmlEscape(event.title || '') +","\t\t\t\"</span>\" +","\t\t\t\"</div>\";","\t\tif (segment.isEnd && isEventResizable(event)) {","\t\t\thtml +=","\t\t\t\t\"<div class='ui-resizable-handle ui-resizable-\" + (isRTL ? 'w' : 'e') + \"'>\" +","\t\t\t\t\"   \" + // makes hit area a lot better for IE6/7","\t\t\t\t\"</div>\";","\t\t}","\t\thtml += \"</\" + (url ? \"a\" : \"div\") + \">\";","","\t\t// TODO:","\t\t// When these elements are initially rendered, they will be briefly visibile on the screen,","\t\t// even though their widths/heights are not set.","\t\t// SOLUTION: initially set them as visibility:hidden ?","","\t\treturn html;","\t}","","","\t// Associate each segment (an object) with an element (a jQuery object),","\t// by setting each `segment.element`.","\t// Run each element through the `eventRender` filter, which allows developers to","\t// modify an existing element, supply a new one, or cancel rendering.","\tfunction resolveElements(segments, elements) {","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","\t\t\tvar event = segment.event;","\t\t\tvar element = elements.eq(i);","","\t\t\t// call the trigger with the original element","\t\t\tvar triggerRes = trigger('eventRender', event, event, element);","","\t\t\tif (triggerRes === false) {","\t\t\t\t// if `false`, remove the event from the DOM and don't assign it to `segment.event`","\t\t\t\telement.remove();","\t\t\t}","\t\t\telse {","\t\t\t\tif (triggerRes && triggerRes !== true) {","\t\t\t\t\t// the trigger returned a new element, but not `true` (which means keep the existing element)","","\t\t\t\t\t// re-assign the important CSS dimension properties that were already assigned in `buildHTMLForSegment`","\t\t\t\t\ttriggerRes = $(triggerRes)","\t\t\t\t\t\t.css({","\t\t\t\t\t\t\tposition: 'absolute',","\t\t\t\t\t\t\tleft: segment.left","\t\t\t\t\t\t});","","\t\t\t\t\telement.replaceWith(triggerRes);","\t\t\t\t\telement = triggerRes;","\t\t\t\t}","","\t\t\t\tsegment.element = element;","\t\t\t}","\t\t}","\t}","","","","\t/* Top-coordinate Methods","\t-------------------------------------------------------------------------------------------------*/","","","\t// Sets the \"top\" CSS property for each element.","\t// If `doRowHeights` is `true`, also sets each row's first cell to an explicit height,","\t// so that if elements vertically overflow, the cell expands vertically to compensate.","\tfunction setVerticals(segments, doRowHeights) {","\t\tvar rowContentHeights = calculateVerticals(segments); // also sets segment.top","\t\tvar rowContentElements = getRowContentElements(); // returns 1 inner div per row","\t\tvar rowContentTops = [];","","\t\t// Set each row's height by setting height of first inner div","\t\tif (doRowHeights) {","\t\t\tfor (var i=0; i<rowContentElements.length; i++) {","\t\t\t\trowContentElements[i].height(rowContentHeights[i]);","\t\t\t}","\t\t}","","\t\t// Get each row's top, relative to the views's origin.","\t\t// Important to do this after setting each row's height.","\t\tfor (var i=0; i<rowContentElements.length; i++) {","\t\t\trowContentTops.push(","\t\t\t\trowContentElements[i].position().top","\t\t\t);","\t\t}","","\t\t// Set each segment element's CSS \"top\" property.","\t\t// Each segment object has a \"top\" property, which is relative to the row's top, but...","\t\tsegmentElementEach(segments, function(segment, element) {","\t\t\telement.css(","\t\t\t\t'top',","\t\t\t\trowContentTops[segment.row] + segment.top // ...now, relative to views's origin","\t\t\t);","\t\t});","\t}","","","\t// Calculate the \"top\" coordinate for each segment, relative to the \"top\" of the row.","\t// Also, return an array that contains the \"content\" height for each row","\t// (the height displaced by the vertically stacked events in the row).","\t// Requires segments to have their `outerHeight` property already set.","\tfunction calculateVerticals(segments) {","\t\tvar rowCnt = getRowCnt();","\t\tvar colCnt = getColCnt();","\t\tvar rowContentHeights = []; // content height for each row","\t\tvar segmentRows = buildSegmentRows(segments); // an array of segment arrays, one for each row","","\t\tfor (var rowI=0; rowI<rowCnt; rowI++) {","\t\t\tvar segmentRow = segmentRows[rowI];","","\t\t\t// an array of running total heights for each column.","\t\t\t// initialize with all zeros.","\t\t\tvar colHeights = [];","\t\t\tfor (var colI=0; colI<colCnt; colI++) {","\t\t\t\tcolHeights.push(0);","\t\t\t}","","\t\t\t// loop through every segment","\t\t\tfor (var segmentI=0; segmentI<segmentRow.length; segmentI++) {","\t\t\t\tvar segment = segmentRow[segmentI];","","\t\t\t\t// find the segment's top coordinate by looking at the max height","\t\t\t\t// of all the columns the segment will be in.","\t\t\t\tsegment.top = arrayMax(","\t\t\t\t\tcolHeights.slice(","\t\t\t\t\t\tsegment.leftCol,","\t\t\t\t\t\tsegment.rightCol + 1 // make exclusive for slice","\t\t\t\t\t)","\t\t\t\t);","","\t\t\t\t// adjust the columns to account for the segment's height","\t\t\t\tfor (var colI=segment.leftCol; colI<=segment.rightCol; colI++) {","\t\t\t\t\tcolHeights[colI] = segment.top + segment.outerHeight;","\t\t\t\t}","\t\t\t}","","\t\t\t// the tallest column in the row should be the \"content height\"","\t\t\trowContentHeights.push(arrayMax(colHeights));","\t\t}","","\t\treturn rowContentHeights;","\t}","","","\t// Build an array of segment arrays, each representing the segments that will","\t// be in a row of the grid, sorted by which event should be closest to the top.","\tfunction buildSegmentRows(segments) {","\t\tvar rowCnt = getRowCnt();","\t\tvar segmentRows = [];","\t\tvar segmentI;","\t\tvar segment;","\t\tvar rowI;","","\t\t// group segments by row","\t\tfor (segmentI=0; segmentI<segments.length; segmentI++) {","\t\t\tsegment = segments[segmentI];","\t\t\trowI = segment.row;","\t\t\tif (segment.element) { // was rendered?","\t\t\t\tif (segmentRows[rowI]) {","\t\t\t\t\t// already other segments. append to array","\t\t\t\t\tsegmentRows[rowI].push(segment);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\t// first segment in row. create new array","\t\t\t\t\tsegmentRows[rowI] = [ segment ];","\t\t\t\t}","\t\t\t}","\t\t}","","\t\t// sort each row","\t\tfor (rowI=0; rowI<rowCnt; rowI++) {","\t\t\tsegmentRows[rowI] = sortSegmentRow(","\t\t\t\tsegmentRows[rowI] || [] // guarantee an array, even if no segments","\t\t\t);","\t\t}","","\t\treturn segmentRows;","\t}","","","\t// Sort an array of segments according to which segment should appear closest to the top","\tfunction sortSegmentRow(segments) {","\t\tvar sortedSegments = [];","","\t\t// build the subrow array","\t\tvar subrows = buildSegmentSubrows(segments);","","\t\t// flatten it","\t\tfor (var i=0; i<subrows.length; i++) {","\t\t\tsortedSegments.push.apply(sortedSegments, subrows[i]); // append an array to an array","\t\t}","","\t\treturn sortedSegments;","\t}","","","\t// Take an array of segments, which are all assumed to be in the same row,","\t// and sort into subrows.","\tfunction buildSegmentSubrows(segments) {","","\t\t// Give preference to elements with certain criteria, so they have","\t\t// a chance to be closer to the top.","\t\tsegments.sort(compareDaySegments);","","\t\tvar subrows = [];","\t\tfor (var i=0; i<segments.length; i++) {","\t\t\tvar segment = segments[i];","","\t\t\t// loop through subrows, starting with the topmost, until the segment","\t\t\t// doesn't collide with other segments.","\t\t\tfor (var j=0; j<subrows.length; j++) {","\t\t\t\tif (!isDaySegmentCollision(segment, subrows[j])) {","\t\t\t\t\tbreak;","\t\t\t\t}","\t\t\t}","\t\t\t// `j` now holds the desired subrow index","\t\t\tif (subrows[j]) {","\t\t\t\tsubrows[j].push(segment);","\t\t\t}","\t\t\telse {","\t\t\t\tsubrows[j] = [ segment ];","\t\t\t}","\t\t}","","\t\treturn subrows;","\t}","","","\t// Return an array of jQuery objects for the placeholder content containers of each row.","\t// The content containers don't actually contain anything, but their dimensions should match","\t// the events that are overlaid on top.","\tfunction getRowContentElements() {","\t\tvar i;","\t\tvar rowCnt = getRowCnt();","\t\tvar rowDivs = [];","\t\tfor (i=0; i<rowCnt; i++) {","\t\t\trowDivs[i] = allDayRow(i)","\t\t\t\t.find('div.fc-day-content > div');","\t\t}","\t\treturn rowDivs;","\t}","","","","\t/* Mouse Handlers","\t---------------------------------------------------------------------------------------------------*/","\t// TODO: better documentation!","","","\tfunction attachHandlers(segments, modifiedEventId) {","\t\tvar segmentContainer = getDaySegmentContainer();","","\t\tsegmentElementEach(segments, function(segment, element, i) {","\t\t\tvar event = segment.event;","\t\t\tif (event._id === modifiedEventId) {","\t\t\t\tbindDaySeg(event, element, segment);","\t\t\t}else{","\t\t\t\telement[0]._fci = i; // for lazySegBind","\t\t\t}","\t\t});","","\t\tlazySegBind(segmentContainer, segments, bindDaySeg);","\t}","","","\tfunction bindDaySeg(event, eventElement, segment) {","","\t\tif (isEventDraggable(event)) {","\t\t\tt.draggableDayEvent(event, eventElement, segment); // use `t` so subclasses can override","\t\t}","","\t\tif (","\t\t\tsegment.isEnd && // only allow resizing on the final segment for an event","\t\t\tisEventResizable(event)","\t\t) {","\t\t\tt.resizableDayEvent(event, eventElement, segment); // use `t` so subclasses can override","\t\t}","","\t\t// attach all other handlers.","\t\t// needs to be after, because resizableDayEvent might stopImmediatePropagation on click","\t\teventElementHandlers(event, eventElement);","\t}","","\t","\tfunction draggableDayEvent(event, eventElement) {","\t\tvar hoverListener = getHoverListener();","\t\tvar dayDelta;","\t\teventElement.draggable({","\t\t\tdelay: 50,","\t\t\topacity: opt('dragOpacity'),","\t\t\trevertDuration: opt('dragRevertDuration'),","\t\t\tstart: function(ev, ui) {","\t\t\t\ttrigger('eventDragStart', eventElement, event, ev, ui);","\t\t\t\thideEvents(event, eventElement);","\t\t\t\thoverListener.start(function(cell, origCell, rowDelta, colDelta) {","\t\t\t\t\teventElement.draggable('option', 'revert', !cell || !rowDelta && !colDelta);","\t\t\t\t\tclearOverlays();","\t\t\t\t\tif (cell) {","\t\t\t\t\t\tvar origDate = cellToDate(origCell);","\t\t\t\t\t\tvar date = cellToDate(cell);","\t\t\t\t\t\tdayDelta = dayDiff(date, origDate);","\t\t\t\t\t\trenderDayOverlay(","\t\t\t\t\t\t\taddDays(cloneDate(event.start), dayDelta),","\t\t\t\t\t\t\taddDays(exclEndDay(event), dayDelta)","\t\t\t\t\t\t);","\t\t\t\t\t}else{","\t\t\t\t\t\tdayDelta = 0;","\t\t\t\t\t}","\t\t\t\t}, ev, 'drag');","\t\t\t},","\t\t\tstop: function(ev, ui) {","\t\t\t\thoverListener.stop();","\t\t\t\tclearOverlays();","\t\t\t\ttrigger('eventDragStop', eventElement, event, ev, ui);","\t\t\t\tif (dayDelta) {","\t\t\t\t\teventDrop(this, event, dayDelta, 0, event.allDay, ev, ui);","\t\t\t\t}else{","\t\t\t\t\teventElement.css('filter', ''); // clear IE opacity side-effects","\t\t\t\t\tshowEvents(event, eventElement);","\t\t\t\t}","\t\t\t}","\t\t});","\t}","","\t","\tfunction resizableDayEvent(event, element, segment) {","\t\tvar isRTL = opt('isRTL');","\t\tvar direction = isRTL ? 'w' : 'e';","\t\tvar handle = element.find('.ui-resizable-' + direction); // TODO: stop using this class because we aren't using jqui for this","\t\tvar isResizing = false;","\t\t","\t\t// TODO: look into using jquery-ui mouse widget for this stuff","\t\tdisableTextSelection(element); // prevent native <a> selection for IE","\t\telement","\t\t\t.mousedown(function(ev) { // prevent native <a> selection for others","\t\t\t\tev.preventDefault();","\t\t\t})","\t\t\t.click(function(ev) {","\t\t\t\tif (isResizing) {","\t\t\t\t\tev.preventDefault(); // prevent link from being visited (only method that worked in IE6)","\t\t\t\t\tev.stopImmediatePropagation(); // prevent fullcalendar eventClick handler from being called","\t\t\t\t\t                               // (eventElementHandlers needs to be bound after resizableDayEvent)","\t\t\t\t}","\t\t\t});","\t\t","\t\thandle.mousedown(function(ev) {","\t\t\tif (ev.which != 1) {","\t\t\t\treturn; // needs to be left mouse button","\t\t\t}","\t\t\tisResizing = true;","\t\t\tvar hoverListener = getHoverListener();","\t\t\tvar rowCnt = getRowCnt();","\t\t\tvar colCnt = getColCnt();","\t\t\tvar elementTop = element.css('top');","\t\t\tvar dayDelta;","\t\t\tvar helpers;","\t\t\tvar eventCopy = $.extend({}, event);","\t\t\tvar minCellOffset = dayOffsetToCellOffset( dateToDayOffset(event.start) );","\t\t\tclearSelection();","\t\t\t$('body')","\t\t\t\t.css('cursor', direction + '-resize')","\t\t\t\t.one('mouseup', mouseup);","\t\t\ttrigger('eventResizeStart', this, event, ev);","\t\t\thoverListener.start(function(cell, origCell) {","\t\t\t\tif (cell) {","","\t\t\t\t\tvar origCellOffset = cellToCellOffset(origCell);","\t\t\t\t\tvar cellOffset = cellToCellOffset(cell);","","\t\t\t\t\t// don't let resizing move earlier than start date cell","\t\t\t\t\tcellOffset = Math.max(cellOffset, minCellOffset);","","\t\t\t\t\tdayDelta =","\t\t\t\t\t\tcellOffsetToDayOffset(cellOffset) -","\t\t\t\t\t\tcellOffsetToDayOffset(origCellOffset);","","\t\t\t\t\tif (dayDelta) {","\t\t\t\t\t\teventCopy.end = addDays(eventEnd(event), dayDelta, true);","\t\t\t\t\t\tvar oldHelpers = helpers;","","\t\t\t\t\t\thelpers = renderTempDayEvent(eventCopy, segment.row, elementTop);","\t\t\t\t\t\thelpers = $(helpers); // turn array into a jQuery object","","\t\t\t\t\t\thelpers.find('*').css('cursor', direction + '-resize');","\t\t\t\t\t\tif (oldHelpers) {","\t\t\t\t\t\t\toldHelpers.remove();","\t\t\t\t\t\t}","","\t\t\t\t\t\thideEvents(event);","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\tif (helpers) {","\t\t\t\t\t\t\tshowEvents(event);","\t\t\t\t\t\t\thelpers.remove();","\t\t\t\t\t\t\thelpers = null;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t\tclearOverlays();","\t\t\t\t\trenderDayOverlay( // coordinate grid already rebuilt with hoverListener.start()","\t\t\t\t\t\tevent.start,","\t\t\t\t\t\taddDays( exclEndDay(event), dayDelta )","\t\t\t\t\t\t// TODO: instead of calling renderDayOverlay() with dates,","\t\t\t\t\t\t// call _renderDayOverlay (or whatever) with cell offsets.","\t\t\t\t\t);","\t\t\t\t}","\t\t\t}, ev);","\t\t\t","\t\t\tfunction mouseup(ev) {","\t\t\t\ttrigger('eventResizeStop', this, event, ev);","\t\t\t\t$('body').css('cursor', '');","\t\t\t\thoverListener.stop();","\t\t\t\tclearOverlays();","\t\t\t\tif (dayDelta) {","\t\t\t\t\teventResize(this, event, dayDelta, 0, ev);","\t\t\t\t\t// event redraw will clear helpers","\t\t\t\t}","\t\t\t\t// otherwise, the drag handler already restored the old events","\t\t\t\t","\t\t\t\tsetTimeout(function() { // make this happen after the element's click event","\t\t\t\t\tisResizing = false;","\t\t\t\t},0);","\t\t\t}","\t\t});","\t}","\t","","}","","","","/* Generalized Segment Utilities","-------------------------------------------------------------------------------------------------*/","","","function isDaySegmentCollision(segment, otherSegments) {","\tfor (var i=0; i<otherSegments.length; i++) {","\t\tvar otherSegment = otherSegments[i];","\t\tif (","\t\t\totherSegment.leftCol <= segment.rightCol &&","\t\t\totherSegment.rightCol >= segment.leftCol","\t\t) {","\t\t\treturn true;","\t\t}","\t}","\treturn false;","}","","","function segmentElementEach(segments, callback) { // TODO: use in AgendaView?","\tfor (var i=0; i<segments.length; i++) {","\t\tvar segment = segments[i];","\t\tvar element = segment.element;","\t\tif (element) {","\t\t\tcallback(segment, element, i);","\t\t}","\t}","}","","","// A cmp function for determining which segments should appear higher up","function compareDaySegments(a, b) {","\treturn (b.rightCol - b.leftCol) - (a.rightCol - a.leftCol) || // put wider events first","\t\tb.event.allDay - a.event.allDay || // if tie, put all-day events first (booleans cast to 0/1)","\t\ta.event.start - b.event.start || // if a tie, sort by event start date","\t\t(a.event.title || '').localeCompare(b.event.title) // if a tie, sort by event title","}","","",";;","","//BUG: unselect needs to be triggered when events are dragged+dropped","","function SelectionManager() {","\tvar t = this;","\t","\t","\t// exports","\tt.select = select;","\tt.unselect = unselect;","\tt.reportSelection = reportSelection;","\tt.daySelectionMousedown = daySelectionMousedown;","\t","\t","\t// imports","\tvar opt = t.opt;","\tvar trigger = t.trigger;","\tvar defaultSelectionEnd = t.defaultSelectionEnd;","\tvar renderSelection = t.renderSelection;","\tvar clearSelection = t.clearSelection;","\t","\t","\t// locals","\tvar selected = false;","","","","\t// unselectAuto","\tif (opt('selectable') && opt('unselectAuto')) {","\t\t$(document).mousedown(function(ev) {","\t\t\tvar ignore = opt('unselectCancel');","\t\t\tif (ignore) {","\t\t\t\tif ($(ev.target).parents(ignore).length) { // could be optimized to stop after first match","\t\t\t\t\treturn;","\t\t\t\t}","\t\t\t}","\t\t\tunselect(ev);","\t\t});","\t}","\t","","\tfunction select(startDate, endDate, allDay) {","\t\tunselect();","\t\tif (!endDate) {","\t\t\tendDate = defaultSelectionEnd(startDate, allDay);","\t\t}","\t\trenderSelection(startDate, endDate, allDay);","\t\treportSelection(startDate, endDate, allDay);","\t}","\t","\t","\tfunction unselect(ev) {","\t\tif (selected) {","\t\t\tselected = false;","\t\t\tclearSelection();","\t\t\ttrigger('unselect', null, ev);","\t\t}","\t}","\t","\t","\tfunction reportSelection(startDate, endDate, allDay, ev) {","\t\tselected = true;","\t\ttrigger('select', null, startDate, endDate, allDay, ev);","\t}","\t","\t","\tfunction daySelectionMousedown(ev) { // not really a generic manager method, oh well","\t\tvar cellToDate = t.cellToDate;","\t\tvar getIsCellAllDay = t.getIsCellAllDay;","\t\tvar hoverListener = t.getHoverListener();","\t\tvar reportDayClick = t.reportDayClick; // this is hacky and sort of weird","\t\tif (ev.which == 1 && opt('selectable')) { // which==1 means left mouse button","\t\t\tunselect(ev);","\t\t\tvar _mousedownElement = this;","\t\t\tvar dates;","\t\t\thoverListener.start(function(cell, origCell) { // TODO: maybe put cellToDate/getIsCellAllDay info in cell","\t\t\t\tclearSelection();","\t\t\t\tif (cell && getIsCellAllDay(cell)) {","\t\t\t\t\tdates = [ cellToDate(origCell), cellToDate(cell) ].sort(dateCompare);","\t\t\t\t\trenderSelection(dates[0], dates[1], true);","\t\t\t\t}else{","\t\t\t\t\tdates = null;","\t\t\t\t}","\t\t\t}, ev);","\t\t\t$(document).one('mouseup', function(ev) {","\t\t\t\thoverListener.stop();","\t\t\t\tif (dates) {","\t\t\t\t\tif (+dates[0] == +dates[1]) {","\t\t\t\t\t\treportDayClick(dates[0], true, ev);","\t\t\t\t\t}","\t\t\t\t\treportSelection(dates[0], dates[1], true, ev);","\t\t\t\t}","\t\t\t});","\t\t}","\t}","","","}","",";;"," ","function OverlayManager() {","\tvar t = this;","\t","\t","\t// exports","\tt.renderOverlay = renderOverlay;","\tt.clearOverlays = clearOverlays;","\t","\t","\t// locals","\tvar usedOverlays = [];","\tvar unusedOverlays = [];","\t","\t","\tfunction renderOverlay(rect, parent) {","\t\tvar e = unusedOverlays.shift();","\t\tif (!e) {","\t\t\te = $(\"<div class='fc-cell-overlay' style='position:absolute;z-index:3'/>\");","\t\t}","\t\tif (e[0].parentNode != parent[0]) {","\t\t\te.appendTo(parent);","\t\t}","\t\tusedOverlays.push(e.css(rect).show());","\t\treturn e;","\t}","\t","","\tfunction clearOverlays() {","\t\tvar e;","\t\twhile (e = usedOverlays.shift()) {","\t\t\tunusedOverlays.push(e.hide().unbind());","\t\t}","\t}","","","}","",";;","","function CoordinateGrid(buildFunc) {","","\tvar t = this;","\tvar rows;","\tvar cols;","\t","\t","\tt.build = function() {","\t\trows = [];","\t\tcols = [];","\t\tbuildFunc(rows, cols);","\t};","\t","\t","\tt.cell = function(x, y) {","\t\tvar rowCnt = rows.length;","\t\tvar colCnt = cols.length;","\t\tvar i, r=-1, c=-1;","\t\tfor (i=0; i<rowCnt; i++) {","\t\t\tif (y >= rows[i][0] && y < rows[i][1]) {","\t\t\t\tr = i;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\tfor (i=0; i<colCnt; i++) {","\t\t\tif (x >= cols[i][0] && x < cols[i][1]) {","\t\t\t\tc = i;","\t\t\t\tbreak;","\t\t\t}","\t\t}","\t\treturn (r>=0 && c>=0) ? { row:r, col:c } : null;","\t};","\t","\t","\tt.rect = function(row0, col0, row1, col1, originElement) { // row1,col1 is inclusive","\t\tvar origin = originElement.offset();","\t\treturn {","\t\t\ttop: rows[row0][0] - origin.top,","\t\t\tleft: cols[col0][0] - origin.left,","\t\t\twidth: cols[col1][1] - cols[col0][0],","\t\t\theight: rows[row1][1] - rows[row0][0]","\t\t};","\t};","","}","",";;","","function HoverListener(coordinateGrid) {","","","\tvar t = this;","\tvar bindType;","\tvar change;","\tvar firstCell;","\tvar cell;","\t","\t","\tt.start = function(_change, ev, _bindType) {","\t\tchange = _change;","\t\tfirstCell = cell = null;","\t\tcoordinateGrid.build();","\t\tmouse(ev);","\t\tbindType = _bindType || 'mousemove';","\t\t$(document).bind(bindType, mouse);","\t};","\t","\t","\tfunction mouse(ev) {","\t\t_fixUIEvent(ev); // see below","\t\tvar newCell = coordinateGrid.cell(ev.pageX, ev.pageY);","\t\tif (!newCell != !cell || newCell && (newCell.row != cell.row || newCell.col != cell.col)) {","\t\t\tif (newCell) {","\t\t\t\tif (!firstCell) {","\t\t\t\t\tfirstCell = newCell;","\t\t\t\t}","\t\t\t\tchange(newCell, firstCell, newCell.row-firstCell.row, newCell.col-firstCell.col);","\t\t\t}else{","\t\t\t\tchange(newCell, firstCell);","\t\t\t}","\t\t\tcell = newCell;","\t\t}","\t}","\t","\t","\tt.stop = function() {","\t\t$(document).unbind(bindType, mouse);","\t\treturn cell;","\t};","\t","\t","}","","","","// this fix was only necessary for jQuery UI 1.8.16 (and jQuery 1.7 or 1.7.1)","// upgrading to jQuery UI 1.8.17 (and using either jQuery 1.7 or 1.7.1) fixed the problem","// but keep this in here for 1.8.16 users","// and maybe remove it down the line","","function _fixUIEvent(event) { // for issue 1168","\tif (event.pageX === undefined) {","\t\tevent.pageX = event.originalEvent.pageX;","\t\tevent.pageY = event.originalEvent.pageY;","\t}","}",";;","","function HorizontalPositionCache(getElement) {","","\tvar t = this,","\t\telements = {},","\t\tlefts = {},","\t\trights = {};","\t\t","\tfunction e(i) {","\t\treturn elements[i] = elements[i] || getElement(i);","\t}","\t","\tt.left = function(i) {","\t\treturn lefts[i] = lefts[i] === undefined ? e(i).position().left : lefts[i];","\t};","\t","\tt.right = function(i) {","\t\treturn rights[i] = rights[i] === undefined ? t.left(i) + e(i).width() : rights[i];","\t};","\t","\tt.clear = function() {","\t\telements = {};","\t\tlefts = {};","\t\trights = {};","\t};","\t","}","",";;",""],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":3},"action":"insert","lines":["$(document).ready(function(){","   $('[data-toggle=\"offcanvas\"]').click(function(){","       $(\"#navigation\").toggleClass(\"hidden-xs\");","   });","});"],"id":9}],[{"start":{"row":4,"column":3},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["",""]},{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["/"]},{"start":{"row":6,"column":1},"end":{"row":6,"column":2},"action":"insert","lines":["/"]},{"start":{"row":6,"column":2},"end":{"row":6,"column":3},"action":"insert","lines":["c"]},{"start":{"row":6,"column":3},"end":{"row":6,"column":4},"action":"insert","lines":["a"]},{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":["l"]}],[{"start":{"row":6,"column":5},"end":{"row":6,"column":6},"action":"insert","lines":["e"],"id":11},{"start":{"row":6,"column":6},"end":{"row":6,"column":7},"action":"insert","lines":["n"]},{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"insert","lines":["d"]},{"start":{"row":6,"column":8},"end":{"row":6,"column":9},"action":"insert","lines":["a"]},{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["r"]}],[{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"insert","lines":[" "],"id":12},{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"insert","lines":["s"]},{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"insert","lines":["t"]},{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"insert","lines":["f"]},{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["\\"]},{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"insert","lines":["]"]}],[{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"remove","lines":["]"],"id":13},{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"remove","lines":["\\"]}],[{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["u"],"id":14}],[{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"remove","lines":["u"],"id":15},{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"remove","lines":["f"]}],[{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"insert","lines":["u"],"id":16},{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["f"]},{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"insert","lines":["f"]}],[{"start":{"row":6,"column":16},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":17}],[{"start":{"row":7,"column":0},"end":{"row":44,"column":11},"action":"insert","lines":["var app = {","  settings: {","    container: $('.calendar'),","    calendar: $('.front'),","    days: $('.weeks span'),","    form: $('.back'),","    input: $('.back input'),","    buttons: $('.back button')","  },","","  init: function() {","    instance = this;","    settings = this.settings;","    this.bindUIActions();","  },","","  swap: function(currentSide, desiredSide) {","    settings.container.toggleClass('flip');","","    currentSide.fadeOut(900);","    currentSide.hide();","    desiredSide.show();","","  },","","  bindUIActions: function() {","    settings.days.on('click', function(){","      instance.swap(settings.calendar, settings.form);","      settings.input.focus();","    });","","    settings.buttons.on('click', function(){","      instance.swap(settings.form, settings.calendar);","    });","  }","}","","app.init();"],"id":18}],[{"start":{"row":7,"column":0},"end":{"row":44,"column":11},"action":"remove","lines":["var app = {","  settings: {","    container: $('.calendar'),","    calendar: $('.front'),","    days: $('.weeks span'),","    form: $('.back'),","    input: $('.back input'),","    buttons: $('.back button')","  },","","  init: function() {","    instance = this;","    settings = this.settings;","    this.bindUIActions();","  },","","  swap: function(currentSide, desiredSide) {","    settings.container.toggleClass('flip');","","    currentSide.fadeOut(900);","    currentSide.hide();","    desiredSide.show();","","  },","","  bindUIActions: function() {","    settings.days.on('click', function(){","      instance.swap(settings.calendar, settings.form);","      settings.input.focus();","    });","","    settings.buttons.on('click', function(){","      instance.swap(settings.form, settings.calendar);","    });","  }","}","","app.init();"],"id":19},{"start":{"row":7,"column":0},"end":{"row":77,"column":5},"action":"insert","lines":["$(document).ready(function() {","    ","    $('#calendar').fullCalendar({","      header: {","        left: 'prev,next today',","        center: 'title',","        right: 'month,basicWeek,basicDay'","      },","      defaultDate: '2016-12-12',","      navLinks: true, // can click day/week names to navigate views","      editable: true,","      eventLimit: true, // allow \"more\" link when too many events","      events: [","        {","          title: 'All Day Event',","          start: '2016-12-01'","        },","        {","          title: 'Long Event',","          start: '2016-12-07',","          end: '2016-12-10'","        },","        {","          id: 999,","          title: 'Repeating Event',","          start: '2016-12-09T16:00:00'","        },","        {","          id: 999,","          title: 'Repeating Event',","          start: '2016-12-16T16:00:00'","        },","        {","          title: 'Conference',","          start: '2016-12-11',","          end: '2016-12-13'","        },","        {","          title: 'Meeting',","          start: '2016-12-12T10:30:00',","          end: '2016-12-12T12:30:00'","        },","        {","          title: 'Lunch',","          start: '2016-12-12T12:00:00'","        },","        {","          title: 'Meeting',","          start: '2016-12-12T14:30:00'","        },","        {","          title: 'Happy Hour',","          start: '2016-12-12T17:30:00'","        },","        {","          title: 'Dinner',","          start: '2016-12-12T20:00:00'","        },","        {","          title: 'Birthday Party',","          start: '2016-12-13T07:00:00'","        },","        {","          title: 'Click for Google',","          url: 'https://google.com/',","          start: '2016-12-28'","        }","      ]","    });","    ","  });"]}],[{"start":{"row":8,"column":3},"end":{"row":8,"column":4},"action":"remove","lines":[" "],"id":20},{"start":{"row":8,"column":0},"end":{"row":8,"column":3},"action":"remove","lines":["   "]},{"start":{"row":7,"column":30},"end":{"row":8,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":7,"column":0},"end":{"row":76,"column":5},"action":"remove","lines":["$(document).ready(function() {","    $('#calendar').fullCalendar({","      header: {","        left: 'prev,next today',","        center: 'title',","        right: 'month,basicWeek,basicDay'","      },","      defaultDate: '2016-12-12',","      navLinks: true, // can click day/week names to navigate views","      editable: true,","      eventLimit: true, // allow \"more\" link when too many events","      events: [","        {","          title: 'All Day Event',","          start: '2016-12-01'","        },","        {","          title: 'Long Event',","          start: '2016-12-07',","          end: '2016-12-10'","        },","        {","          id: 999,","          title: 'Repeating Event',","          start: '2016-12-09T16:00:00'","        },","        {","          id: 999,","          title: 'Repeating Event',","          start: '2016-12-16T16:00:00'","        },","        {","          title: 'Conference',","          start: '2016-12-11',","          end: '2016-12-13'","        },","        {","          title: 'Meeting',","          start: '2016-12-12T10:30:00',","          end: '2016-12-12T12:30:00'","        },","        {","          title: 'Lunch',","          start: '2016-12-12T12:00:00'","        },","        {","          title: 'Meeting',","          start: '2016-12-12T14:30:00'","        },","        {","          title: 'Happy Hour',","          start: '2016-12-12T17:30:00'","        },","        {","          title: 'Dinner',","          start: '2016-12-12T20:00:00'","        },","        {","          title: 'Birthday Party',","          start: '2016-12-13T07:00:00'","        },","        {","          title: 'Click for Google',","          url: 'https://google.com/',","          start: '2016-12-28'","        }","      ]","    });","    ","  });"],"id":21},{"start":{"row":7,"column":0},"end":{"row":359,"column":4},"action":"insert","lines":["!function() {","","  var today = moment();","","  function Calendar(selector, events) {","    this.el = document.querySelector(selector);","    this.events = events;","    this.current = moment().date(1);","    this.draw();","    var current = document.querySelector('.today');","    if(current) {","      var self = this;","      window.setTimeout(function() {","        self.openDay(current);","      }, 500);","    }","  }","","  Calendar.prototype.draw = function() {","    //Create Header","    this.drawHeader();","","    //Draw Month","    this.drawMonth();","","    this.drawLegend();","  }","","  Calendar.prototype.drawHeader = function() {","    var self = this;","    if(!this.header) {","      //Create the header elements","      this.header = createElement('div', 'header');","      this.header.className = 'header';","","      this.title = createElement('h1');","","      var right = createElement('div', 'right');","      right.addEventListener('click', function() { self.nextMonth(); });","","      var left = createElement('div', 'left');","      left.addEventListener('click', function() { self.prevMonth(); });","","      //Append the Elements","      this.header.appendChild(this.title); ","      this.header.appendChild(right);","      this.header.appendChild(left);","      this.el.appendChild(this.header);","    }","","    this.title.innerHTML = this.current.format('MMMM YYYY');","  }","","  Calendar.prototype.drawMonth = function() {","    var self = this;","    ","    this.events.forEach(function(ev) {","     ev.date = self.current.clone().date(Math.random() * (29 - 1) + 1);","    });","    ","    ","    if(this.month) {","      this.oldMonth = this.month;","      this.oldMonth.className = 'month out ' + (self.next ? 'next' : 'prev');","      this.oldMonth.addEventListener('webkitAnimationEnd', function() {","        self.oldMonth.parentNode.removeChild(self.oldMonth);","        self.month = createElement('div', 'month');","        self.backFill();","        self.currentMonth();","        self.fowardFill();","        self.el.appendChild(self.month);","        window.setTimeout(function() {","          self.month.className = 'month in ' + (self.next ? 'next' : 'prev');","        }, 16);","      });","    } else {","        this.month = createElement('div', 'month');","        this.el.appendChild(this.month);","        this.backFill();","        this.currentMonth();","        this.fowardFill();","        this.month.className = 'month new';","    }","  }","","  Calendar.prototype.backFill = function() {","    var clone = this.current.clone();","    var dayOfWeek = clone.day();","","    if(!dayOfWeek) { return; }","","    clone.subtract('days', dayOfWeek+1);","","    for(var i = dayOfWeek; i > 0 ; i--) {","      this.drawDay(clone.add('days', 1));","    }","  }","","  Calendar.prototype.fowardFill = function() {","    var clone = this.current.clone().add('months', 1).subtract('days', 1);","    var dayOfWeek = clone.day();","","    if(dayOfWeek === 6) { return; }","","    for(var i = dayOfWeek; i < 6 ; i++) {","      this.drawDay(clone.add('days', 1));","    }","  }","","  Calendar.prototype.currentMonth = function() {","    var clone = this.current.clone();","","    while(clone.month() === this.current.month()) {","      this.drawDay(clone);","      clone.add('days', 1);","    }","  }","","  Calendar.prototype.getWeek = function(day) {","    if(!this.week || day.day() === 0) {","      this.week = createElement('div', 'week');","      this.month.appendChild(this.week);","    }","  }","","  Calendar.prototype.drawDay = function(day) {","    var self = this;","    this.getWeek(day);","","    //Outer Day","    var outer = createElement('div', this.getDayClass(day));","    outer.addEventListener('click', function() {","      self.openDay(this);","    });","","    //Day Name","    var name = createElement('div', 'day-name', day.format('ddd'));","","    //Day Number","    var number = createElement('div', 'day-number', day.format('DD'));","","","    //Events","    var events = createElement('div', 'day-events');","    this.drawEvents(day, events);","","    outer.appendChild(name);","    outer.appendChild(number);","    outer.appendChild(events);","    this.week.appendChild(outer);","  }","","  Calendar.prototype.drawEvents = function(day, element) {","    if(day.month() === this.current.month()) {","      var todaysEvents = this.events.reduce(function(memo, ev) {","        if(ev.date.isSame(day, 'day')) {","          memo.push(ev);","        }","        return memo;","      }, []);","","      todaysEvents.forEach(function(ev) {","        var evSpan = createElement('span', ev.color);","        element.appendChild(evSpan);","      });","    }","  }","","  Calendar.prototype.getDayClass = function(day) {","    classes = ['day'];","    if(day.month() !== this.current.month()) {","      classes.push('other');","    } else if (today.isSame(day, 'day')) {","      classes.push('today');","    }","    return classes.join(' ');","  }","","  Calendar.prototype.openDay = function(el) {","    var details, arrow;","    var dayNumber = +el.querySelectorAll('.day-number')[0].innerText || +el.querySelectorAll('.day-number')[0].textContent;","    var day = this.current.clone().date(dayNumber);","","    var currentOpened = document.querySelector('.details');","","    //Check to see if there is an open detais box on the current row","    if(currentOpened && currentOpened.parentNode === el.parentNode) {","      details = currentOpened;","      arrow = document.querySelector('.arrow');","    } else {","      //Close the open events on differnt week row","      //currentOpened && currentOpened.parentNode.removeChild(currentOpened);","      if(currentOpened) {","        currentOpened.addEventListener('webkitAnimationEnd', function() {","          currentOpened.parentNode.removeChild(currentOpened);","        });","        currentOpened.addEventListener('oanimationend', function() {","          currentOpened.parentNode.removeChild(currentOpened);","        });","        currentOpened.addEventListener('msAnimationEnd', function() {","          currentOpened.parentNode.removeChild(currentOpened);","        });","        currentOpened.addEventListener('animationend', function() {","          currentOpened.parentNode.removeChild(currentOpened);","        });","        currentOpened.className = 'details out';","      }","","      //Create the Details Container","      details = createElement('div', 'details in');","","      //Create the arrow","      var arrow = createElement('div', 'arrow');","","      //Create the event wrapper","","      details.appendChild(arrow);","      el.parentNode.appendChild(details);","    }","","    var todaysEvents = this.events.reduce(function(memo, ev) {","      if(ev.date.isSame(day, 'day')) {","        memo.push(ev);","      }","      return memo;","    }, []);","","    this.renderEvents(todaysEvents, details);","","    arrow.style.left = el.offsetLeft - el.parentNode.offsetLeft + 27 + 'px';","  }","","  Calendar.prototype.renderEvents = function(events, ele) {","    //Remove any events in the current details element","    var currentWrapper = ele.querySelector('.events');","    var wrapper = createElement('div', 'events in' + (currentWrapper ? ' new' : ''));","","    events.forEach(function(ev) {","      var div = createElement('div', 'event');","      var square = createElement('div', 'event-category ' + ev.color);","      var span = createElement('span', '', ev.eventName);","","      div.appendChild(square);","      div.appendChild(span);","      wrapper.appendChild(div);","    });","","    if(!events.length) {","      var div = createElement('div', 'event empty');","      var span = createElement('span', '', 'No Events');","","      div.appendChild(span);","      wrapper.appendChild(div);","    }","","    if(currentWrapper) {","      currentWrapper.className = 'events out';","      currentWrapper.addEventListener('webkitAnimationEnd', function() {","        currentWrapper.parentNode.removeChild(currentWrapper);","        ele.appendChild(wrapper);","      });","      currentWrapper.addEventListener('oanimationend', function() {","        currentWrapper.parentNode.removeChild(currentWrapper);","        ele.appendChild(wrapper);","      });","      currentWrapper.addEventListener('msAnimationEnd', function() {","        currentWrapper.parentNode.removeChild(currentWrapper);","        ele.appendChild(wrapper);","      });","      currentWrapper.addEventListener('animationend', function() {","        currentWrapper.parentNode.removeChild(currentWrapper);","        ele.appendChild(wrapper);","      });","    } else {","      ele.appendChild(wrapper);","    }","  }","","  Calendar.prototype.drawLegend = function() {","    var legend = createElement('div', 'legend');","    var calendars = this.events.map(function(e) {","      return e.calendar + '|' + e.color;","    }).reduce(function(memo, e) {","      if(memo.indexOf(e) === -1) {","        memo.push(e);","      }","      return memo;","    }, []).forEach(function(e) {","      var parts = e.split('|');","      var entry = createElement('span', 'entry ' +  parts[1], parts[0]);","      legend.appendChild(entry);","    });","    this.el.appendChild(legend);","  }","","  Calendar.prototype.nextMonth = function() {","    this.current.add('months', 1);","    this.next = true;","    this.draw();","  }","","  Calendar.prototype.prevMonth = function() {","    this.current.subtract('months', 1);","    this.next = false;","    this.draw();","  }","","  window.Calendar = Calendar;","","  function createElement(tagName, className, innerText) {","    var ele = document.createElement(tagName);","    if(className) {","      ele.className = className;","    }","    if(innerText) {","      ele.innderText = ele.textContent = innerText;","    }","    return ele;","  }","}();","","!function() {","  var data = [","    { eventName: 'Lunch Meeting w/ Mark', calendar: 'Work', color: 'orange' },","    { eventName: 'Interview - Jr. Web Developer', calendar: 'Work', color: 'orange' },","    { eventName: 'Demo New App to the Board', calendar: 'Work', color: 'orange' },","    { eventName: 'Dinner w/ Marketing', calendar: 'Work', color: 'orange' },","","    { eventName: 'Game vs Portalnd', calendar: 'Sports', color: 'blue' },","    { eventName: 'Game vs Houston', calendar: 'Sports', color: 'blue' },","    { eventName: 'Game vs Denver', calendar: 'Sports', color: 'blue' },","    { eventName: 'Game vs San Degio', calendar: 'Sports', color: 'blue' },","","    { eventName: 'School Play', calendar: 'Kids', color: 'yellow' },","    { eventName: 'Parent/Teacher Conference', calendar: 'Kids', color: 'yellow' },","    { eventName: 'Pick up from Soccer Practice', calendar: 'Kids', color: 'yellow' },","    { eventName: 'Ice Cream Night', calendar: 'Kids', color: 'yellow' },","","    { eventName: 'Free Tamale Night', calendar: 'Other', color: 'green' },","    { eventName: 'Bowling Team', calendar: 'Other', color: 'green' },","    { eventName: 'Teach Kids to Code', calendar: 'Other', color: 'green' },","    { eventName: 'Startup Weekend', calendar: 'Other', color: 'green' }","  ];","","  ","","  function addDate(ev) {","    ","  }","","  var calendar = new Calendar('#calendar', data);","","}();"]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":3},"action":"insert","lines":["// "],"id":22},{"start":{"row":9,"column":0},"end":{"row":9,"column":3},"action":"insert","lines":["// "]},{"start":{"row":11,"column":0},"end":{"row":11,"column":3},"action":"insert","lines":["// "]},{"start":{"row":12,"column":0},"end":{"row":12,"column":3},"action":"insert","lines":["// "]},{"start":{"row":13,"column":0},"end":{"row":13,"column":3},"action":"insert","lines":["// "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":3},"action":"insert","lines":["// "]},{"start":{"row":15,"column":0},"end":{"row":15,"column":3},"action":"insert","lines":["// "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":3},"action":"insert","lines":["// "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":3},"action":"insert","lines":["// "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":3},"action":"insert","lines":["// "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":3},"action":"insert","lines":["// "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":3},"action":"insert","lines":["// "]},{"start":{"row":21,"column":0},"end":{"row":21,"column":3},"action":"insert","lines":["// "]},{"start":{"row":22,"column":0},"end":{"row":22,"column":3},"action":"insert","lines":["// "]},{"start":{"row":23,"column":0},"end":{"row":23,"column":3},"action":"insert","lines":["// "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":3},"action":"insert","lines":["// "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":3},"action":"insert","lines":["// "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":3},"action":"insert","lines":["// "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":3},"action":"insert","lines":["// "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":3},"action":"insert","lines":["// "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":3},"action":"insert","lines":["// "]},{"start":{"row":33,"column":0},"end":{"row":33,"column":3},"action":"insert","lines":["// "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":3},"action":"insert","lines":["// "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":3},"action":"insert","lines":["// "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":3},"action":"insert","lines":["// "]},{"start":{"row":38,"column":0},"end":{"row":38,"column":3},"action":"insert","lines":["// "]},{"start":{"row":39,"column":0},"end":{"row":39,"column":3},"action":"insert","lines":["// "]},{"start":{"row":40,"column":0},"end":{"row":40,"column":3},"action":"insert","lines":["// "]},{"start":{"row":42,"column":0},"end":{"row":42,"column":3},"action":"insert","lines":["// "]},{"start":{"row":44,"column":0},"end":{"row":44,"column":3},"action":"insert","lines":["// "]},{"start":{"row":45,"column":0},"end":{"row":45,"column":3},"action":"insert","lines":["// "]},{"start":{"row":47,"column":0},"end":{"row":47,"column":3},"action":"insert","lines":["// "]},{"start":{"row":48,"column":0},"end":{"row":48,"column":3},"action":"insert","lines":["// "]},{"start":{"row":50,"column":0},"end":{"row":50,"column":3},"action":"insert","lines":["// "]},{"start":{"row":51,"column":0},"end":{"row":51,"column":3},"action":"insert","lines":["// "]},{"start":{"row":52,"column":0},"end":{"row":52,"column":3},"action":"insert","lines":["// "]},{"start":{"row":53,"column":0},"end":{"row":53,"column":3},"action":"insert","lines":["// "]},{"start":{"row":54,"column":0},"end":{"row":54,"column":3},"action":"insert","lines":["// "]},{"start":{"row":55,"column":0},"end":{"row":55,"column":3},"action":"insert","lines":["// "]},{"start":{"row":57,"column":0},"end":{"row":57,"column":3},"action":"insert","lines":["// "]},{"start":{"row":58,"column":0},"end":{"row":58,"column":3},"action":"insert","lines":["// "]},{"start":{"row":60,"column":0},"end":{"row":60,"column":3},"action":"insert","lines":["// "]},{"start":{"row":61,"column":0},"end":{"row":61,"column":3},"action":"insert","lines":["// "]},{"start":{"row":63,"column":0},"end":{"row":63,"column":3},"action":"insert","lines":["// "]},{"start":{"row":64,"column":0},"end":{"row":64,"column":2},"action":"insert","lines":["//"]},{"start":{"row":65,"column":0},"end":{"row":65,"column":3},"action":"insert","lines":["// "]},{"start":{"row":68,"column":0},"end":{"row":68,"column":3},"action":"insert","lines":["// "]},{"start":{"row":69,"column":0},"end":{"row":69,"column":3},"action":"insert","lines":["// "]},{"start":{"row":70,"column":0},"end":{"row":70,"column":3},"action":"insert","lines":["// "]},{"start":{"row":71,"column":0},"end":{"row":71,"column":3},"action":"insert","lines":["// "]},{"start":{"row":72,"column":0},"end":{"row":72,"column":3},"action":"insert","lines":["// "]},{"start":{"row":73,"column":0},"end":{"row":73,"column":3},"action":"insert","lines":["// "]},{"start":{"row":74,"column":0},"end":{"row":74,"column":3},"action":"insert","lines":["// "]},{"start":{"row":75,"column":0},"end":{"row":75,"column":3},"action":"insert","lines":["// "]},{"start":{"row":76,"column":0},"end":{"row":76,"column":3},"action":"insert","lines":["// "]},{"start":{"row":77,"column":0},"end":{"row":77,"column":3},"action":"insert","lines":["// "]},{"start":{"row":78,"column":0},"end":{"row":78,"column":3},"action":"insert","lines":["// "]},{"start":{"row":79,"column":0},"end":{"row":79,"column":3},"action":"insert","lines":["// "]},{"start":{"row":80,"column":0},"end":{"row":80,"column":3},"action":"insert","lines":["// "]},{"start":{"row":81,"column":0},"end":{"row":81,"column":3},"action":"insert","lines":["// "]},{"start":{"row":82,"column":0},"end":{"row":82,"column":3},"action":"insert","lines":["// "]},{"start":{"row":83,"column":0},"end":{"row":83,"column":3},"action":"insert","lines":["// "]},{"start":{"row":84,"column":0},"end":{"row":84,"column":3},"action":"insert","lines":["// "]},{"start":{"row":85,"column":0},"end":{"row":85,"column":3},"action":"insert","lines":["// "]},{"start":{"row":86,"column":0},"end":{"row":86,"column":3},"action":"insert","lines":["// "]},{"start":{"row":87,"column":0},"end":{"row":87,"column":3},"action":"insert","lines":["// "]},{"start":{"row":88,"column":0},"end":{"row":88,"column":3},"action":"insert","lines":["// "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":3},"action":"insert","lines":["// "]},{"start":{"row":90,"column":0},"end":{"row":90,"column":3},"action":"insert","lines":["// "]},{"start":{"row":92,"column":0},"end":{"row":92,"column":3},"action":"insert","lines":["// "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":3},"action":"insert","lines":["// "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":3},"action":"insert","lines":["// "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":3},"action":"insert","lines":["// "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":3},"action":"insert","lines":["// "]},{"start":{"row":100,"column":0},"end":{"row":100,"column":3},"action":"insert","lines":["// "]},{"start":{"row":101,"column":0},"end":{"row":101,"column":3},"action":"insert","lines":["// "]},{"start":{"row":102,"column":0},"end":{"row":102,"column":3},"action":"insert","lines":["// "]},{"start":{"row":103,"column":0},"end":{"row":103,"column":3},"action":"insert","lines":["// "]},{"start":{"row":105,"column":0},"end":{"row":105,"column":3},"action":"insert","lines":["// "]},{"start":{"row":106,"column":0},"end":{"row":106,"column":3},"action":"insert","lines":["// "]},{"start":{"row":107,"column":0},"end":{"row":107,"column":3},"action":"insert","lines":["// "]},{"start":{"row":109,"column":0},"end":{"row":109,"column":3},"action":"insert","lines":["// "]},{"start":{"row":111,"column":0},"end":{"row":111,"column":3},"action":"insert","lines":["// "]},{"start":{"row":112,"column":0},"end":{"row":112,"column":3},"action":"insert","lines":["// "]},{"start":{"row":113,"column":0},"end":{"row":113,"column":3},"action":"insert","lines":["// "]},{"start":{"row":114,"column":0},"end":{"row":114,"column":3},"action":"insert","lines":["// "]},{"start":{"row":116,"column":0},"end":{"row":116,"column":3},"action":"insert","lines":["// "]},{"start":{"row":117,"column":0},"end":{"row":117,"column":3},"action":"insert","lines":["// "]},{"start":{"row":119,"column":0},"end":{"row":119,"column":3},"action":"insert","lines":["// "]},{"start":{"row":120,"column":0},"end":{"row":120,"column":3},"action":"insert","lines":["// "]},{"start":{"row":121,"column":0},"end":{"row":121,"column":3},"action":"insert","lines":["// "]},{"start":{"row":122,"column":0},"end":{"row":122,"column":3},"action":"insert","lines":["// "]},{"start":{"row":123,"column":0},"end":{"row":123,"column":3},"action":"insert","lines":["// "]},{"start":{"row":125,"column":0},"end":{"row":125,"column":3},"action":"insert","lines":["// "]},{"start":{"row":126,"column":0},"end":{"row":126,"column":3},"action":"insert","lines":["// "]},{"start":{"row":127,"column":0},"end":{"row":127,"column":3},"action":"insert","lines":["// "]},{"start":{"row":128,"column":0},"end":{"row":128,"column":3},"action":"insert","lines":["// "]},{"start":{"row":129,"column":0},"end":{"row":129,"column":3},"action":"insert","lines":["// "]},{"start":{"row":130,"column":0},"end":{"row":130,"column":3},"action":"insert","lines":["// "]},{"start":{"row":132,"column":0},"end":{"row":132,"column":3},"action":"insert","lines":["// "]},{"start":{"row":133,"column":0},"end":{"row":133,"column":3},"action":"insert","lines":["// "]},{"start":{"row":134,"column":0},"end":{"row":134,"column":3},"action":"insert","lines":["// "]},{"start":{"row":136,"column":0},"end":{"row":136,"column":3},"action":"insert","lines":["// "]},{"start":{"row":137,"column":0},"end":{"row":137,"column":3},"action":"insert","lines":["// "]},{"start":{"row":138,"column":0},"end":{"row":138,"column":3},"action":"insert","lines":["// "]},{"start":{"row":139,"column":0},"end":{"row":139,"column":3},"action":"insert","lines":["// "]},{"start":{"row":140,"column":0},"end":{"row":140,"column":3},"action":"insert","lines":["// "]},{"start":{"row":142,"column":0},"end":{"row":142,"column":3},"action":"insert","lines":["// "]},{"start":{"row":143,"column":0},"end":{"row":143,"column":3},"action":"insert","lines":["// "]},{"start":{"row":145,"column":0},"end":{"row":145,"column":3},"action":"insert","lines":["// "]},{"start":{"row":146,"column":0},"end":{"row":146,"column":3},"action":"insert","lines":["// "]},{"start":{"row":149,"column":0},"end":{"row":149,"column":3},"action":"insert","lines":["// "]},{"start":{"row":150,"column":0},"end":{"row":150,"column":3},"action":"insert","lines":["// "]},{"start":{"row":151,"column":0},"end":{"row":151,"column":3},"action":"insert","lines":["// "]},{"start":{"row":153,"column":0},"end":{"row":153,"column":3},"action":"insert","lines":["// "]},{"start":{"row":154,"column":0},"end":{"row":154,"column":3},"action":"insert","lines":["// "]},{"start":{"row":155,"column":0},"end":{"row":155,"column":3},"action":"insert","lines":["// "]},{"start":{"row":156,"column":0},"end":{"row":156,"column":3},"action":"insert","lines":["// "]},{"start":{"row":157,"column":0},"end":{"row":157,"column":3},"action":"insert","lines":["// "]},{"start":{"row":159,"column":0},"end":{"row":159,"column":3},"action":"insert","lines":["// "]},{"start":{"row":160,"column":0},"end":{"row":160,"column":3},"action":"insert","lines":["// "]},{"start":{"row":161,"column":0},"end":{"row":161,"column":3},"action":"insert","lines":["// "]},{"start":{"row":162,"column":0},"end":{"row":162,"column":3},"action":"insert","lines":["// "]},{"start":{"row":163,"column":0},"end":{"row":163,"column":3},"action":"insert","lines":["// "]},{"start":{"row":164,"column":0},"end":{"row":164,"column":3},"action":"insert","lines":["// "]},{"start":{"row":165,"column":0},"end":{"row":165,"column":3},"action":"insert","lines":["// "]},{"start":{"row":166,"column":0},"end":{"row":166,"column":3},"action":"insert","lines":["// "]},{"start":{"row":168,"column":0},"end":{"row":168,"column":3},"action":"insert","lines":["// "]},{"start":{"row":169,"column":0},"end":{"row":169,"column":3},"action":"insert","lines":["// "]},{"start":{"row":170,"column":0},"end":{"row":170,"column":3},"action":"insert","lines":["// "]},{"start":{"row":171,"column":0},"end":{"row":171,"column":3},"action":"insert","lines":["// "]},{"start":{"row":172,"column":0},"end":{"row":172,"column":3},"action":"insert","lines":["// "]},{"start":{"row":173,"column":0},"end":{"row":173,"column":3},"action":"insert","lines":["// "]},{"start":{"row":175,"column":0},"end":{"row":175,"column":3},"action":"insert","lines":["// "]},{"start":{"row":176,"column":0},"end":{"row":176,"column":3},"action":"insert","lines":["// "]},{"start":{"row":177,"column":0},"end":{"row":177,"column":3},"action":"insert","lines":["// "]},{"start":{"row":178,"column":0},"end":{"row":178,"column":3},"action":"insert","lines":["// "]},{"start":{"row":179,"column":0},"end":{"row":179,"column":3},"action":"insert","lines":["// "]},{"start":{"row":180,"column":0},"end":{"row":180,"column":3},"action":"insert","lines":["// "]},{"start":{"row":181,"column":0},"end":{"row":181,"column":3},"action":"insert","lines":["// "]},{"start":{"row":182,"column":0},"end":{"row":182,"column":3},"action":"insert","lines":["// "]},{"start":{"row":183,"column":0},"end":{"row":183,"column":3},"action":"insert","lines":["// "]},{"start":{"row":185,"column":0},"end":{"row":185,"column":3},"action":"insert","lines":["// "]},{"start":{"row":186,"column":0},"end":{"row":186,"column":3},"action":"insert","lines":["// "]},{"start":{"row":187,"column":0},"end":{"row":187,"column":3},"action":"insert","lines":["// "]},{"start":{"row":188,"column":0},"end":{"row":188,"column":3},"action":"insert","lines":["// "]},{"start":{"row":190,"column":0},"end":{"row":190,"column":3},"action":"insert","lines":["// "]},{"start":{"row":192,"column":0},"end":{"row":192,"column":3},"action":"insert","lines":["// "]},{"start":{"row":193,"column":0},"end":{"row":193,"column":3},"action":"insert","lines":["// "]},{"start":{"row":194,"column":0},"end":{"row":194,"column":3},"action":"insert","lines":["// "]},{"start":{"row":195,"column":0},"end":{"row":195,"column":3},"action":"insert","lines":["// "]},{"start":{"row":196,"column":0},"end":{"row":196,"column":3},"action":"insert","lines":["// "]},{"start":{"row":197,"column":0},"end":{"row":197,"column":3},"action":"insert","lines":["// "]},{"start":{"row":198,"column":0},"end":{"row":198,"column":3},"action":"insert","lines":["// "]},{"start":{"row":199,"column":0},"end":{"row":199,"column":3},"action":"insert","lines":["// "]},{"start":{"row":200,"column":0},"end":{"row":200,"column":3},"action":"insert","lines":["// "]},{"start":{"row":201,"column":0},"end":{"row":201,"column":3},"action":"insert","lines":["// "]},{"start":{"row":202,"column":0},"end":{"row":202,"column":3},"action":"insert","lines":["// "]},{"start":{"row":203,"column":0},"end":{"row":203,"column":3},"action":"insert","lines":["// "]},{"start":{"row":204,"column":0},"end":{"row":204,"column":3},"action":"insert","lines":["// "]},{"start":{"row":205,"column":0},"end":{"row":205,"column":3},"action":"insert","lines":["// "]},{"start":{"row":206,"column":0},"end":{"row":206,"column":3},"action":"insert","lines":["// "]},{"start":{"row":207,"column":0},"end":{"row":207,"column":3},"action":"insert","lines":["// "]},{"start":{"row":208,"column":0},"end":{"row":208,"column":3},"action":"insert","lines":["// "]},{"start":{"row":209,"column":0},"end":{"row":209,"column":3},"action":"insert","lines":["// "]},{"start":{"row":210,"column":0},"end":{"row":210,"column":3},"action":"insert","lines":["// "]},{"start":{"row":211,"column":0},"end":{"row":211,"column":3},"action":"insert","lines":["// "]},{"start":{"row":212,"column":0},"end":{"row":212,"column":3},"action":"insert","lines":["// "]},{"start":{"row":213,"column":0},"end":{"row":213,"column":3},"action":"insert","lines":["// "]},{"start":{"row":215,"column":0},"end":{"row":215,"column":3},"action":"insert","lines":["// "]},{"start":{"row":216,"column":0},"end":{"row":216,"column":3},"action":"insert","lines":["// "]},{"start":{"row":218,"column":0},"end":{"row":218,"column":3},"action":"insert","lines":["// "]},{"start":{"row":219,"column":0},"end":{"row":219,"column":3},"action":"insert","lines":["// "]},{"start":{"row":221,"column":0},"end":{"row":221,"column":3},"action":"insert","lines":["// "]},{"start":{"row":223,"column":0},"end":{"row":223,"column":3},"action":"insert","lines":["// "]},{"start":{"row":224,"column":0},"end":{"row":224,"column":3},"action":"insert","lines":["// "]},{"start":{"row":225,"column":0},"end":{"row":225,"column":3},"action":"insert","lines":["// "]},{"start":{"row":227,"column":0},"end":{"row":227,"column":3},"action":"insert","lines":["// "]},{"start":{"row":228,"column":0},"end":{"row":228,"column":3},"action":"insert","lines":["// "]},{"start":{"row":229,"column":0},"end":{"row":229,"column":3},"action":"insert","lines":["// "]},{"start":{"row":230,"column":0},"end":{"row":230,"column":3},"action":"insert","lines":["// "]},{"start":{"row":231,"column":0},"end":{"row":231,"column":3},"action":"insert","lines":["// "]},{"start":{"row":232,"column":0},"end":{"row":232,"column":3},"action":"insert","lines":["// "]},{"start":{"row":234,"column":0},"end":{"row":234,"column":3},"action":"insert","lines":["// "]},{"start":{"row":236,"column":0},"end":{"row":236,"column":3},"action":"insert","lines":["// "]},{"start":{"row":237,"column":0},"end":{"row":237,"column":3},"action":"insert","lines":["// "]},{"start":{"row":239,"column":0},"end":{"row":239,"column":3},"action":"insert","lines":["// "]},{"start":{"row":240,"column":0},"end":{"row":240,"column":3},"action":"insert","lines":["// "]},{"start":{"row":241,"column":0},"end":{"row":241,"column":3},"action":"insert","lines":["// "]},{"start":{"row":242,"column":0},"end":{"row":242,"column":3},"action":"insert","lines":["// "]},{"start":{"row":244,"column":0},"end":{"row":244,"column":3},"action":"insert","lines":["// "]},{"start":{"row":245,"column":0},"end":{"row":245,"column":3},"action":"insert","lines":["// "]},{"start":{"row":246,"column":0},"end":{"row":246,"column":3},"action":"insert","lines":["// "]},{"start":{"row":247,"column":0},"end":{"row":247,"column":3},"action":"insert","lines":["// "]},{"start":{"row":249,"column":0},"end":{"row":249,"column":3},"action":"insert","lines":["// "]},{"start":{"row":250,"column":0},"end":{"row":250,"column":3},"action":"insert","lines":["// "]},{"start":{"row":251,"column":0},"end":{"row":251,"column":3},"action":"insert","lines":["// "]},{"start":{"row":252,"column":0},"end":{"row":252,"column":3},"action":"insert","lines":["// "]},{"start":{"row":254,"column":0},"end":{"row":254,"column":3},"action":"insert","lines":["// "]},{"start":{"row":255,"column":0},"end":{"row":255,"column":3},"action":"insert","lines":["// "]},{"start":{"row":256,"column":0},"end":{"row":256,"column":3},"action":"insert","lines":["// "]},{"start":{"row":258,"column":0},"end":{"row":258,"column":3},"action":"insert","lines":["// "]},{"start":{"row":259,"column":0},"end":{"row":259,"column":3},"action":"insert","lines":["// "]},{"start":{"row":260,"column":0},"end":{"row":260,"column":3},"action":"insert","lines":["// "]},{"start":{"row":262,"column":0},"end":{"row":262,"column":3},"action":"insert","lines":["// "]},{"start":{"row":263,"column":0},"end":{"row":263,"column":3},"action":"insert","lines":["// "]},{"start":{"row":264,"column":0},"end":{"row":264,"column":3},"action":"insert","lines":["// "]},{"start":{"row":265,"column":0},"end":{"row":265,"column":3},"action":"insert","lines":["// "]},{"start":{"row":266,"column":0},"end":{"row":266,"column":3},"action":"insert","lines":["// "]},{"start":{"row":267,"column":0},"end":{"row":267,"column":3},"action":"insert","lines":["// "]},{"start":{"row":268,"column":0},"end":{"row":268,"column":3},"action":"insert","lines":["// "]},{"start":{"row":269,"column":0},"end":{"row":269,"column":3},"action":"insert","lines":["// "]},{"start":{"row":270,"column":0},"end":{"row":270,"column":3},"action":"insert","lines":["// "]},{"start":{"row":271,"column":0},"end":{"row":271,"column":3},"action":"insert","lines":["// "]},{"start":{"row":272,"column":0},"end":{"row":272,"column":3},"action":"insert","lines":["// "]},{"start":{"row":273,"column":0},"end":{"row":273,"column":3},"action":"insert","lines":["// "]},{"start":{"row":274,"column":0},"end":{"row":274,"column":3},"action":"insert","lines":["// "]},{"start":{"row":275,"column":0},"end":{"row":275,"column":3},"action":"insert","lines":["// "]},{"start":{"row":276,"column":0},"end":{"row":276,"column":3},"action":"insert","lines":["// "]},{"start":{"row":277,"column":0},"end":{"row":277,"column":3},"action":"insert","lines":["// "]},{"start":{"row":278,"column":0},"end":{"row":278,"column":3},"action":"insert","lines":["// "]},{"start":{"row":279,"column":0},"end":{"row":279,"column":3},"action":"insert","lines":["// "]},{"start":{"row":280,"column":0},"end":{"row":280,"column":3},"action":"insert","lines":["// "]},{"start":{"row":281,"column":0},"end":{"row":281,"column":3},"action":"insert","lines":["// "]},{"start":{"row":282,"column":0},"end":{"row":282,"column":3},"action":"insert","lines":["// "]},{"start":{"row":283,"column":0},"end":{"row":283,"column":3},"action":"insert","lines":["// "]},{"start":{"row":285,"column":0},"end":{"row":285,"column":3},"action":"insert","lines":["// "]},{"start":{"row":286,"column":0},"end":{"row":286,"column":3},"action":"insert","lines":["// "]},{"start":{"row":287,"column":0},"end":{"row":287,"column":3},"action":"insert","lines":["// "]},{"start":{"row":288,"column":0},"end":{"row":288,"column":3},"action":"insert","lines":["// "]},{"start":{"row":289,"column":0},"end":{"row":289,"column":3},"action":"insert","lines":["// "]},{"start":{"row":290,"column":0},"end":{"row":290,"column":3},"action":"insert","lines":["// "]},{"start":{"row":291,"column":0},"end":{"row":291,"column":3},"action":"insert","lines":["// "]},{"start":{"row":292,"column":0},"end":{"row":292,"column":3},"action":"insert","lines":["// "]},{"start":{"row":293,"column":0},"end":{"row":293,"column":3},"action":"insert","lines":["// "]},{"start":{"row":294,"column":0},"end":{"row":294,"column":3},"action":"insert","lines":["// "]},{"start":{"row":295,"column":0},"end":{"row":295,"column":3},"action":"insert","lines":["// "]},{"start":{"row":296,"column":0},"end":{"row":296,"column":3},"action":"insert","lines":["// "]},{"start":{"row":297,"column":0},"end":{"row":297,"column":3},"action":"insert","lines":["// "]},{"start":{"row":298,"column":0},"end":{"row":298,"column":3},"action":"insert","lines":["// "]},{"start":{"row":299,"column":0},"end":{"row":299,"column":3},"action":"insert","lines":["// "]},{"start":{"row":300,"column":0},"end":{"row":300,"column":3},"action":"insert","lines":["// "]},{"start":{"row":302,"column":0},"end":{"row":302,"column":3},"action":"insert","lines":["// "]},{"start":{"row":303,"column":0},"end":{"row":303,"column":3},"action":"insert","lines":["// "]},{"start":{"row":304,"column":0},"end":{"row":304,"column":3},"action":"insert","lines":["// "]},{"start":{"row":305,"column":0},"end":{"row":305,"column":3},"action":"insert","lines":["// "]},{"start":{"row":306,"column":0},"end":{"row":306,"column":3},"action":"insert","lines":["// "]},{"start":{"row":308,"column":0},"end":{"row":308,"column":3},"action":"insert","lines":["// "]},{"start":{"row":309,"column":0},"end":{"row":309,"column":3},"action":"insert","lines":["// "]},{"start":{"row":310,"column":0},"end":{"row":310,"column":3},"action":"insert","lines":["// "]},{"start":{"row":311,"column":0},"end":{"row":311,"column":3},"action":"insert","lines":["// "]},{"start":{"row":312,"column":0},"end":{"row":312,"column":3},"action":"insert","lines":["// "]},{"start":{"row":314,"column":0},"end":{"row":314,"column":3},"action":"insert","lines":["// "]},{"start":{"row":316,"column":0},"end":{"row":316,"column":3},"action":"insert","lines":["// "]},{"start":{"row":317,"column":0},"end":{"row":317,"column":3},"action":"insert","lines":["// "]},{"start":{"row":318,"column":0},"end":{"row":318,"column":3},"action":"insert","lines":["// "]},{"start":{"row":319,"column":0},"end":{"row":319,"column":3},"action":"insert","lines":["// "]},{"start":{"row":320,"column":0},"end":{"row":320,"column":3},"action":"insert","lines":["// "]},{"start":{"row":321,"column":0},"end":{"row":321,"column":3},"action":"insert","lines":["// "]},{"start":{"row":322,"column":0},"end":{"row":322,"column":3},"action":"insert","lines":["// "]},{"start":{"row":323,"column":0},"end":{"row":323,"column":3},"action":"insert","lines":["// "]},{"start":{"row":324,"column":0},"end":{"row":324,"column":3},"action":"insert","lines":["// "]},{"start":{"row":325,"column":0},"end":{"row":325,"column":3},"action":"insert","lines":["// "]},{"start":{"row":326,"column":0},"end":{"row":326,"column":3},"action":"insert","lines":["// "]},{"start":{"row":328,"column":0},"end":{"row":328,"column":3},"action":"insert","lines":["// "]},{"start":{"row":329,"column":0},"end":{"row":329,"column":3},"action":"insert","lines":["// "]},{"start":{"row":330,"column":0},"end":{"row":330,"column":3},"action":"insert","lines":["// "]},{"start":{"row":331,"column":0},"end":{"row":331,"column":3},"action":"insert","lines":["// "]},{"start":{"row":332,"column":0},"end":{"row":332,"column":3},"action":"insert","lines":["// "]},{"start":{"row":333,"column":0},"end":{"row":333,"column":3},"action":"insert","lines":["// "]},{"start":{"row":335,"column":0},"end":{"row":335,"column":3},"action":"insert","lines":["// "]},{"start":{"row":336,"column":0},"end":{"row":336,"column":3},"action":"insert","lines":["// "]},{"start":{"row":337,"column":0},"end":{"row":337,"column":3},"action":"insert","lines":["// "]},{"start":{"row":338,"column":0},"end":{"row":338,"column":3},"action":"insert","lines":["// "]},{"start":{"row":340,"column":0},"end":{"row":340,"column":3},"action":"insert","lines":["// "]},{"start":{"row":341,"column":0},"end":{"row":341,"column":3},"action":"insert","lines":["// "]},{"start":{"row":342,"column":0},"end":{"row":342,"column":3},"action":"insert","lines":["// "]},{"start":{"row":343,"column":0},"end":{"row":343,"column":3},"action":"insert","lines":["// "]},{"start":{"row":345,"column":0},"end":{"row":345,"column":3},"action":"insert","lines":["// "]},{"start":{"row":346,"column":0},"end":{"row":346,"column":3},"action":"insert","lines":["// "]},{"start":{"row":347,"column":0},"end":{"row":347,"column":3},"action":"insert","lines":["// "]},{"start":{"row":348,"column":0},"end":{"row":348,"column":3},"action":"insert","lines":["// "]},{"start":{"row":349,"column":0},"end":{"row":349,"column":3},"action":"insert","lines":["// "]},{"start":{"row":353,"column":0},"end":{"row":353,"column":3},"action":"insert","lines":["// "]},{"start":{"row":355,"column":0},"end":{"row":355,"column":3},"action":"insert","lines":["// "]},{"start":{"row":357,"column":0},"end":{"row":357,"column":3},"action":"insert","lines":["// "]},{"start":{"row":359,"column":0},"end":{"row":359,"column":3},"action":"insert","lines":["// "]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":7,"column":3},"end":{"row":359,"column":7},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1634331230472,"hash":"48a7a613df18aa6d2d227d33c032a05001271b21"}